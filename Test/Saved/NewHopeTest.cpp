#include "NewHopeTest.h"
#include "NistRng.h"
#include "../CEX/AsymmetricKey.h"
#include "../CEX/AsymmetricKeyPair.h"
#include "../CEX/IntegerTools.h"
#include "../CEX/Kyber.h"
#include "../CEX/RHX.h"
#include "../CEX/NewHope.h"
#include "../CEX/SecureRandom.h"
#include "../CEX/SecureVector.h"

namespace Test
{
	using Asymmetric::AsymmetricKey;
	using Asymmetric::AsymmetricKeyPair;
	using Enumeration::AsymmetricKeyTypes;
	using Enumeration::AsymmetricPrimitives;
	using Enumeration::AsymmetricParameters;
	using Exception::CryptoAsymmetricException;
	using Tools::IntegerTools;
	using Test::NistRng;
	using Asymmetric::Encrypt::RLWE::NewHope;
	using Enumeration::NewHopeParameters;
	using Prng::SecureRandom;

	const std::string NewHopeTest::CLASSNAME = "NewHopeTest";
	const std::string NewHopeTest::DESCRIPTION = "NewHope key generation, encryption, and decryption tests..";
	const std::string NewHopeTest::SUCCESS = "SUCCESS! NewHope tests have executed succesfully.";

	NewHopeTest::NewHopeTest()
		:
		m_cptexp(0),
		m_priexp(0),
		m_pubexp(0),
		m_rngseed(0),
		m_sskexp(0),
		m_progressEvent()
	{
	}

	NewHopeTest::~NewHopeTest()
	{
		IntegerTools::Clear(m_cptexp);
		IntegerTools::Clear(m_priexp);
		IntegerTools::Clear(m_pubexp);
		IntegerTools::Clear(m_rngseed);
		IntegerTools::Clear(m_sskexp);
	}

	const std::string NewHopeTest::Description()
	{
		return DESCRIPTION;
	}

	TestEventHandler &NewHopeTest::Progress()
	{
		return m_progressEvent;
	}

	std::string NewHopeTest::Run()
	{
		try
		{
			Initialize();

			Authentication();
			OnProgress(std::string("NewHopeTest: Passed message authentication test.."));
			CipherText();
			OnProgress(std::string("NewHopeTest: Passed cipher-text integrity test.."));
			Exception();
			OnProgress(std::string("NewHopeTest: Passed exception handling test.."));
			Integrity();
			OnProgress(std::string("NewHopeTest: Passed NIST PQ Round 2 ciphertext, shared-secret, public and private key known answer tests.."));
			Kat();
			OnProgress(std::string("NewHopeTest: Passed NIST PQ Round 2 shared-secret known answer tests.."));
			PublicKey();
			OnProgress(std::string("NewHopeTest: Passed public key integrity test.."));
			Serialization();
			OnProgress(std::string("NewHopeTest: Passed key serialization tests.."));
			Stress();
			OnProgress(std::string("NewHopeTest: Passed encryption and decryption stress tests.."));

			return SUCCESS;
		}
		catch (TestException const &ex)
		{
			throw TestException(CLASSNAME, ex.Function(), ex.Origin(), ex.Message());
		}
		catch (CryptoException &ex)
		{
			throw TestException(CLASSNAME, ex.Location(), ex.Origin(), ex.Message());
		}
		catch (std::exception const &ex)
		{
			throw TestException(CLASSNAME, std::string("Unknown Origin"), std::string(ex.what()));
		}
	}

	void NewHopeTest::Authentication()
	{
		std::vector<byte> cpt(0);
		std::vector<byte> sec1(32);
		std::vector<byte> sec2(32);

		// test param 1: RLWES1Q12289N1024
		NewHope cpr1(NewHopeParameters::RLWES1Q12289N1024);
		AsymmetricKeyPair* kp1 = cpr1.Generate();

		cpr1.Initialize(kp1->PublicKey());
		cpr1.Encapsulate(cpt, sec1);
		cpr1.Initialize(kp1->PrivateKey());

		if (!cpr1.Decapsulate(cpt, sec2))
		{
			throw TestException(std::string("Authentication"), cpr1.Name(), std::string("Message authentication test failed! -RA1"));
		}

		cpt.clear();
		sec1.clear();
		sec2.clear();
		delete kp1;

		// test param 2: RLWES2Q12289N2048
		NewHope cpr2(NewHopeParameters::RLWES2Q12289N2048);
		AsymmetricKeyPair* kp2 = cpr2.Generate();

		cpr2.Initialize(kp2->PublicKey());
		cpr2.Encapsulate(cpt, sec1);
		cpr2.Initialize(kp2->PrivateKey());

		if (!cpr2.Decapsulate(cpt, sec2))
		{
			throw TestException(std::string("Authentication"), cpr2.Name(), std::string("Message authentication test failed! -RA2"));
		}

		delete kp2;
	}

	void NewHopeTest::CipherText()
	{
		std::vector<byte> cpt(0);
		std::vector<byte> sec1(32);
		std::vector<byte> sec2(32);
		SecureRandom gen;

		// test param 1: RLWES1Q12289N1024
		NewHope cpr1(NewHopeParameters::RLWES1Q12289N1024);
		AsymmetricKeyPair* kp1 = cpr1.Generate();

		cpr1.Initialize(kp1->PublicKey());
		cpr1.Encapsulate(cpt, sec1);

		// alter ciphertext
		gen.Generate(cpt, 0, 4);

		cpr1.Initialize(kp1->PrivateKey());

		if (cpr1.Decapsulate(cpt, sec2))
		{
			throw TestException(std::string("CipherText"), cpr1.Name(), std::string("Cipher text integrity test failed! -RC1"));
		}

		cpt.clear();
		sec1.clear();
		sec2.clear();
		delete kp1;

		// test param 2: RLWES2Q12289N2048
		NewHope cpr2(NewHopeParameters::RLWES2Q12289N2048);
		AsymmetricKeyPair* kp2 = cpr2.Generate();

		cpr2.Initialize(kp2->PublicKey());
		cpr2.Encapsulate(cpt, sec1);

		// alter ciphertext
		gen.Generate(cpt, 0, 4);

		cpr2.Initialize(kp2->PrivateKey());

		if (cpr2.Decapsulate(cpt, sec2))
		{
			throw TestException(std::string("CipherText"), cpr2.Name(), std::string("Cipher text integrity test failed! -RC2"));
		}

		delete kp2;
	}

	void NewHopeTest::Integrity()
	{
		std::vector<byte> cpt(0);
		std::vector<byte> ssk1(32);
		std::vector<byte> ssk2(32);
		NistRng gen;

		// RLWES1Q12289N1024

		gen.Initialize(m_rngseed[0]);

		NewHope cpr1(NewHopeParameters::RLWES1Q12289N1024, &gen);
		AsymmetricKeyPair* kp1 = cpr1.Generate();

		if (kp1->PublicKey()->Polynomial() != m_pubexp[0])
		{
			throw TestException(std::string("Kat"), cpr1.Name(), std::string("Public key does not match expected! -RK1"));
		}

		if (kp1->PrivateKey()->Polynomial() != m_priexp[0])
		{
			throw TestException(std::string("Kat"), cpr1.Name(), std::string("Private key does not match expected! -RK2"));
		}

		cpr1.Initialize(kp1->PublicKey());
		cpr1.Encapsulate(cpt, ssk1);

		if (ssk1 != m_sskexp[0])
		{
			throw TestException(std::string("Kat"), cpr1.Name(), std::string("Shared secret does not match expected! -RK3"));
		}

		if (cpt != m_cptexp[0])
		{
			throw TestException(std::string("Kat"), cpr1.Name(), std::string("Cipher-text arrays do not match! -RK4"));
		}

		cpr1.Initialize(kp1->PrivateKey());

		if (!cpr1.Decapsulate(cpt, ssk2))
		{
			throw TestException(std::string("Kat"), cpr1.Name(), std::string("Failed decapsulation authentication check! -RK5"));
		}

		if (ssk2 != m_sskexp[0])
		{
			throw TestException(std::string("Kat"), cpr1.Name(), std::string("Shared secret does not match expected! -RK6"));
		}

		// RLWES2Q12289N2048

		cpt.clear();
		ssk1.clear();
		ssk2.clear();
		delete kp1;

		gen.Initialize(m_rngseed[0]);

		NewHope cpr2(NewHopeParameters::RLWES2Q12289N2048, &gen);
		AsymmetricKeyPair* kp2 = cpr2.Generate();

		if (kp2->PublicKey()->Polynomial() != m_pubexp[1])
		{
			throw TestException(std::string("Kat"), cpr1.Name(), std::string("Public key does not match expected! -RK7"));
		}

		if (kp2->PrivateKey()->Polynomial() != m_priexp[1])
		{
			throw TestException(std::string("Kat"), cpr1.Name(), std::string("Private key does not match expected! -RK8"));
		}

		cpr2.Initialize(kp2->PublicKey());
		cpr2.Encapsulate(cpt, ssk1);

		if (ssk1 != m_sskexp[10])
		{
			throw TestException(std::string("Kat"), cpr1.Name(), std::string("Shared secret does not match expected! -RK9"));
		}

		if (cpt != m_cptexp[1])
		{
			throw TestException(std::string("Kat"), cpr1.Name(), std::string("Cipher-text arrays do not match! -RK10"));
		}

		cpr2.Initialize(kp2->PrivateKey());

		if (!cpr2.Decapsulate(cpt, ssk2))
		{
			throw TestException(std::string("Kat"), cpr2.Name(), std::string("Failed authentication test! -RK11"));
		}

		if (ssk2 != m_sskexp[10])
		{
			throw TestException(std::string("Kat"), cpr1.Name(), std::string("Shared secret does not match expected! -RK12"));
		}

		delete kp2;
	}

	void NewHopeTest::Kat()
	{
		const size_t TSTCNT = m_rngseed.size();
		std::vector<byte> cpt(0);
		std::vector<byte> ssk1(32);
		std::vector<byte> ssk2(32);
		NistRng gen;
		size_t i;

		// RLWES1Q12289N1024

		for (i = 0; i < TSTCNT; ++i)
		{
			gen.Initialize(m_rngseed[i]);

			NewHope cpr(NewHopeParameters::RLWES1Q12289N1024, &gen);
			AsymmetricKeyPair* kp = cpr.Generate();

			cpr.Initialize(kp->PublicKey());
			cpr.Encapsulate(cpt, ssk1);
			cpr.Initialize(kp->PrivateKey());

			if (!cpr.Decapsulate(cpt, ssk2))
			{
				throw TestException(std::string("Kat"), cpr.Name(), std::string("Failed authentication test! -RK1"));
			}

			if (ssk1 != ssk2)
			{
				throw TestException(std::string("Kat"), cpr.Name(), std::string("Shared secrets do not match! -RK2"));
			}

			if (ssk1 != m_sskexp[i])
			{
				throw TestException(std::string("Kat"), cpr.Name(), std::string("Shared secret does not match expected! -RK3"));
			}

			delete kp;
		}

		cpt.clear();
		ssk1.clear();
		ssk2.clear();

		// RLWES1Q12289N2048

		for (i = 0; i < TSTCNT; ++i)
		{
			gen.Initialize(m_rngseed[i]);

			NewHope cpr(NewHopeParameters::RLWES2Q12289N2048, &gen);
			AsymmetricKeyPair* kp = cpr.Generate();

			cpr.Initialize(kp->PublicKey());
			cpr.Encapsulate(cpt, ssk1);
			cpr.Initialize(kp->PrivateKey());

			if (!cpr.Decapsulate(cpt, ssk2))
			{
				throw TestException(std::string("Kat"), cpr.Name(), std::string("Failed authentication test! -RK1"));
			}

			if (ssk1 != ssk2)
			{
				throw TestException(std::string("Kat"), cpr.Name(), std::string("Shared secrets do not match! -RK2"));
			}

			if (ssk1 != m_sskexp[TSTCNT + i])
			{
				throw TestException(std::string("Kat"), cpr.Name(), std::string("Shared secret does not match expected! -RK3"));
			}

			delete kp;
		}
	}

	void NewHopeTest::Exception()
	{
		// test invalid constructor parameters
		try
		{
			NewHope cpr(NewHopeParameters::None);

			throw TestException(std::string("Exception"), cpr.Name(), std::string("Exception handling failure! -RE1"));
		}
		catch (CryptoAsymmetricException const &)
		{
		}
		catch (TestException const &)
		{
			throw;
		}

		try
		{
			NewHope cpr(NewHopeParameters::RLWES1Q12289N1024, Enumeration::Prngs::None);

			throw TestException(std::string("Exception"), cpr.Name(), std::string("Exception handling failure! -RE2"));
		}
		catch (CryptoAsymmetricException const &)
		{
		}
		catch (TestException const &)
		{
			throw;
		}

		// test initialization
		try
		{
			NewHope cpra(NewHopeParameters::RLWES1Q12289N1024, Enumeration::Prngs::BCR);
			Asymmetric::Encrypt::MLWE::Kyber cpr;
			// create an invalid key set
			AsymmetricKeyPair* kp = cpr.Generate();
			cpra.Initialize(kp->PrivateKey());

			throw TestException(std::string("Exception"), cpr.Name(), std::string("Exception handling failure! -RE3"));
		}
		catch (CryptoAsymmetricException const &)
		{
		}
		catch (TestException const &)
		{
			throw;
		}
	}

	void NewHopeTest::PublicKey()
	{
		std::vector<byte> cpt(0);
		std::vector<byte> sec1(32);
		std::vector<byte> sec2(32);

		// test param 1: RLWES1Q12289N1024
		NewHope cpr1(NewHopeParameters::RLWES1Q12289N1024);
		AsymmetricKeyPair* kp1 = cpr1.Generate();

		// alter public key
		std::vector<byte> pk1 = kp1->PublicKey()->Polynomial();
		pk1[0] += 1;
		pk1[1] += 1;
		AsymmetricKey* pk2 = new AsymmetricKey(pk1, AsymmetricPrimitives::NewHope, AsymmetricKeyTypes::CipherPublicKey, static_cast<AsymmetricParameters>(NewHopeParameters::RLWES1Q12289N1024));
		cpr1.Initialize(pk2);
		cpr1.Encapsulate(cpt, sec1);

		cpr1.Initialize(kp1->PrivateKey());

		if (cpr1.Decapsulate(cpt, sec2))
		{
			throw TestException(std::string("PublicKey"), cpr1.Name(), std::string("Public key integrity test failed! -RP1"));
		}

		cpt.clear();
		sec1.clear();
		sec2.clear();
		delete kp1;
		delete pk2;

		// test param 2: RLWES2Q12289N2048
		NewHope cpr2(NewHopeParameters::RLWES2Q12289N2048);
		AsymmetricKeyPair* kp2 = cpr2.Generate();

		// alter public key
		std::vector<byte> pk3 = kp2->PublicKey()->Polynomial();
		pk3[0] += 1;
		pk3[1] += 1;
		AsymmetricKey* pk4 = new AsymmetricKey(pk3, AsymmetricPrimitives::NewHope, AsymmetricKeyTypes::CipherPublicKey, static_cast<AsymmetricParameters>(NewHopeParameters::RLWES2Q12289N2048));
		cpr2.Initialize(pk4);
		cpr2.Encapsulate(cpt, sec1);

		cpr2.Initialize(kp2->PrivateKey());

		if (cpr2.Decapsulate(cpt, sec2))
		{
			throw TestException(std::string("PublicKey"), cpr2.Name(), std::string("Public key integrity test failed! -RP2"));
		}

		delete kp2;
		delete pk4;
	}

	void NewHopeTest::Serialization()
	{
		SecureVector<byte> skey(0);

		// test param 1: RLWES1Q12289N1024
		NewHope cpr1(NewHopeParameters::RLWES1Q12289N1024);

		for (size_t i = 0; i < TEST_CYCLES; ++i)
		{
			AsymmetricKeyPair* kp = cpr1.Generate();
			AsymmetricKey* prik1 = kp->PrivateKey();
			skey = AsymmetricKey::Serialize(*prik1);
			AsymmetricKey* prik2 = AsymmetricKey::DeSerialize(skey);

			if (prik1->Polynomial() != prik2->Polynomial() || prik1->Parameters() != prik2->Parameters())
			{
				throw TestException(std::string("Serialization"), cpr1.Name(), std::string("Private key serialization test has failed! -RS1"));
			}

			AsymmetricKey* pubk1 = kp->PublicKey();
			skey = AsymmetricKey::Serialize(*pubk1);
			AsymmetricKey* pubk2 = AsymmetricKey::DeSerialize(skey);

			if (pubk1->Polynomial() != pubk2->Polynomial() || pubk1->Parameters() != pubk2->Parameters())
			{
				throw TestException(std::string("Serialization"), std::string("RLWE"), std::string("Public key serialization test has failed! -RS2"));
			}

			delete kp;
			delete prik2;
			delete pubk2;
		}

		skey.clear();

		// test param 2: RLWES2Q12289N2048
		NewHope cpr2(NewHopeParameters::RLWES2Q12289N2048);

		for (size_t i = 0; i < TEST_CYCLES; ++i)
		{
			AsymmetricKeyPair* kp = cpr2.Generate();
			AsymmetricKey* prik1 = kp->PrivateKey();
			skey = AsymmetricKey::Serialize(*prik1);
			AsymmetricKey* prik2 = AsymmetricKey::DeSerialize(skey);

			if (prik1->Polynomial() != prik2->Polynomial() || prik1->Parameters() != prik2->Parameters())
			{
				throw TestException(std::string("Serialization"), cpr2.Name(), std::string("Private key serialization test has failed! -RS1"));
			}

			AsymmetricKey* pubk1 = kp->PublicKey();
			skey = AsymmetricKey::Serialize(*pubk1);
			AsymmetricKey* pubk2 = AsymmetricKey::DeSerialize(skey);

			if (pubk1->Polynomial() != pubk2->Polynomial() || pubk1->Parameters() != pubk2->Parameters())
			{
				throw TestException(std::string("Serialization"), cpr2.Name(), std::string("Public key serialization test has failed! -RS2"));
			}

			delete kp;
			delete prik2;
			delete pubk2;
		}
	}

	void NewHopeTest::Stress()
	{
		const size_t KEYLEN = 80;
		std::vector<byte> msg(32);
		std::vector<byte> cpt(0);
		std::vector<byte> sec1(KEYLEN);
		std::vector<byte> sec2(KEYLEN);
		SecureRandom gen;
		size_t i;

		// test param 1: RLWES1Q12289N1024
		NewHope cpr1(NewHopeParameters::RLWES1Q12289N1024);

		for (i = 0; i < TEST_CYCLES; ++i)
		{
			gen.Generate(msg);
			AsymmetricKeyPair* kp = cpr1.Generate();

			cpr1.Initialize(kp->PublicKey());
			cpr1.Encapsulate(cpt, sec1);
			cpr1.Initialize(kp->PrivateKey());

			if (!cpr1.Decapsulate(cpt, sec2))
			{
				throw TestException(std::string("Stress"), cpr1.Name(), std::string("Stress test authentication has failed! -RR1"));
			}

			if (sec1 != sec2)
			{
				throw TestException(std::string("Stress"), cpr1.Name(), std::string("Stress test has failed! -RR2"));
			}

			delete kp;
		}

		cpt.clear();
		sec1.clear();
		sec2.clear();

		// test param 2: RLWES2Q12289N2048
		NewHope cpr2(NewHopeParameters::RLWES2Q12289N2048);

		for (i = 0; i < TEST_CYCLES; ++i)
		{
			gen.Generate(msg);
			AsymmetricKeyPair* kp = cpr2.Generate();

			cpr2.Initialize(kp->PublicKey());
			cpr2.Encapsulate(cpt, sec1);

			cpr2.Initialize(kp->PrivateKey());

			if (!cpr2.Decapsulate(cpt, sec2))
			{
				throw TestException(std::string("Stress"), cpr2.Name(), std::string("Stress test authentication has failed! -RR3"));
			}

			if (sec1 != sec2)
			{
				throw TestException(std::string("Stress"), cpr2.Name(), std::string("Stress test has failed! -RR4"));
			}

			delete kp;
		}
	}

	void NewHopeTest::Initialize()
	{
		/*lint -save -e417 */

		const std::vector<std::string> rngseed =
		{
			std::string("061550234D158C5EC95595FE04EF7A25767F2E24CC2BC479D09D86DC9ABCFDE7056A8C266F9EF97ED08541DBD2E1FFA1"),
			std::string("D81C4D8D734FCBFBEADE3D3F8A039FAA2A2C9957E835AD55B22E75BF57BB556AC81ADDE6AEEB4A5A875C3BFCADFA958F"),
			std::string("64335BF29E5DE62842C941766BA129B0643B5E7121CA26CFC190EC7DC3543830557FDD5C03CF123A456D48EFEA43C868"),
			std::string("225D5CE2CEAC61930A07503FB59F7C2F936A3E075481DA3CA299A80F8C5DF9223A073E7B90E02EBF98CA2227EBA38C1A"),
			std::string("EDC76E7C1523E3862552133FEA4D2AB05C69FB54A9354F0846456A2A407E071DF4650EC0E0A5666A52CD09462DBC51F9"),
			std::string("AA93649193C2C5985ACF8F9E6AC50C36AE16A2526D7C684F7A3BB4ABCD7B6FF790E82BADCE89BC7380D66251F97AAAAA"),
			std::string("2E014DC7C2696B9F6D4AF555CBA4B931B34863FF60E2341D4FDFE472FEF2FE2C33E0813FC5CAFDE4E30277FE522A9049"),
			std::string("AEFB28FDD34E0AB403A703B535296E3A545CA479C1D8148E2D501B3C8DD8B1034BD986F13F1A7B4671BE769359FD2AAB"),
			std::string("CBE5161E8DE02DDA7DE204AEB0FBB4CA81344BA8C30FE357A4664E5D2988A03B64184D7DC69F8D367550E5FEA0876D41"),
			std::string("B4663A7A9883386A2AE4CBD93787E247BF26087E3826D1B8DBEB679E49C0BB286E114F0E9F42F61F63DEC42B4F974846")
		};
		HexConverter::Decode(rngseed, 10, m_rngseed);

		const std::vector<std::string> cptexp =
		{
			std::string("91C6F9E25D905134C8CD16A6D98F110C0A64D4BD57B4936A3005CC52C69C85B8CEE660765FC08725F8046369CC80966ABFEC2057983DD88E65A2B0790C5CA92F"
				"DF6C177D4E6BDCDC94F4440626EC1A53E6898DB22D01C40BF30CB99AD0A16925995909140767D62A89581D0B36F43472986F9D1855D8572AD9FA616B203910A7"
				"CB591555665A28202289392EB81AB49663795F13E4D5E392C930396206524B1C53B56727F6EA3994B24A7FD011C5BE2DD00D26A86A8D0DCD6A0BC3FA063FD2C8"
				"1AE68E7E518C47F0FFE568B4597E1617297350D20776B828AAF145AAF15288ABDD6FF53A91445BB909430900BC0CFF991465C25D1DB8AA34685E80455445602A"
				"CF9008B92B1513849D020213B32BD726482A68E8B87FC03B7D55A77495466F90D28EA0400D51E820FF529CB0074F5EB8181D693FD02DEAD98E21225F9AC9B9EA"
				"BAA3BBEFDFA5680AA5F52D52927996B4288EFAE5CEA589F8AE6E5612D642B0848142BD552379EBE1FB4E05BFAB1BD8F58A9DAE9C18AE9B880973E0629D9A0671"
				"AC5C02A465D60821DD2EB3A47B2CB0605BC116F4BDAB1126B45B536C5B36ECAC7B985113501689715D3684546577026595BA9E2890741E0E8AA64BD31776586F"
				"9F6AEDE831D27692020AE019A097AD98082483567715D805A49AAE1B32E9E7119C0A4FF3475B15675A52A198B82704514E661ACC0950786122C77CC511E0829D"
				"C34FA259461E4B6567AB0564A02A00B824F17A808F6CC79612F27DB0C016F52480323C96D789F82C27030E64E8CAA2B628ECE2812EE844C382FE0071ECAC9FDF"
				"99303FDABED09E9DE7D1111AE2EA01D5C27C9ACC295A26786005AC854C52DA1263DCA9DF00A432A31A8A0D56A165A821A149038BB23D6F44A1E3444C565FA748"
				"7AA6EC34CB9B4D0165A0B1BBC50976A8B834299931E759B028FCDA7AE6180665038EEEA8D9898BA4DF43E7F2F89182208B82030598E91EAF3B8E113974993621"
				"BF0E6DE4E36299DDD8A2260E43B71A2D3E78A87E1A83A429130C374AF4F1761FE887564DE50F53A000B8374E796A934997BA602684AF80A810253A59D233262C"
				"F5272F25EDC4AC3E778AEA1000C281BA37EA07848F84855857B17885594ED853F1D1605D48404F70B36E8658FF170A472B3C1E7183ED1346098C63A4EA9846D5"
				"B43F499A0308A2361281CC23158248DE0692F51D5581BD0BA5C1F0661DFCD75E31AF5608DF507673ED8D9087D2E5318AF1B3CE9A7C52DC7AAC39D6C675C33516"
				"A1D45F418D4E8B23AE1C3482AD9B3C5FDBD83C4C183D546B060545B53DEBEAD212C569399724832F1A2653A30B8A5E0026E899D281E75C482B511F45958CA277"
				"C53472AFCD08E19BFE31276D96AF9019A97E3632D328AD7B36E910CDECF3EA30F06CDCC382EB9FCD35B75CB2257BE9AFB5A02A0AA69A4002532A745529836767"
				"CC63154D203F8175E431FC81C46B0F363B66355D677112CFEDA161CE1A5269550F8694391BFA66AFFE6E43D5432A3B1BAFC2613184B003EB2B35DBA014E7D6DA"
				"69E04C5079C59232ADD17528ADE9112AFD7E421EA654958E9E996462D8040455EF28C3579886A92A14CC66F5897121C4E6A22E1602972796C6953069BD4240C0"
				"5EBC833A0ABD17A3A853C3CD32E151A29AD366030314212998612F4425444315A1F834BC86484B9D98E04F1A412E89D36695B245C56F464BCE59BCC1D1EB86C7"
				"65524EC1EFBB802C062884B3C314EA9BBEE622E33554A19A0C6108AB36962B1E7D36C909AD03682249E6A678D2A7A8E869FD5841449666EB61AD62824772638D"
				"BF5EE9DEE2D9DE8B411F893406FA26BBE95ECAC515B5D86270832262571DD67827484D1FEC97DB6B294E6D19946E834E51B9E3093524AE790A74CB2155F9A96A"
				"69E42FF0237520C12B7C5B0F02094320DEB28D6D3618291EB5BB16247AE389483935A03E605EF0961579220F7088109DAFBE50CE95D8312EC38E2F3143752F5D"
				"A2DD834500384363EAB65E0C0B252FD0F6E3C04E3909B965C3D290D9E9598551125057EA7824276A604D5B4B0A5491A273E9E3027CF2A79F076A513CBA1AA107"
				"F4E9C4A68394A8DF28A2D8746FC1739AC8D8444F007BE0D6AC072C612E6741BE3F2A8565D51BF93A6D05407BD396AAC085084BBBC6412D8054E1BA12A888D777"
				"CB6DA6016A6A1852E65822BDADFA7AB39647F801DAB30CDDACC68E297A6D7D7ED65817E7F90299478CB1DB00D2A8B2D19050736C6CF795A819DB0A94D80DC919"
				"C9ED357811CD4A3818B7671216480808121AA89C57A5B185BF41D82AF6C95D8D2871B6B6D00AD95D7282D4741FC74C4444BFA4064FEC3549CC7A571054AD96C6"
				"8CA0BA1A9A940DD9873197D6F9811A3D698670402D50B3B949B31711DC77199BEBFB68103AA80E653B6EEC95EC6ABBD34B554503633E19D16A47599409BB9C91"
				"B09A12303B554A443797AB030E5DAD22A21A32BEF681EC2B84DB234687D5227C63EC99818CE6DC14D1C8AB48254721EA89BFA5EFF3801BA64B74ED705BB519B1"
				"A70078C043C9D45FDCB2ECDA9417B061FB1AAB62B4FAC1E7CE7B936003333F04CCF4DA07861B64F7FF1F334AA3E62244C628F3EA93EB05C3628EC81D9AD3FD8E"
				"BE2293E1510713C3C41A2D0CA16608BD1915B2F7A78342CD91F1A235F0086407F333630BE919A5BF01B54D76899391765BBA01FCF4ADE7B118AAED9A1C1D658B"
				"C5172B7CD65900F03C959EE40586C9EFE8F6A4BF51F42EF89836D39EB01FBCB1D4659F12B8A33859668D47426A76699235296B01C65427EC5F96F0024AC479CE"
				"92B6A12874E46BF03694097310AE46A01CB8B96B7FDB55CFC070F8A7C4229EF78492F871542910B41F5406DB9851DAA7A0BDD4E2C917819B19A18B5A32B80F3A"
				"4505C437E844BB994D104D56919104ABC69643A686C6318C3AF0B5B8EA67C63699D61AD5681C3650973B32F01C58012ADB379FDEF0014668A9D3FE8463602505"
				"A78E4D22506969C6355C997F03FE47DCD8AFCC890BFF6238DB3F5B0DAFC5D762C1A187EA283B8612412C284D126E49825E45350FAED3AAFA320061FBAEBAC3C1"
				"0C43B8BB389F1BEB6B021728ACDB1BE54CF5B8F5BCF7A40655FA8E776495AC3F"),
			std::string("CD5C54C904BD9959572E21E001B7C15BEDC3558C00F4299C6BAAAAADA2EB86B3C0713DC3543F34850E46606D6710634A8A020A223054091DA5929EA084C28C4D"
				"03AF5892AC4A1017AC74CB4DAD48807930E45515F82915161D099748886E1A832DB09907EA188280657CDD334A495EBA8DD3446B85C887631531DB652A563B6D"
				"44F03F81878660C843C041918FCF6BC28C3A77C7CEE9F3A2A592F40DA3F213CDA79F0213B3AF08540B575CD567CC4F6D5866098525ADDC995EA7DCA0B44E42C6"
				"6470E9BB71482B81AEDC967E838172C850A270C6C4E6DCB6111B1B0F8B9F1C570184FBDB6C1D9AC54B98D7EFB4BDDAA3919523B148F0EF1F47B58C4ABDE018F6"
				"214178F455E034CC469B4E56F298E481095B9CFA463DED10FB6A02E6CF469E78C52E5B314E06C69145A5D38138F16203858792012A437A9BDAB08DC3C30EB2B8"
				"119B64AA0DF80E14B17287218A8D6144C164E89755F81FCE896005D899308988EF51B0C450EA9CE1F2115064A42DD652B808A430A28A8092353E9CD18F82B75A"
				"0F8CD0C45B91BEB7449E945AA874BB1CD2BB071D3029E726A2F38590502F492067B8006B8F4818BBCC1275858C600B40E27A7BCAA3CAAF795AD81A07918A1272"
				"9D60124B01AC1DFE042B985BFE6386A6B12B2A1C9FC5006E92B43928C683D1339A79560485181017F57BB3E89174D39A8CDEC0FD14ABE0689B008A58F5661278"
				"D0FE601326ACA463CD56B0E1507501CE312C8D7337976C7B96F99B8C18FC2AA6ED145CC22697DA253612E04274988056C1A0D6D6CA9A2921E91D659358B649A4"
				"7BB2C71CAD8961EA03D0EE56899D8411F1F98ACC973978EBDE2BC719F72198240D27E36E8360C24465EF98657415214F21019658881B855E20C61AE573B7C810"
				"772D02180D5B9D515F0ABD826E72FA6E0A645B137A56821D2702C13475F0DCA51FD55970BE6D7A100A985B7C6C1A5341EE86EC18A466D0A4F2AD89494F627066"
				"AAE497FDE37E90DF9AA28C41B15114352AFED197828C61110C8F492B8E18838F0E74C2E2DC4175EC6CC6B6942ADB219E0497363DD0023C05D6BEB2D26CE04144"
				"51A46E4DE05291106DD5C61C89668240C61C11D24B6114BEC3FAB58B5E33B6D141A0851E71705D5CABF318684C28636713A665948FE1D0B4291E4C5394563D8E"
				"2BA6E7F1F4F7CDA2AA5E67636B6A9C71AA4DB32CAD12555D07C86E3894F563461A22C5021FC3E38AA6584402EE697303F846D7E49B500F6638F45966C6C02984"
				"A04AD697F790AE509E33FA0CB0870F23DF5B2816A7CD0D573530F57AEF6F9726E3117D66811FD1B1C113B909344442B892C645C9CBDB7A53CF93DE7791E17648"
				"D8ADD429FA178B46E80B3E09A5F92110D2143419991125E108258F55CF9D524ED507FEED9489D54C568122E080007490F56CD3F825868F951966392D5E552BAA"
				"61BBFB45430B1DD9A38DB962874BE8704ED1BAADD4B4F9B1444A4627973ABC456F33C281A6D88044064246999F2C448F45FB1AA21A27FBCF1CC62E493879D5BA"
				"462E32266B6AF4410A84897F9D2513322501F2539181ACD81BCA58AB25F53890CF2A4F63F6F195A6E2DBE7079E035243B2A910793E978A9499ED7135F8EA80E3"
				"4399B260DADAE147A58B26656229966167AC1F923524D98FF40DED606FDDA2B46FE468FA5235F9271852F636048E5FB842F79A1C24D14885ED8C3814D09BC7CD"
				"395663AD985355198F5AAC7350BBCEA5D12533D41891214F1343877AAC6F13A8C87967AE3D126EE26696A43C8B07B2526E288C035239C55336291C9BC3C3266E"
				"93F04236D9A6601E2161D0208C3472EEACEE651DD82AFE205915EE340D28133EA8D8BA803B5F65E31675B9685832E1017C5D0B84DD8ABE101AB1E4C9667CF177"
				"FB1BBD6522A6B8FEDBAE46D32E43DE9DA9B22B1CAAD9568467A7DE44EBA95099C9F601D543F885377420BBDA2A51056931948D69F1394941B41ABD374FF56165"
				"ABCE9757ED4FAC056909E7D93D219183C5C965809DAC70D4FFCD69D4E911F76D8D2FBF5304A5B8C4443FD4DAE56F81382E9FFDC5D4FD00416F83A97A8E6C816C"
				"DC3BF292397A05F70774FAB0F75122C1B15615DFA1EAD319115BFBD0EEE4FB0509AFA92F1A647466FB2BCBD6F4E22A3F8853EA3D8A75EF1C4A060C0697054D7C"
				"1024860EC8C8596B5288B61D85DE934EE819FDEAAB11D52887689712B82BAC5C220123534E5219041314F0454281BECEBCF2FD9EB5A2C924758F855E232A9EFB"
				"390902A0255793BE4D49125AA528B52D468B6B9386ACF86C6B1E637B407D93F597C87313851133DD1AF4CF0C44712F2C2399B05FEE4148B92A20A94764D588C8"
				"F860831AC715BBB11AE7DF87E852620929E88801006B92D812498A6396B0226F7DF7E9883B086B7F96AE30ACE3AB2E775721531A58B038901D5462194D215325"
				"B67228AA6AA77E0B91D946C8B4DEB7D385A690F5518CFA9BDA643EAC23B10500C4F4482CA9EFF050BEF13CDB874CF1C66A727C4636E51AA1468628BD7BB7EAB7"
				"64DECF7076C1ACBB14EBD85C2588B41257335D591727ED27795ACDB54B43A359C69C2753D53A6894A074E0C3FD69A94400A99E2713E1CCA5CF5FD91673546DB6"
				"ACE3FA29EA1417E5EC89D23D32384C9B5ABD308DC08251D0F47E5153A39CE33AA16E9B97F913622144F9D3FC038620B7879B30D3DAE85F2F15F15384145F65DB"
				"84F8779C8C76A8CED14AB2BC7AC5AB4B546C2EB85FF53B65C635A5C3E962F14C9D635D83497A75983842BF75625C9D326677648BCE0D0152791A9BC51E07290F"
				"2040E99EDD05C186318D01A8E213BA13B28040D9E4E2C5948FB369CDF482F583E34830F4F7057118A012E7A19D05A72DB3833F709CEEE00C458698388D0E4F34"
				"511E61BC1E051375EDA781998227362D6F034A6D4AE93DBEDB1E12A30B39A8DF2F8D16FAF6BEA15777A3C4406C788631237C0EA6968CF60871A9A4F6E863E2E6"
				"AA84C28DEB97F95A77C805A49B3C8E1637AFB1B37CDD957F58EDB8C01011715FEED0D78DA88FE9F743E01D4E9D69383BE84A33775AF004AE2D182D6A0B84040C"
				"5491C296337E41631F9E534A35CC3C18DF5FD5C8364C7BA1CCB49689046F98849B2216B41C84B889C584BEF35065E508FC7C60C18D02255558D2A30358615C3E"
				"80C6C5D224DD3A7AD496312D7C8CA51BB6B748F53FFC14F3150EBD52269168D553B19BD8EE9117D5F4513026BFC42B840EBDCC47D9EAA649774812939EAC0F9E"
				"A8ACE9BFD2BDF352CC79BC7D249D0F433BFC285FB0E43B7B227559E38011D592342260DDAA161C6A896DA3BFA929E90D6B40D9FB25CC85A0576FB9CD82874C6D"
				"5C58AAFC953C51E0488235A42F8B93530B525F4F1E94D90ECA8397E27CF18AB931AF512680590D68DC687E37A0FD881A0B37F90B99A663D15C87DC0C331E2B6B"
				"5272201BC2E35E51A8B86671A73AC20EB406FF11C3B00CFE3B0B0929D52EB09B6D0F6A27E5EC81EF6A7EC45A3E7CED1D9C285F8D47FBC0559B55348BC428345A"
				"7EE87901DA075114B235632D8C35B67901812F0036A8F69A7E578356EF5E44501AE201F5503752EFEB30A2ED851B08DFE2DB7A20706948D9D50A3C67676A86F1"
				"C140875B1E11FF82732D231C4BA79D1E8CC78EFA78FD140A9EF2422A105B1C125756C8BE82234F81847CB8419F9ED97BBC1D5EE5C042A807665C504D0BF20C4A"
				"83BA8845C8334EB6EDCFEE025CCC0C7B590C9092A91DB3655FBA7BA4759167B6673A31BC08A06751579CB0E88AD68AEBC29156E87717BC916A4C1A35D77B2274"
				"6918784119618D68C77C232B9C52EC9FD6DAB176056F580C11F76A0BF5159B24FC5815E6877DD13216268D255D93F8A174AA667884BE1C7DB0E355C224C0A13F"
				"C01251A9B82C8088D8E3E3A445DCC7B477A26DA64E1C0AA56D002C088CDC698B6AB8EC532DD532867B20011C46D4CC3B252A8819BAC274EE4EB454A1B1B2DA49"
				"A41662FD483DA31AB736A579E5EB37A8707A393C06F1065D52A3EEDA0DA4824A9370A1FD1BB4ED61D7003F47AB310DC1EC7EE1FBBC1FF1088E862B3C4FFB1D22"
				"F6546D530A170806C139322E02F7E667853E02C4076A4C6124FDD4AA40D5917B3CE1625302014ADDD14437F138261B04D3F22F9D1F83AF63D59E768B04E65F1A"
				"32A17AE2491F09C9080928AC81F9C9B6A4B1936FA30A293141E88B14402AB29A91DDD5142563246ED7F196696AAC2893C846B975386852345CE89C98D7B5182E"
				"5611A30186D3023ABB0BD04ED5E31A9712C95A91CD2A5DDC19B9B9D00C98D116B429D4D480EDA5A667F7DE9BE66CF179D2E108CDC3E7FB677C782A1CFB57D5BA"
				"73A5CDBED3AF896C1C62970364DC7F59273F62A8DE6DDA82E6F9C61A568FCAE0C9E83680912D7146EB82294E09CC0708EA0031DE71E340B930BD218E83665589"
				"014655A1863AB36199A241B30CBFCCD52100DDC82F8BA46C109DB5585B8A2EF623E28923D283528460575F20CD1A81311DCF9343D4825584B61E79F33B9446D1"
				"893E467E01816B197018A02D7DEE65A0A1E97A877852FE099A090647C370FAE449B318D9728B967519912092235CB45E35E73AB8A9B60A80AD89490C98767EE1"
				"C992CE389F5E5D612AEA261550DA00789FF584B0809707EAB06581CC00951E792E9F0A3FD82E45429EA60AAB30A4ACD99A6C04E7A1089ED709B0DB782E49C822"
				"C1D5253D4ACD1D810A856F459E0546820C540C1E15E8202A35DB9C6477731CB95F922224FFE5465851843412B08798EDCF95F03C8504C414432710084AE0AE96"
				"0E89528F4E6D24682D29F3D6F3EABADE6A125B5B54A7B0A3F460F618210AB7E8D83FF53B4A401106E54839B8621E605F4734E170D9AD5A880CCD9463E207D206"
				"06A71F90C4B156EE9CAE9FEEFB062C23D8D889B687F802E42FC126D4543C82A7121056A494454744C53C0568F705DEF2DFC060E4D126B021A50F56CFE9AA6BD9"
				"666ADAC8F36B4870EEDBA35BB0C811FB6B1D64C6B286DEA3A1C1F70E674B299CB451CC4359142518ACE94A180BB7C88DF471AA923A79A63C9657C03FE11AFE57"
				"10A08A797AC26C97DCEA1CE91E1FFB540AD18BD3E54DBE2D3B72BBC9B777BD5ED40FE98514AEC354CA6ADB6A438867354995CA4C26C8EA1EF471CC07CCAE0F6D"
				"663CA8779652B6172CE40D49D7A521759293F1CBD2E045C79336BC030699056111517BDCB62612E6DD9BEE911E813796D859B45F69EB0B4A5B89775D50B910BB"
				"B22866894E46D3F3110399442746DFBB39A99CACC1799DE78133C38A4FA3BDFF81FCBA5842E43DBBFF74AA04C8064BD8DC643C12A78BB73BEDC8EE5F267FD790"
				"55D190036C280E332988B330DA4B08D8E37ADEE289792739AD8FD896778906554D322B2AF28A00F98E06BCA52677F80DE6C3D3B086EBA3941330CBD507FFF630"
				"AA821AC56783040035A72930E781BB2B9B01A65FA8D63948ABA8FF7F689D6A87C5E85A5F76999AF8061240CA061A929FEC8B79B2A7BC4D780352EE0E7F27AF35"
				"CE4F47614928D4CACE438BB838E0F545E34E3184EEA4919F6F802554A0821BEB508DE22D4CA267170E0823AD96437F61F3C0AF207E9080A85AAECBFB937807D5"
				"2F14B7DD4C46DF7FFE2A212842A4FAFCF38B9AB14886F9E698789D9C9279A9E9B946E32E0F287B8182B19EC7EB35CD00A8E8A9FDBD7349936A08ECF310286A2E"
				"DF659D77DDCE68CEEBD0D42ADD7E3D99A89CCC702E90B7C0F00EC5A72A130A6723DCAB81B974A9C90EFD8F2C0B4C6C7F5A0D1DF5D41D8A4CE0AFE0990C6C6D06"
				"4D77F442C0315C1C8CF133A8A427D42310AD21EEEE6AB320256DF32DC4D10B3547635BE871CEEAD183CFA293DCCA127848AA4581C51C3560FE7BB558198157AB"
				"07DCCEA9817403F327EFE624EB60A6157EC8EDE3504CD0BF185F2DEFC55352F19CEC8E0D6E94E9F31C7F39DAB0699CBF25DF17DD609C9900641B49EC4A60612D"
				"536B5EA22423DF2A316AB63612733F45BB5003A120BD5F9373834AC0E7DDA6A7CD5DFC3876E1FB8EEB1E43B05378BEE42EF9BA8064C4CDE584D092C34C0FDA32"
				"D20015E6E933EC45D69C78ADED68963E45800A42F1AEF7CDF8E6A916DB324AF6A90B27EA6B08315E50930C1086EAE2DDEEA95AD916274DC90596DAE2A1175299"
				"4352AB817B9F576CADF12A9A124712AF5B458E0D4B03E33EF357EF537D28E62F")
		};
		HexConverter::Decode(cptexp, 2, m_cptexp);

		const std::vector<std::string> pubexp =
		{
			std::string("5D45FF82825E94F186859A06B450F72CF013E93E65C348163772099AB01FAB739DAE061A6CAA67C83D6BC3E2854AB7FA5200A67F57CB350CF88F5628CCA54ECB"
				"13F166EC306AE2ABAD6A68344403E2984847491E4C563560499428101ED0ABA06C289DC1470BBAC65068C1465531FA0020141DFB7912153FE8C4235A5046499C"
				"1D1941D954910AAED373BA7FDDD0836923C66E2921D337F7D9705D8A562A8CB81949E3EA15B6A48EC2EC85417666552497963B7E0E7005EA658358B54AD091A2"
				"AAA3E4BDF848DBD5B33935D188300B0BA6808E4720C5B4259A3A24E06BFE562A96A0E36851652326516207FF599B4565C099763213AEE4E4D83230BDD21E14C9"
				"CB226AA99B26DA42516246512958953655EF08A21BA675A146CB10A81E4D8B1123509175ECAA22AADBC71E6686BDCDB2951771877F46BB2382D053E7DE7EA44F"
				"504550A68C07294A44E5CB232B4361487349BF31CAA1BAD8C31E499448563F86D69BC7493FBB9780A6D9FD20BB94F3FB0CD17266594A573E05A33D4A028AC085"
				"25D1E97930B7748E32ED1E10D661807F901C7A8A51BDD0D8A2513AF161A9C75E545F2E62231A4F76AD4D1E999E7CB71BACB0AE5855993F3E140ECA4193B7B684"
				"FE488A3567542C5284F46684D236550A1A27214A9A3B1CB015DA240D5050B8C7E012512EC84A2ADFE682E3A7EE36911273E9A2D133DDE10AAA10E151081E10C3"
				"006387D68440BFC9EFC41046A9E3497F4454502A698649BA558E1EF25431B905DDB14F4A280011751BD118F915BF5528A8A2AC262A415EC9D164032B36AF0F03"
				"DAA4447E8C2FD97319E4288AA92523F475B840065B2672703D24B60E7C53D84C728C21EB7568D2004911485147682ECD2AFCC4A2440D0D8D5027DD8D5C3DA0AB"
				"376B892358108AA4F4B98A8047AC0B18E1B797650A10148D833814A8B56E24456060FA13F37548694B9BD9816603359D5B4691A08725D5EDD011D506FB42AE44"
				"D6A43F24E497A8A7D934C8EC1BA937001E5D849508FB644B4CA9E029186298B79802C53585BC62C683A2C57E60198EAFA6F06D89EEC5B45179FE04FF06A50798"
				"F80FED6F9815588498F680F2555BD81B8CD2AFC92EF558FD4D8BB07142832FD88A85CA983AC70FE51AC8FC73772F2104F77909BE0A08BA3E0863905BABC34EC5"
				"45BA9ECB04D08C3F82144578FF5C742A9A0241E5165F7E619C9838119D90E77094852E88F9812F8497702CDE911BF6605103F5CD9834BC7C1EA51F2C3082221B"
				"6025F1B007895619A0E3F209D40395EB2505FA71952399CAC922EC025A44B008ABF113C05C4003DE2D5A324BE443C03058FC29F061B4E923C5AB3AB0660865B0"
				"2C5141A49A893E64477026BC79B06E33329D89B6CE06E3654B0989B85A8E6822067F161E5D07F004324998CB9B4C358E5C1C5531894EBD8983EB1192D1A3DA5F"
				"6B95C1D2B680D7ECBBFF1466AD1FDBA55C316EF9E5D3F797A10A584A851A44C50BD7535C742416372598BE4A1619776A0EF113F2AD3BB1574167F81E502400EA"
				"E3391CA3E70A90D0C9401D59961688A951156A66B2D0B67A2B9EEF2546A10C9E752C0FEB855D06228C471BB672B0A746AB27BE291CB6ED9E3A1E9C3EC54690E5"
				"1F19954F02BFF395C9BF4A4DE02985AE729F464130533472370C3F08C09942A6D8346277FC4C87089E18CE4E20135858B3075A6C00E2185345F596E6606AA928"
				"CA282E48988365D480DACE63A4ADA25C1FCFECC9B0C61B08E8F27050A55E1E46AF072B08A9588618E1D72D2BAA2BAAF0D940521B858222C03280C5024C141E6A"
				"8F65468BD3E9B28F3D28E95B83A6324B28DE8171A84043536DD2BC8D4117928B89966A2955587068A2D161214B0D286395232024B2C1A1D5692CC879512AA8B1"
				"E328DE0BB52D5F5B2FB1508F016058E6B92384E0BF13D0F15401B207F0DF5620F7982761807EF8007E6CB18ADCABBFDD35588AF35478FA3C2D468F605F34A83B"
				"0B29A2451096DFD7CC6557324BACE811F877C558C79B5575DFF983A910407573422A43A136C804255ED0231E5AD76A0D81EE83B8D4069DD01BB251FB04235267"
				"D692FD5E52C959C81AFAFE809441165686BA50F0C51C76BDD99C32AC02607DD8437DEC744327907A284BD6080E3D4C31D4C3D227953735D8B5F592ED508BC98D"
				"E42EDC45D483A80A38FC750B4D763B4D8D2848AF095250C907A89B04B4B7411CBD55F9D015B184248D1455C5F54B51C6908B2829301B87033549045277601CD1"
				"1ECE590688799437F02C7A224FB79DA89B6624030670599D8C8F62290E6CBDC56B886B2594A6ACC5286310C49E0A07DA423F3E70BCA083E81EAD7C35A69B7B76"
				"7CBBA942F86441D2BD9F65C90B1EB896918282DAC3159ED2D17EA128466F43CB4E15F76EBB72A643F3DFD678F71C09218B69818E2EE9815D069995228A247ADA"
				"4146CC3B72395A5CE7DB7BD94C5449282CD5317EE22DCE1684FAF29A80E89C00B0B5822F7C2907B838090C11A632B54CE648015FD5C0D0E99EDA51B72BC2DAAB"
				"1C0EE1111B08003F28E65E8B3BDEB037CF8F221DFCDAF5950EDB38D506D85BEF"),
			std::string("E5590F119FE99FAF94128B1259871A5D9DE6DC9D73EF68DF5393EA142DAA69F677E27EA8695997959D7F6ECF6B86975C96012DF9D3EF405E545A42D5CC354588"
				"27FFB05A9C4BDD0B4A58EB160625DE746A1DEA55185304555D791C7F2E21C8329E2AE1085124715970B290873265DD6B8D268926BB700F7E1C6C04C2F96503C8"
				"D28911C243715750077CC29A32EB015440B63F952AC60961BD22D745C4D729986DB35A7E71F825B21EDE88C77B90918ACD5548DA6A5D020EB74B6246296C517B"
				"EAA0EE2E960FC29326AD63621D3470457A4F5AEBE1BAABA9838E5AC5117A9812FBA58E0348B443E6AB6802EAD6A3085E83CAA0920CAC2FA906D9FD860EEB57D9"
				"8D89B37E4AC60194B543E3E0CC9BA1985026D792C6D4EC22A4DB94E77A5C794C43B12483F19B0C83C5C6B3446E145173E44238BE244EAA81600D370E5FF4E400"
				"847CF10074D574407E5DCE6274BBF568A286C9F8E73100D4CF90F7BB3D2C07D87845A4FA4ED14B887A0EAE8004D94FC0195C103E12CBA55E1127BA67512B230E"
				"48EBDEFC6A9C297AF31C89C66054359D55D7D828622E7E0DFBB8E4449332EFD52356B5317CE27BF0E10C27E317E286E2F6A1F34FA5176055153D9343C77FC25B"
				"6CE20D8481529CE48963D55EC620BA6874CB2BC694834E5B620F8120D10974F10E685B5064C998E40202E66BF84528A529FB931E05628E14E2D69A58D960BABB"
				"966FD456B56A6D235E96B4A5087E862A00C9C269B4A8D1C99F4D7DC91C5D0737E29A086F3D6609410E5D0D84452B4D36778D79A4F35A66E322C590DEE2760002"
				"E657BBD8A0DB0425130C5D42ED04C050B49E213CAB91FB5960A97CDD2BA1603A2574DB7392768E2F6D0B2C3327703F230CEE0B8F7A11871A8A16AD590D5FA68C"
				"228DF886A04E2EEAC35267E06F33365125295FDE8D7368FE63CB80DAC73DCE9E52E5223409EE645BC99285495222EAA36E950C54304F9718E8BD4EBECADE0BC1"
				"C3D88A34AC9B757BC152C3AA72077C2AB6D6C8D7FAD245A42E580B68922A4F51065976C42A791D6556D56CCDB70A5B93699B158EDA6AE488B4ED53416C17E600"
				"30B956D0F565EB3963AAAD5826B1482AD9D4C661A6E27C3898A178FCD21E1CDC32A153AC3FFAE07030AE6139D60DA0088BC879B2C69842D722B17D06C745FD3E"
				"2CA6CF6F82FF148B4B1006329CB6167FC637E8367575D3004B4A76DC543BDA0F750D9A6D714FBAB913088334C64DAAA8C15A92AC8FE9A20223F50D6DA87121BE"
				"47998D57DCD8074C569CB5243E147CAFA675DB95ADEB94FB53541ABC58A33AC44FD90E43C8E2043CA03CA3EA1940371E1B4E28DA3BD73943F6996A826DB53A2B"
				"27C4E6FA4E55AD26F106C63E075FC34497BE9A660D98FE3BF70641B8602C3742658A4DCB1EDBE9554F1AD0388228D9520F047085E22D746FE94F75AD7E1C9A5B"
				"83A29D20B1A3E8DBC3E5D179B14D45DA392187F06A193491D48A6362C73177BC68D0CB8DB191EC4DFE0B1CD2B96CA35C6900C17D11642EE84A62B4BA55356BCB"
				"50AF5CA9C7D17E488EAC0E205A8634B498312291E9F48EF44F21DB00A6EABA0AE5C9F364917097874479E36FD80685CE3700688857225C065AF4DA73B8582969"
				"15281415989F45D37E62AC28C0C4368E20BC0892C09AAD54DB08EB00966A31268989F93DD2679DDB7AD5D80C1C3AE48C07F79E9F43E6913718D68C1D689E26B1"
				"A4B6C40CC939104C9F0A96C2591F8EA99918F2265A49B3A31E4BA89DE168FADCD8F9E2A256801A25ABCBA5AE5FEA69B0A8DC26571A01604CD4B412E27C224ED2"
				"B4C869D3B940262E02D2219B1BF08CDC02FD90F5120EEC16CE3585B66890237F9AD75DA0CD10D8EB051C57D0EE3885CD7DA6ED4EAFD02DE8352D8D0F99782E5F"
				"A700BB27FA101DCB0918C6C182465F8040F21326BC50095A9BAFA9759A403FC308D21C3341F34A9BB9B29566303771BA532C1EE2B570A07FD522A11B153560C7"
				"C8DFC6E9461E1EC6B5D8312A80DE014869DEED0643C4C4A9B1357F57423E72CF92ACFE5EDC06236043828AC8F0F5AA16D405BBC15B7E7D4BE5BFF710241E9CA2"
				"F1F69BF674CC279AE70C2E40474C9F08FFB6896B879017C59C33D55EB6390611BE5B839F984A91A203A5C141E8908671041C25F04E87FC268081131212ABE83D"
				"867D481643C3A272E94A0971DE277292666825280832723042801F7618984143E7E741C6D0AAA28988446B21AC4CBB1C8BD1BC795F3C806B35C3188CA66DEEA2"
				"AD820EBDAEE461455C69E6E098319D386974931640F6053A932982A1A66C7209EC8F9AAA545DB4AE90B547EE1BB7D88847265C16C2282BFB014C8C8008308763"
				"02BBE346BCE0C0DE8EE78FEEC98B313285E56C9366249B5C2ED46BD28641414AC11287D868A780DB96DA44535BE39035894E5615DCB4EA3DF81AA24F17A7E5CC"
				"49D9D587382830685F0F5CFA498A438B28D9EB319A0FA902388A74B9A84BE08130F5543E48A36CA87302AA90489C2792D233BEDB20B26C511AA9C13889E8DA2F"
				"7F64A2C4FA443FF1A6D09BEB243698A1170332E19D179B393A16E182F1164A3725612563D77B65E0988096934D8AD022031F5C2608860CA0DC12C8AB98A9916B"
				"C20E80403D07DB60C155F0A1252B048842A4609B42CF00E2F76C906604DC320A928A12645826D84D6FB116CA1B4246A1CAA020F718FEAC2BA0A9A13EE49E0044"
				"580BCC4484B3ED958891422B02CA3E16716562B58C670653C5555B51B8EA93919F059A2A360E8418C74BB183BB7539996753A15C60A5B4D90A780530008ADBDC"
				"186AB652076EC2D507BDB5150D7CA024E41F770FE8F264A439B51EC51BFA08BF2E1A5C114CEC8E5346C5C7A1ED57E862D978A725A4BF9F42D387B69FC64A4569"
				"9F419EEE5024765024015F9177F09A20B20E1290E87B51AEE156AE658FEE51F48488FB417001FB00CC9B16861E1C53560B118C0FFBDAB935363E626C9AE3C086"
				"D86DCC11E80A3F6979DC970626B596B5685853A21916775B21DFB38DBD6E1EA429B5F070A1FFCF6BB83AA0406A4F347A6D71B820669D5BF7D95610E2D4E69B9A"
				"A8945BD354D0AA1E39996A73018E94E6DBA7B6112E6D5BDD98726EFA1AA1AB66280D625326458702C5EC74A8A40EE7F91505352A23EA035484176D3C536C0599"
				"F94988B44CC940E7AED7C540E2796BAA0BA0F9FE02855BB138FACD0D975FC6267EDE332717CED9F1B521535B65300818B76FCCEA42542C504E8093E9FAC29E73"
				"4D51662EBA3EC0053CA960F2B830AD0BA2885A06C30201B2C871A68B299FB6BE2D0D72194F576F197553E8E666C0B61E9E5646199E447D9A473D43EDCAA6169D"
				"3132D15A4B46A25A22C0216D71634A78E26EAAA9827E9128A1673A280067EA0134D9E042E81FC502E31F88C4C1F167601D311701BEAC9C6F003BC5CD2F2E5F18"
				"66117C8CB64C3496BAEC5870031DDBCA12A05B15F92846BC96C30008759DA082DB0B580455B49FE318A9C4656DBE2E89CD85C5F5116C240B876BD961B3D4F6E2"
				"B7A4BE7AD52ED3B30D587A0825D154EE3BF84F4925F5D147D8D85022379DAD435A944A455022F256D098C9407AA1816DB7A17A91A8C5F2668538352A86349975"
				"F44BB2EC00115B68007A97D3FAD5B17854E157977A6900494F6583FADC4008085F87B21C5FA892B4F7FA355586C37D10F50C74B469CF0A2D62BFA098DDD6E204"
				"5F6115DA815E72585CCE2A09D1048EB99B6633B7E981438DA3216D829219C7BAE0F1117AB3134586C648B8C88C7DA42B861A0A4AAF82B1E02551A09C49741099"
				"A2EBD872F7AC0384490AD7EB56ADA1EA15F31BA810725D4D21D53A97B3E20A05B13A66602C30F62D5814234A3023C2B57FEE40AD8AAE949905611939FDEEB226"
				"EC4399835A48AD1321E6535D7140C84BD99AB6A5AC634422E29932738684C83E9E0F4129F2C97BFCB2875B4B978508963417A9993108740D185F82101A2388A5"
				"E1635C595E4E247C740DD8B7B1891F046981887EDAB1E72E404F149587C5261A3CD6558ED39924197A872EF8489C72F1CE3E8774B9BD9A86C005BBB01A85C4FC"
				"063354BD48CE29F75D7D8852609CA52F0A703FE7FF154978539E43A0417EA947FF437BB7C954B887E28818F285A4FE96D049CBD96134125CDAC325BF616843B1"
				"E79C4C72E84D356D7D32CAA02967CCB470EBE02994C54896A1C866B8A3616F6B89E7CB70B20A090365522F6A1DDB5C62E69AE244E70534A2B0B5895401E8C38F"
				"C99335CEB08ADCD16FB314D39B158676C5221EF500203E726FB606AE19914CEB130945396096D3A1B88F294B95C4C96301AE5DB0DF5628A38821CA4723EB8484"
				"68FFD92F24D5E03C5F49F8266E3C194950A2E987C993621B034950CCB7CE132D1604D816EAD8C551FCD05FB50D53DA6CE661518E16F4139E62EA2FC350834A62"
				"7902F4A1B9F642FCCE8F4368B66B125C67F7F8FCA0E8AE39C77780608D47B4317FCE830E6A03E66C2A3614C8C8022CB138AC27ED9B789C20952580B7D13D2D12"
				"040D736EF845076CBDD9A130756FD90DC9D572A846D30F98E23C57F363944093E45929144A123B818A2C9B1AE4E2B8A46AC7E48B436D25A683F0B7A04CB8F207"
				"ADE537B53CBEC69566D63401818A0E3A76FE7891074D458AA92891474077CD1A0201DBC828BB916F0366EF1AA2003DB3885E28A83254B6CBE554CD5A0FF994FA"
				"734A54A36353AF5A098823E2DB76D218508DB02A923297EC096BE2646430701F7B4709A0852043F8DA34B26815414F239E301F4A90D991F721B4002D0355B159"
				"E37C55D58888097D9E5E47502DD2B8BC9C30CDBF86004A27C1465B650FD878FBA31DD8C47E34601CD4711AE023EC0F16226EF113172B47E0E61D231A5489A097"
				"F8678C224091FC82AE550BCC59D65C95C1ED1A05B96164712B1D295C40B4D8E116469C812DA2242F954182B00E815988D4EEAB1CA3FF60799D63D1D7C52AB53C"
				"9FD9A90026418063AF8CB373F3D90E88DCA4A4E499AA6CA825C38D9D10A80D8DA5D24275F7DB60C3048AA9D01982F7C89A0664851C72A0AD5F0953651597E85C"
				"1C0EE1111B08003F28E65E8B3BDEB037CF8F221DFCDAF5950EDB38D506D85BEF")
		};
		HexConverter::Decode(pubexp, 2, m_pubexp);

		const std::vector<std::string> priexp =
		{
			std::string("AE1320B8A539B9BE069E05D91922F157194A462EBA2A01597BAA5C46941C60386A9A3DA0EA9AA4919DAD050E385A7A588B098A7765886244DD42A8D68C465FEB"
				"E283DB376A34B1634601804A5DF49EF71567D18A1BC0D065F3264A0093158049D9BA8219BA67F91C22539E9F28D631991287B2C0B35C2140142ED120A533235F"
				"B0575445182FCF29613DF57CC2C20FD0A7FD3AD9E509C6F90D63105EA2F5B3CA15184A3C03B29E15CF9EF6983BD002648112B8AF70A1A367D18697A872F48A02"
				"367C4C8D378D6F712FC2952B197606727A8DD998D9406FB1782843561AAB54011DAB99763BF03CD781E9797FF149A40FB0C9A5BD2C2259FF1A0701B1F56B9CD1"
				"0E6C7C9528009CC4F59E2B6761CA25C99CC72632F10AD87BAA496064725268F62A41464D862B59092017FCED08982A33BB25849BE4EFAD698E79B4C32A0DAB5D"
				"31A6ADCC4D325B39A0E294A768ED140E0345D724B8AD23AFA4D1027DF6453D81919B76FA4A969B6EA85B58B6A34DB4B19A929D52239B79AF6A982115B5FBD4F6"
				"233E020D70442263844737F4E2C41D88C3D199FE615A845A80A6EE385F809D86B8C6D80C42E51170B0DD7FC7CFAE0975AE8A93D7A8E110C61F2385E30AEDAAAC"
				"05C20929A2C8AF8D911506FD4131E5913EE8AEA2183B8851C473E1B82FE03B3037E14F3FDC8F3062D468139AB9A5A95EB73E2D74B834F033202CDF869354A25A"
				"0654B92BDE35EA503C79BB8AB0494A09D2B4BA5382C6653430BC6D145D8BB36342791882927292F5ACF94173BB0101A4EBC338A2C314263DC2C2BB01A157E0E4"
				"3E602DCA30682636B97BDD8816D8B66939D911A928C2EB6F3E6BC5D371E3B7CE6B9D8DD387A0F9751D944966E16E555A1BE53BEB4C38116CFDF11475A5A42347"
				"B570B8058FDD2D846DCC6EA786DD425091B25B9199B0ACA41469473BB743E018715E116943128995E2427BA4DD5862D4CE588726A53E5CAAA0181D85BA233C29"
				"F5B4110F57FD69E7156309DF9963F884564758DFD106C49991173A315E34120B4BE7412C0402A38A0415041D8DD553394AF1253E265C017145002C3E25A6F617"
				"447FDEE648B783A662FB92C5FA96B1B694D7FE39AC2004922D8A530E4D8BF258DDB6092439632105786AC41F17CAAD70AD44AE1D6C3CE9889409B5D29DBAF82D"
				"75DBE5CED08E7C6CE49512F147C402F3CE3204E7E05A0FA19FD31CEEB13B0C0792C13A92676F74E8C30624FC0A2DB36BB6B2679BAD31761E4A254B2FDAD62E38"
				"53EBAA59E83D4C55C9C4F52010B027897FD1D469447EAD7B83EB6CB89D5CB0641950A787CEA5459AE585D982C6B6B0A51F9CCCEAA1137C31500D36471FF59CFA"
				"C966A31860B9DA003D9598241EC965EFB094264610DF941B02BA3B16A79606BCA892778F34E1330E67DF049B40C3748ED36302E923741CA164C757A04618E8AF"
				"168627110586E2FCE7D7F50C8DE57889380D76B440A3C18E2D6D931D82C713C27A111B8DC06BDE651F07B22559A63555D04A65BD996F2F176606427625C1CD07"
				"64E8662405EBF780C49EBABCECB6C36FDA02BF13B6D35F726DCE9EE088D3685431239370544C026E6BDCF7BC8172ACC5A690EA4910DE53F88A01E035E2931570"
				"451D115B90E3941B86846C2258D8E3C59DFF525E24E4DCBCCFC07D61D4BA6ACE61B504095294E163A1196A406494241EE990A2AD0D41E5504F068F708951B682"
				"C0651F969F429ACE191E84AE22D0EAA0BF829E2B207C003513EDDBFE913ADC6B68C934A907189A536722225DE4EA18AA41C022C1ED77548FEDA5A2A225342E8E"
				"2BF1A48D77821279D11D7634D59166FDD719AA9CFC4E6DDEEA983B5922091C9E119A9006061844568B916FE5967BE981482004077FA0016C00330F10E8419426"
				"EB9FD36B6EC1906EA7862ADCA129A3E9E097A5ED8982E7DEA418C258F20563B7336946E52FB9780C22965B8640A5E0C06296AE5FB3C19C319F5328E1F1C25138"
				"818018AA212CDBDBA897F98145864D1A34D468BA2BCA564196E67749CCD0E0C3B5AAB8561EB956D939D11E8BCA06B62AD1957A6A7B369307EB6EA1F8C25F9C98"
				"5229DA780781A8927620A5399E18DDC7019D6E0F2438CAD2465769A17C06C7D87282AA4848C48AA707930DF9EFBC8E172344638D840D5E5DECB7EC0E8DA7011E"
				"73D53244FEAB52D1AC556F0BE5C5A4440D68CF8E3AF6B1F1BA4B8BD9903022148D64E126AA3E4E8A2C4339B0D823215DF46A601D1B84DE8AC110818348ABFBC8"
				"A37D29F40BB3656795340FAA57B63FF15FA00902E701AD51185D0DB63BD029DCEF8999839C8CD56AB217F7665F671ECCE4B11586362023E1965A1DBD27B287BE"
				"085FEF21A439142111B88E67B31BBC763F5C761575E1A9AB975D843D824FD6E6B750385428D56D6B78B1BA05F00DC60349420A7566990821193AB70BA48975A5"
				"28718CB526BF6D156D1F0CF23D9207A41FCCB5848D09D66266665A4C67DF53DDE6333413175696F91B944B14DAB4B7CE3D3B749007548FD647FF63991A4F2DB3"
				"5D45FF82825E94F186859A06B450F72CF013E93E65C348163772099AB01FAB739DAE061A6CAA67C83D6BC3E2854AB7FA5200A67F57CB350CF88F5628CCA54ECB"
				"13F166EC306AE2ABAD6A68344403E2984847491E4C563560499428101ED0ABA06C289DC1470BBAC65068C1465531FA0020141DFB7912153FE8C4235A5046499C"
				"1D1941D954910AAED373BA7FDDD0836923C66E2921D337F7D9705D8A562A8CB81949E3EA15B6A48EC2EC85417666552497963B7E0E7005EA658358B54AD091A2"
				"AAA3E4BDF848DBD5B33935D188300B0BA6808E4720C5B4259A3A24E06BFE562A96A0E36851652326516207FF599B4565C099763213AEE4E4D83230BDD21E14C9"
				"CB226AA99B26DA42516246512958953655EF08A21BA675A146CB10A81E4D8B1123509175ECAA22AADBC71E6686BDCDB2951771877F46BB2382D053E7DE7EA44F"
				"504550A68C07294A44E5CB232B4361487349BF31CAA1BAD8C31E499448563F86D69BC7493FBB9780A6D9FD20BB94F3FB0CD17266594A573E05A33D4A028AC085"
				"25D1E97930B7748E32ED1E10D661807F901C7A8A51BDD0D8A2513AF161A9C75E545F2E62231A4F76AD4D1E999E7CB71BACB0AE5855993F3E140ECA4193B7B684"
				"FE488A3567542C5284F46684D236550A1A27214A9A3B1CB015DA240D5050B8C7E012512EC84A2ADFE682E3A7EE36911273E9A2D133DDE10AAA10E151081E10C3"
				"006387D68440BFC9EFC41046A9E3497F4454502A698649BA558E1EF25431B905DDB14F4A280011751BD118F915BF5528A8A2AC262A415EC9D164032B36AF0F03"
				"DAA4447E8C2FD97319E4288AA92523F475B840065B2672703D24B60E7C53D84C728C21EB7568D2004911485147682ECD2AFCC4A2440D0D8D5027DD8D5C3DA0AB"
				"376B892358108AA4F4B98A8047AC0B18E1B797650A10148D833814A8B56E24456060FA13F37548694B9BD9816603359D5B4691A08725D5EDD011D506FB42AE44"
				"D6A43F24E497A8A7D934C8EC1BA937001E5D849508FB644B4CA9E029186298B79802C53585BC62C683A2C57E60198EAFA6F06D89EEC5B45179FE04FF06A50798"
				"F80FED6F9815588498F680F2555BD81B8CD2AFC92EF558FD4D8BB07142832FD88A85CA983AC70FE51AC8FC73772F2104F77909BE0A08BA3E0863905BABC34EC5"
				"45BA9ECB04D08C3F82144578FF5C742A9A0241E5165F7E619C9838119D90E77094852E88F9812F8497702CDE911BF6605103F5CD9834BC7C1EA51F2C3082221B"
				"6025F1B007895619A0E3F209D40395EB2505FA71952399CAC922EC025A44B008ABF113C05C4003DE2D5A324BE443C03058FC29F061B4E923C5AB3AB0660865B0"
				"2C5141A49A893E64477026BC79B06E33329D89B6CE06E3654B0989B85A8E6822067F161E5D07F004324998CB9B4C358E5C1C5531894EBD8983EB1192D1A3DA5F"
				"6B95C1D2B680D7ECBBFF1466AD1FDBA55C316EF9E5D3F797A10A584A851A44C50BD7535C742416372598BE4A1619776A0EF113F2AD3BB1574167F81E502400EA"
				"E3391CA3E70A90D0C9401D59961688A951156A66B2D0B67A2B9EEF2546A10C9E752C0FEB855D06228C471BB672B0A746AB27BE291CB6ED9E3A1E9C3EC54690E5"
				"1F19954F02BFF395C9BF4A4DE02985AE729F464130533472370C3F08C09942A6D8346277FC4C87089E18CE4E20135858B3075A6C00E2185345F596E6606AA928"
				"CA282E48988365D480DACE63A4ADA25C1FCFECC9B0C61B08E8F27050A55E1E46AF072B08A9588618E1D72D2BAA2BAAF0D940521B858222C03280C5024C141E6A"
				"8F65468BD3E9B28F3D28E95B83A6324B28DE8171A84043536DD2BC8D4117928B89966A2955587068A2D161214B0D286395232024B2C1A1D5692CC879512AA8B1"
				"E328DE0BB52D5F5B2FB1508F016058E6B92384E0BF13D0F15401B207F0DF5620F7982761807EF8007E6CB18ADCABBFDD35588AF35478FA3C2D468F605F34A83B"
				"0B29A2451096DFD7CC6557324BACE811F877C558C79B5575DFF983A910407573422A43A136C804255ED0231E5AD76A0D81EE83B8D4069DD01BB251FB04235267"
				"D692FD5E52C959C81AFAFE809441165686BA50F0C51C76BDD99C32AC02607DD8437DEC744327907A284BD6080E3D4C31D4C3D227953735D8B5F592ED508BC98D"
				"E42EDC45D483A80A38FC750B4D763B4D8D2848AF095250C907A89B04B4B7411CBD55F9D015B184248D1455C5F54B51C6908B2829301B87033549045277601CD1"
				"1ECE590688799437F02C7A224FB79DA89B6624030670599D8C8F62290E6CBDC56B886B2594A6ACC5286310C49E0A07DA423F3E70BCA083E81EAD7C35A69B7B76"
				"7CBBA942F86441D2BD9F65C90B1EB896918282DAC3159ED2D17EA128466F43CB4E15F76EBB72A643F3DFD678F71C09218B69818E2EE9815D069995228A247ADA"
				"4146CC3B72395A5CE7DB7BD94C5449282CD5317EE22DCE1684FAF29A80E89C00B0B5822F7C2907B838090C11A632B54CE648015FD5C0D0E99EDA51B72BC2DAAB"
				"1C0EE1111B08003F28E65E8B3BDEB037CF8F221DFCDAF5950EDB38D506D85BEF89E710C153F4BAB7FEA843A2565D0DB6C4DBBBD5B9E667589EE5C9EC026D4A86"
				"8626ED79D451140800E03B59B956F8210E556067407D13DC90FA9E8B872BFB8F"),
			std::string("60ACCD1BF6B2491A97CB05A35C35545DA805CD5D8D235F100B31D649F9C3BE441401A164932A03BA6067A4E85964F10E89F2295CE5D2107883059601810A1B41"
				"0C51824C4C7E8261BE2B1C097032E4709637A945A6866BD784E63C8C21423B456474570B225878D81A5BEA6EB46E5C55D26A0E6362110AE4C37EE495997D56C6"
				"7933A3E0463B8DC8B2B79887869791A32F8242BAED27E7981E77B82306FB5B8C63F9595D028986A0FF20E7DAA71AB258E76E34F48530B106EAB08226A220DECF"
				"19A90215C44AC232469569D9EB0CF004A5549E218686EE3D8860097EAA7578A487E38D47C80E76550BA111306434C9D8E221E4A582D6534646989D5B380FC948"
				"6A5864EBEE06FA81BE6759534A913A1607F71082612F22BF11E0D637DC19A3FB2F07D6F2CD19EC968289227E387E278F13F46C3FE591D3C8E90448DD1330F660"
				"05153A6D0F774A7A8162AF1DABB2310914A12E811AB89C1F59A22771C19D271AC58796CC0DBBE0037AE74D986608505BB2146375150B76C1EA7E6E5C6F418F7A"
				"600514666AC5883C9F9BFAF88AED46982F60C6D9CAAD5F681847FC58598C457C85BBB2410ED8FD093B491F0D2F3F3998852A998208C7BF3A8D1C666B53D689AB"
				"2389AC056E9695DD026A277CD484F5C892021812435012D3FB0AE956576D6977396400F6C80D3241B530940BED36560E9EE1D38A353FBE9A8DEE7E1A0F6EA484"
				"DE14255D9D0C5E2BB8FB4249389E2F840780401CA8481F4B6FB05088A4AF49CCD1575D0163168B2E2D431BFECA1DED0B29DF418BEA8D12FC9AAE6B23399AF65D"
				"D6731D0665AF55893B107984C6ACADB3E30191CCE6B095188AAD29C257EBC080A8CCD8A7C0E7F54B0C0D056B2ADD6FCC673B8B1EFD03B9C57756612E0D7C400D"
				"0941AD0E94DFF15906DE8C3F2ED5E36C9D8201416EA3477E14286E2C1A4F12876A45E943813A839C182CC2A7FC714B955A1874896B6BD8B0316688BD424E5161"
				"B87A4FAA98E001869D5A3DD56DB23454316227484B9F0C0CBFC8E48ACA701C3B2B3966BB698BA00BDAE368964D035D0C97AC8D0EB3429EE4C721AADC50C819A3"
				"94997A84A072BD7C71F50635D20F947239D33C044D7E98D42A2DAB3468BE354D79606FFA85D4613AB00606568FD47C08790968845AFA55B55E2FB92EA3D4E900"
				"4A06E0F9827B908E1492B8D32C2880A32394D270A6128CA56129FC813116C3E0B6835A71BA23F2C1FD6C4C9925289456C500F0C551052B955B73183B9014C625"
				"E003FCE01C12B11594A89160446DCCDC0F50E3ED1B3DCEA6F8295A65C5A503B9AF792452E30FA88D98ADA0184BD2FA54AC561D48EBF5864CB50CF22AF50051CC"
				"6304EA7CB413462DEB20C656BB36EC49F118FC64EBABC0D55F3051B842D09A33B0067722CCE01660330D9DE9F5DCA2806359D184AA7C3EA2582EC909290EB0C9"
				"42E4A67C76952ECF8936BDAA64E84C726E594D0E60A405691872D65041A7736DB47A165D455F3414EEA7107681B9B5A3C09F2010694BDCABC2044169436EAF2F"
				"D680ED6C0D6C04E900D200BF4F5656E84589EACDC847554D20F78FC724E59D7EC6CD21AA46E13B83A45494C8D8B5D093126650C68C5E8DE1F683F86251DB0BB9"
				"41E494575B9C693D06668E622026685A1FCA974935209617A76A84A1388680EB1905F2D5757A7D82BDE962A05CCF8BBF671D4E4002877A54F308AE895FB1B7CC"
				"4500755A22AA8C64B14EC0C11A6BE4110DEE30D87A096B35A8C22A847C82DFA5B6385638561D62FCB96AEA6F0A1BB391EC5D0848C58651195A672B90A673AAB1"
				"80D688A68BBC40034F94A970B4D548092DEA177C08115B66DEB1673A74FECB2455997A85D6A99B1B09068ED92FEBE8EB5689234536563DC2B427D9BB61F39270"
				"C613CD59F8A24C8AAA37E7DF22B1CFE6BC02A4B667CB69ABB73071BD07922008862C16D56C77DA2FB9ACDA894FA4859C07CB0BE5897EE879B3ED62508845906E"
				"535C3870E89FAD8BAB67B04D619C9764E419D59C28030FC31FA52A69AB173B6189B0C9A4535A69163C6966B349FB2A2F62C73A291684B2EA23FEB449D800C255"
				"A5E47AA4ACBF403CF143AA8C14656E3B94F1B6FB548767E0617DBD0E1AB1E7F11965E035562BCA8832A02C86DF2C5AF4CF98D02B78761A4CE40BF1303AFF6BF4"
				"9B70205172ED9FC1742D31BAC67556D5D44AA2D237F085B41CEE90DD04C344933B9CD90BEF8016B2CED898E8C54831520A653B9D9AD26546FA152872A98AE218"
				"DFBE03470A1B99B570312B1D5A8681D16236E491254C8995ED50900165CD8366ADEDB70E5AAA6F402F17A9487CBEDAB4992BCC41AF6845817F562CA05A5D19F0"
				"B42C9A6F075020DE9CC712A419F53C2CECDCB37241CD6988A8F0B3167D7CFE01E08A33FD6B4E8432518225920E895E51042C001200C84158C50587E149C75140"
				"AE584B43206E3C398BCCA1D0CF2EB56E8DCA7A86B510AADCDE621DB6B7568587D5C585B808DAF032A7498A8F07E6D645667B1EC0E278BFF48CFB10A1B89FB4AD"
				"8C50A8E4CC4222D64D86B4BB6543E99A1CAAABD4AFB8C311B47E7C08FDD170B043E65FCF114A53E75C88AB149FCB84F5BD9D9068F274160BF8821E45F6E5390C"
				"EF7294476D07DD8F4C75C4D6BCFA02BA55950A3F792D4C165579B4BB011AA042F061569F96FBA5FE5A3FE7C5026B344B1CAB1818E39207051D47A45ECA6E1292"
				"342542D1442F246743159D53EDA8C6B03AACBEC4A8533995396BC0CA3DC54FE4388E2B3E3BB8CD89F9EC5FA30C12A1DAD736795E3245324153446C7A1ABBD307"
				"15D8CC037295F5D35CDE80EDE2AE26B684877D801F284E783A9E543EC8E9912BADCED86A98E2857C93C605F7B23AAE1F3BDB922A0E6CEC78088CE1185CC42020"
				"13F85B0CA94BA9DD25745394139A4172604DC3D7D320BC15EE12E257B649AE45985B16A3FA584AC11FE308A48FA2A14301C5CC2E09DED766D06E2771DEFD911D"
				"C89EF82ADCF39941172A6BDBD4F1991F43491B3B6AEC24A92FB48199C089858324E534182BF65C7725D39837AF6AEB42B16D3650C0F613E1E89FAA45CAA19285"
				"717342208A9A219F0003EED2882115EBE0AC10FE143D19258C61992860EA205200B9754AA26FF4036F7447DCAE54E81FD14A00E4B067E4F83CE392B017F40152"
				"4ECAD7463A5E196758F144E5B871ED601D669A45657CDFDA42E5AC8F106024684E5C33206DE638E4F590B7885622C72E23621129347C166DA4EA58376D44B451"
				"AF9EB4035D127D45A799CBC417736798F7D23D58DB02586814364FFF2D30A0044CAF290E9B75F076382EA7A0A44B3868F461B7FA18813656223AB44DCA71E262"
				"D8B0C331B5D09DAA8640BC4EE2DC9AB919EE4C2F408D13DF3EA147DB467A33E10D391B9FF5BF14AA881B528218902C34A8AD3B4F2D1CD492CDB4752C9C289EB5"
				"E43A659975C4E7032F8E80F6C15637A894503A450352DDED5C4BC943C634E5ACDC464280FE92089B582993B5A489250549193039485CCA0A8B21344C54E27B07"
				"C269590E8C0FA856258C391AA8E025A65DA8552FCBA37892970774513B7C375A8257DAF6D4366B5515090F58AF5206593304B021DA81F0C525BEB19F8541896F"
				"3515C80E5481DE445D81006FD954F5B4FFEB8AB5D4604108EB2D302E4D04A9E56D5B51E667BB06FE166CED2AB3E0442655563E2C143A7B2DD6992A6281D9E3BA"
				"6A6FA8AF82B8789E61CB91742B0C5BA0D99EEAC076A7FBC2A7A4DFB6482F1A768A34E201E6AB8027762DB3FE9F480178A8B9A5DC2788C9AC9A3362D2AA2A65B4"
				"0CE913FBCF705D7516592BD97868D35099DB499A1F726ABD63FB70BEE75133C5F031B7C328F94647749E8DCDC28920EA0B199A7A45A871A3C04F68D173D104CE"
				"5F16230B9E163F9F39462C24B5036443B961A251350F3C19841C84AEA86102C99659A0DBCCD6C30D3CDB06322B88A8758758B6C4250C296AD389A3D454B91381"
				"5E91A6C8BA7947BD9AD9088C250D655507F1356A627755EF6D8F3D42A0750E910B2858754734A9B352E6290BDB3090CAE6C11B814591FFD5514AEF19254169A6"
				"342F121A06034F42F1FC4C2A122E4B2EE598CD264C19DF84B2345C58F5F1BE9E8225A1466060A415C201B602240C4182754606EC350D610FD2F7218681A4A77A"
				"781AACB583222B05097F6E987418C3CD3302167B83936A5E2ADD4D0B5BE12D06A98DB490149419444B0577093ADF49D521C1458F9B800541FD1ABD4DCB413615"
				"A59A08DC355270526AFD9DF5517BBD95EF9F6DFB8BAA8665926574A8F69C24C48631EC8E8F7D139FB1C13585F06B209079CA7E5565BCE26FEA4EE9526054B072"
				"96A7EB10511CB913EEEBF4564EF141D841D390AEB07BE56F85315C2012E81A01A29B8885F52760A4524D4421DC55637EAD7A63D521F94EE0AC976E5C99A81C8F"
				"CC246F7B08BCB0229B779A1BF8910A0454071EA9001F60E4C5D6D239A66F03866CA23A76D280A1678D3A9A01ABC4F5CE2CA08C8BA90F3182CED94A4AF6B09C04"
				"546088D70E4E8FD44985BC31095EDD1F9A78E4B6778C35264161740DA534C0F2C89E42087D60BE84BAD287EBF3F1D8B4BE5CDDD8CBEC47CE10E3F6B5329574CA"
				"AFF9C6F910BCE74105A2AA3A0C5C5A8AAC0108E5C3C866C78A0991062136FEB4659F163168A7083AD689DD86DED4A71E83CE100FEC6D3314A918521E0879C828"
				"D8161166A9A64A30A5710F614B1780AC908786EB4634786ABD350AC64BD985395365B5E3C2C20F59A830C756122E3143E2D618FC1D35906D84BACCA137921941"
				"03056032824E584399A3E30654F7D28E108010BB05165284C71A625B599A4F3925F1BBE6281E0502EA1A72F2B4771D51991D7D72581D9B043DDC5D8C8453541B"
				"21533D996335F3009A00E926C18AD808EC146E02BBE56C2A4C649254127778416BB5275A4C9F1103B9C09163670C01468D9163030F60C407E95BAACE0AC5FE1E"
				"A5135449C49AF2784B6D96D9E13D3213C2784867E0A166D7B88220868BD76DF8C2986E12D2E58FC1DCF45AAF2EA4CB3DD4A5C46C7825F6CE47638B2A603A0C1F"
				"E5590F119FE99FAF94128B1259871A5D9DE6DC9D73EF68DF5393EA142DAA69F677E27EA8695997959D7F6ECF6B86975C96012DF9D3EF405E545A42D5CC354588"
				"27FFB05A9C4BDD0B4A58EB160625DE746A1DEA55185304555D791C7F2E21C8329E2AE1085124715970B290873265DD6B8D268926BB700F7E1C6C04C2F96503C8"
				"D28911C243715750077CC29A32EB015440B63F952AC60961BD22D745C4D729986DB35A7E71F825B21EDE88C77B90918ACD5548DA6A5D020EB74B6246296C517B"
				"EAA0EE2E960FC29326AD63621D3470457A4F5AEBE1BAABA9838E5AC5117A9812FBA58E0348B443E6AB6802EAD6A3085E83CAA0920CAC2FA906D9FD860EEB57D9"
				"8D89B37E4AC60194B543E3E0CC9BA1985026D792C6D4EC22A4DB94E77A5C794C43B12483F19B0C83C5C6B3446E145173E44238BE244EAA81600D370E5FF4E400"
				"847CF10074D574407E5DCE6274BBF568A286C9F8E73100D4CF90F7BB3D2C07D87845A4FA4ED14B887A0EAE8004D94FC0195C103E12CBA55E1127BA67512B230E"
				"48EBDEFC6A9C297AF31C89C66054359D55D7D828622E7E0DFBB8E4449332EFD52356B5317CE27BF0E10C27E317E286E2F6A1F34FA5176055153D9343C77FC25B"
				"6CE20D8481529CE48963D55EC620BA6874CB2BC694834E5B620F8120D10974F10E685B5064C998E40202E66BF84528A529FB931E05628E14E2D69A58D960BABB"
				"966FD456B56A6D235E96B4A5087E862A00C9C269B4A8D1C99F4D7DC91C5D0737E29A086F3D6609410E5D0D84452B4D36778D79A4F35A66E322C590DEE2760002"
				"E657BBD8A0DB0425130C5D42ED04C050B49E213CAB91FB5960A97CDD2BA1603A2574DB7392768E2F6D0B2C3327703F230CEE0B8F7A11871A8A16AD590D5FA68C"
				"228DF886A04E2EEAC35267E06F33365125295FDE8D7368FE63CB80DAC73DCE9E52E5223409EE645BC99285495222EAA36E950C54304F9718E8BD4EBECADE0BC1"
				"C3D88A34AC9B757BC152C3AA72077C2AB6D6C8D7FAD245A42E580B68922A4F51065976C42A791D6556D56CCDB70A5B93699B158EDA6AE488B4ED53416C17E600"
				"30B956D0F565EB3963AAAD5826B1482AD9D4C661A6E27C3898A178FCD21E1CDC32A153AC3FFAE07030AE6139D60DA0088BC879B2C69842D722B17D06C745FD3E"
				"2CA6CF6F82FF148B4B1006329CB6167FC637E8367575D3004B4A76DC543BDA0F750D9A6D714FBAB913088334C64DAAA8C15A92AC8FE9A20223F50D6DA87121BE"
				"47998D57DCD8074C569CB5243E147CAFA675DB95ADEB94FB53541ABC58A33AC44FD90E43C8E2043CA03CA3EA1940371E1B4E28DA3BD73943F6996A826DB53A2B"
				"27C4E6FA4E55AD26F106C63E075FC34497BE9A660D98FE3BF70641B8602C3742658A4DCB1EDBE9554F1AD0388228D9520F047085E22D746FE94F75AD7E1C9A5B"
				"83A29D20B1A3E8DBC3E5D179B14D45DA392187F06A193491D48A6362C73177BC68D0CB8DB191EC4DFE0B1CD2B96CA35C6900C17D11642EE84A62B4BA55356BCB"
				"50AF5CA9C7D17E488EAC0E205A8634B498312291E9F48EF44F21DB00A6EABA0AE5C9F364917097874479E36FD80685CE3700688857225C065AF4DA73B8582969"
				"15281415989F45D37E62AC28C0C4368E20BC0892C09AAD54DB08EB00966A31268989F93DD2679DDB7AD5D80C1C3AE48C07F79E9F43E6913718D68C1D689E26B1"
				"A4B6C40CC939104C9F0A96C2591F8EA99918F2265A49B3A31E4BA89DE168FADCD8F9E2A256801A25ABCBA5AE5FEA69B0A8DC26571A01604CD4B412E27C224ED2"
				"B4C869D3B940262E02D2219B1BF08CDC02FD90F5120EEC16CE3585B66890237F9AD75DA0CD10D8EB051C57D0EE3885CD7DA6ED4EAFD02DE8352D8D0F99782E5F"
				"A700BB27FA101DCB0918C6C182465F8040F21326BC50095A9BAFA9759A403FC308D21C3341F34A9BB9B29566303771BA532C1EE2B570A07FD522A11B153560C7"
				"C8DFC6E9461E1EC6B5D8312A80DE014869DEED0643C4C4A9B1357F57423E72CF92ACFE5EDC06236043828AC8F0F5AA16D405BBC15B7E7D4BE5BFF710241E9CA2"
				"F1F69BF674CC279AE70C2E40474C9F08FFB6896B879017C59C33D55EB6390611BE5B839F984A91A203A5C141E8908671041C25F04E87FC268081131212ABE83D"
				"867D481643C3A272E94A0971DE277292666825280832723042801F7618984143E7E741C6D0AAA28988446B21AC4CBB1C8BD1BC795F3C806B35C3188CA66DEEA2"
				"AD820EBDAEE461455C69E6E098319D386974931640F6053A932982A1A66C7209EC8F9AAA545DB4AE90B547EE1BB7D88847265C16C2282BFB014C8C8008308763"
				"02BBE346BCE0C0DE8EE78FEEC98B313285E56C9366249B5C2ED46BD28641414AC11287D868A780DB96DA44535BE39035894E5615DCB4EA3DF81AA24F17A7E5CC"
				"49D9D587382830685F0F5CFA498A438B28D9EB319A0FA902388A74B9A84BE08130F5543E48A36CA87302AA90489C2792D233BEDB20B26C511AA9C13889E8DA2F"
				"7F64A2C4FA443FF1A6D09BEB243698A1170332E19D179B393A16E182F1164A3725612563D77B65E0988096934D8AD022031F5C2608860CA0DC12C8AB98A9916B"
				"C20E80403D07DB60C155F0A1252B048842A4609B42CF00E2F76C906604DC320A928A12645826D84D6FB116CA1B4246A1CAA020F718FEAC2BA0A9A13EE49E0044"
				"580BCC4484B3ED958891422B02CA3E16716562B58C670653C5555B51B8EA93919F059A2A360E8418C74BB183BB7539996753A15C60A5B4D90A780530008ADBDC"
				"186AB652076EC2D507BDB5150D7CA024E41F770FE8F264A439B51EC51BFA08BF2E1A5C114CEC8E5346C5C7A1ED57E862D978A725A4BF9F42D387B69FC64A4569"
				"9F419EEE5024765024015F9177F09A20B20E1290E87B51AEE156AE658FEE51F48488FB417001FB00CC9B16861E1C53560B118C0FFBDAB935363E626C9AE3C086"
				"D86DCC11E80A3F6979DC970626B596B5685853A21916775B21DFB38DBD6E1EA429B5F070A1FFCF6BB83AA0406A4F347A6D71B820669D5BF7D95610E2D4E69B9A"
				"A8945BD354D0AA1E39996A73018E94E6DBA7B6112E6D5BDD98726EFA1AA1AB66280D625326458702C5EC74A8A40EE7F91505352A23EA035484176D3C536C0599"
				"F94988B44CC940E7AED7C540E2796BAA0BA0F9FE02855BB138FACD0D975FC6267EDE332717CED9F1B521535B65300818B76FCCEA42542C504E8093E9FAC29E73"
				"4D51662EBA3EC0053CA960F2B830AD0BA2885A06C30201B2C871A68B299FB6BE2D0D72194F576F197553E8E666C0B61E9E5646199E447D9A473D43EDCAA6169D"
				"3132D15A4B46A25A22C0216D71634A78E26EAAA9827E9128A1673A280067EA0134D9E042E81FC502E31F88C4C1F167601D311701BEAC9C6F003BC5CD2F2E5F18"
				"66117C8CB64C3496BAEC5870031DDBCA12A05B15F92846BC96C30008759DA082DB0B580455B49FE318A9C4656DBE2E89CD85C5F5116C240B876BD961B3D4F6E2"
				"B7A4BE7AD52ED3B30D587A0825D154EE3BF84F4925F5D147D8D85022379DAD435A944A455022F256D098C9407AA1816DB7A17A91A8C5F2668538352A86349975"
				"F44BB2EC00115B68007A97D3FAD5B17854E157977A6900494F6583FADC4008085F87B21C5FA892B4F7FA355586C37D10F50C74B469CF0A2D62BFA098DDD6E204"
				"5F6115DA815E72585CCE2A09D1048EB99B6633B7E981438DA3216D829219C7BAE0F1117AB3134586C648B8C88C7DA42B861A0A4AAF82B1E02551A09C49741099"
				"A2EBD872F7AC0384490AD7EB56ADA1EA15F31BA810725D4D21D53A97B3E20A05B13A66602C30F62D5814234A3023C2B57FEE40AD8AAE949905611939FDEEB226"
				"EC4399835A48AD1321E6535D7140C84BD99AB6A5AC634422E29932738684C83E9E0F4129F2C97BFCB2875B4B978508963417A9993108740D185F82101A2388A5"
				"E1635C595E4E247C740DD8B7B1891F046981887EDAB1E72E404F149587C5261A3CD6558ED39924197A872EF8489C72F1CE3E8774B9BD9A86C005BBB01A85C4FC"
				"063354BD48CE29F75D7D8852609CA52F0A703FE7FF154978539E43A0417EA947FF437BB7C954B887E28818F285A4FE96D049CBD96134125CDAC325BF616843B1"
				"E79C4C72E84D356D7D32CAA02967CCB470EBE02994C54896A1C866B8A3616F6B89E7CB70B20A090365522F6A1DDB5C62E69AE244E70534A2B0B5895401E8C38F"
				"C99335CEB08ADCD16FB314D39B158676C5221EF500203E726FB606AE19914CEB130945396096D3A1B88F294B95C4C96301AE5DB0DF5628A38821CA4723EB8484"
				"68FFD92F24D5E03C5F49F8266E3C194950A2E987C993621B034950CCB7CE132D1604D816EAD8C551FCD05FB50D53DA6CE661518E16F4139E62EA2FC350834A62"
				"7902F4A1B9F642FCCE8F4368B66B125C67F7F8FCA0E8AE39C77780608D47B4317FCE830E6A03E66C2A3614C8C8022CB138AC27ED9B789C20952580B7D13D2D12"
				"040D736EF845076CBDD9A130756FD90DC9D572A846D30F98E23C57F363944093E45929144A123B818A2C9B1AE4E2B8A46AC7E48B436D25A683F0B7A04CB8F207"
				"ADE537B53CBEC69566D63401818A0E3A76FE7891074D458AA92891474077CD1A0201DBC828BB916F0366EF1AA2003DB3885E28A83254B6CBE554CD5A0FF994FA"
				"734A54A36353AF5A098823E2DB76D218508DB02A923297EC096BE2646430701F7B4709A0852043F8DA34B26815414F239E301F4A90D991F721B4002D0355B159"
				"E37C55D58888097D9E5E47502DD2B8BC9C30CDBF86004A27C1465B650FD878FBA31DD8C47E34601CD4711AE023EC0F16226EF113172B47E0E61D231A5489A097"
				"F8678C224091FC82AE550BCC59D65C95C1ED1A05B96164712B1D295C40B4D8E116469C812DA2242F954182B00E815988D4EEAB1CA3FF60799D63D1D7C52AB53C"
				"9FD9A90026418063AF8CB373F3D90E88DCA4A4E499AA6CA825C38D9D10A80D8DA5D24275F7DB60C3048AA9D01982F7C89A0664851C72A0AD5F0953651597E85C"
				"1C0EE1111B08003F28E65E8B3BDEB037CF8F221DFCDAF5950EDB38D506D85BEF8C303E40949F25C982ECC5CAFB175FCED03421DDEC9D40FD1A5F605597EFED1C"
				"8626ED79D451140800E03B59B956F8210E556067407D13DC90FA9E8B872BFB8F")
		};
		HexConverter::Decode(priexp, 2, m_priexp);

		const std::vector<std::string> sskexp =
		{
			// k2
			std::string("B6327BC9F7C2556E6F06061F4A9C2CD2F7AE89EBE73C00D1CE8CB3F1D0128DCE"),
			std::string("5EF055E719AFB1177D9B1C930133EE39C5BC030A294B3742245DEFAE25350CD3"),
			std::string("01E5FB1CF31284794949766443AD0568FF75A21518694A778B04095A78351674"),
			std::string("63FDC0DB475CA95ADD057881AFA4645A1C3D7F9AEAA491250A73CA4BD1BC6F3C"),
			std::string("564DD71B86110020B84B3EC54B3176DC0BFE809DC8A67A5108D6CB73DB479088"),
			std::string("6A2248895B536C4D0F51D1EE030E741DFE21EABCAC01CEBFBEAE3E1A0221E433"),
			std::string("FE957D8E1D32879A2AEA32EDDB4A4691B2DDE69519C5731D6B84E812C725BA66"),
			std::string("00DE2879BF3F3974A2E3A20B8BD89546DD6971A8CE77A83C481849C9034D404A"),
			std::string("189B3564B89B4296B8E209395323C1DEC4BCD33B8906BC237374F8F29DA5588C"),
			std::string("9B4B34485EFB9A392FEB2620EA12475C6C548C0C9FCF0F58703E7757855EC813"),
			// k3
			std::string("5F3BEDB6460749B46B03AAE8414A599120ECF4A3DE81E709128372E7F7CB4BE2"),
			std::string("682CBA0400D1FB01A8A00B15D1F1DB14D91C2BFEF388A7D5C7820492DCFD9862"),
			std::string("0FA098FF1FE2C2B8A854E6D734CA1DE181635807904971306A4DE6FFCA0D21C9"),
			std::string("23C9CD863B523D20882F7C38C512E783069C5984045177B7F1A9C8EDB2A110DE"),
			std::string("719860F8B533806308D6D8E598368044831A4BF4E3832B799477D82AD88D13D1"),
			std::string("FB5DF3E00DE9CF2C177C1ACED6FAFF1E540B42F5FAA19A2212528A6CADA39FD8"),
			std::string("D6B57F5BB396DD4E02D9F897BF621EEBE1319C4EEEBAB0F58C645EA78D9D423B"),
			std::string("39DEB21063B798854BA3A46F3F0E7D3EF3ED68FD09B8F428AFD0937904174C34"),
			std::string("E95DBECEB7E25F8F401AAF99DA4F9810A5CBCA567A52E87A7DFA4F353348AD2E"),
			std::string("E59D7B0427399558AF4F45D140D2BBCCDE41908313C448C334DF882ECC55DB70")
		};
		HexConverter::Decode(sskexp, 20, m_sskexp);

		/*lint -restore */
	}

	void NewHopeTest::OnProgress(const std::string &Data)
	{
		m_progressEvent(Data);
	}
}
