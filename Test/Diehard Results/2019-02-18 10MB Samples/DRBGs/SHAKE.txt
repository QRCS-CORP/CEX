       NOTE: Most of the tests in DIEHARD return a p-value, which               
       should be uniform on [0,1) if the input file contains truly              
       independent random bits.   Those p-values are obtained by                
       p=F(X), where F is the assumed distribution of the sample                
       random variable X---often normal. But that assumed F is just             
       an asymptotic approximation, for which the fit will be worst             
       in the tails. Thus you should not be surprised with                      
       occasional p-values near 0 or 1, such as .0012 or .9983.                 
       When a bit stream really FAILS BIG, you will get p's of 0 or             
       1 to six or more places.  By all means, do not, as a                     
       Statistician might, think that a p < .025 or p> .975 means               
       that the RNG has "failed the test at the .05 level".  Such               
       p's happen among the hundreds that DIEHARD produces, even                
       with good RNG's.  So keep in mind that " p happens".                     
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::            This is the BIRTHDAY SPACINGS TEST                 ::        
     :: Choose m birthdays in a year of n days.  List the spacings    ::        
     :: between the birthdays.  If j is the number of values that     ::        
     :: occur more than once in that list, then j is asymptotically   ::        
     :: Poisson distributed with mean m^3/(4n).  Experience shows n   ::        
     :: must be quite large, say n>=2^18, for comparing the results   ::        
     :: to the Poisson distribution with that mean.  This test uses   ::        
     :: n=2^24 and m=2^9,  so that the underlying distribution for j  ::        
     :: is taken to be Poisson with lambda=2^27/(2^26)=2.  A sample   ::        
     :: of 500 j's is taken, and a chi-square goodness of fit test    ::        
     :: provides a p value.  The first test uses bits 1-24 (counting  ::        
     :: from the left) from integers in the specified file.           ::        
     ::   Then the file is closed and reopened. Next, bits 2-25 are   ::        
     :: used to provide birthdays, then 3-26 and so on to bits 9-32.  ::        
     :: Each set of bits provides a p-value, and the nine p-values    ::        
     :: provide a sample for a KSTEST.                                ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 BIRTHDAY SPACINGS TEST, M= 512 N=2**24 LAMBDA=  2.0000
           Results for shake_10mb.txt 
                   For a sample of size 500:     mean   
           shake_10mb.txt  using bits  1 to 24   1.910
  duplicate       number       number 
  spacings       observed     expected
        0          80.       67.668
        1         136.      135.335
        2         135.      135.335
        3          78.       90.224
        4          49.       45.112
        5          15.       18.045
  6 to INF          7.        8.282
 Chisquare with  6 d.o.f. =     4.95 p-value=  .450398
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           shake_10mb.txt  using bits  2 to 25   1.966
  duplicate       number       number 
  spacings       observed     expected
        0          81.       67.668
        1         135.      135.335
        2         116.      135.335
        3          90.       90.224
        4          53.       45.112
        5          17.       18.045
  6 to INF          8.        8.282
 Chisquare with  6 d.o.f. =     6.84 p-value=  .664107
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           shake_10mb.txt  using bits  3 to 26   1.856
  duplicate       number       number 
  spacings       observed     expected
        0          75.       67.668
        1         153.      135.335
        2         133.      135.335
        3          82.       90.224
        4          31.       45.112
        5          18.       18.045
  6 to INF          8.        8.282
 Chisquare with  6 d.o.f. =     8.31 p-value=  .784022
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           shake_10mb.txt  using bits  4 to 27   2.024
  duplicate       number       number 
  spacings       observed     expected
        0          70.       67.668
        1         119.      135.335
        2         144.      135.335
        3          93.       90.224
        4          53.       45.112
        5          16.       18.045
  6 to INF          5.        8.282
 Chisquare with  6 d.o.f. =     5.60 p-value=  .530998
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           shake_10mb.txt  using bits  5 to 28   2.050
  duplicate       number       number 
  spacings       observed     expected
        0          61.       67.668
        1         135.      135.335
        2         138.      135.335
        3          88.       90.224
        4          52.       45.112
        5          17.       18.045
  6 to INF          9.        8.282
 Chisquare with  6 d.o.f. =     1.94 p-value=  .074835
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           shake_10mb.txt  using bits  6 to 29   1.924
  duplicate       number       number 
  spacings       observed     expected
        0          64.       67.668
        1         139.      135.335
        2         147.      135.335
        3          92.       90.224
        4          45.       45.112
        5           7.       18.045
  6 to INF          6.        8.282
 Chisquare with  6 d.o.f. =     8.73 p-value=  .810510
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           shake_10mb.txt  using bits  7 to 30   1.980
  duplicate       number       number 
  spacings       observed     expected
        0          64.       67.668
        1         140.      135.335
        2         140.      135.335
        3          82.       90.224
        4          50.       45.112
        5          21.       18.045
  6 to INF          3.        8.282
 Chisquare with  6 d.o.f. =     5.65 p-value=  .536734
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           shake_10mb.txt  using bits  8 to 31   2.070
  duplicate       number       number 
  spacings       observed     expected
        0          62.       67.668
        1         133.      135.335
        2         131.      135.335
        3          98.       90.224
        4          45.       45.112
        5          21.       18.045
  6 to INF         10.        8.282
 Chisquare with  6 d.o.f. =     2.16 p-value=  .096074
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           shake_10mb.txt  using bits  9 to 32   2.076
  duplicate       number       number 
  spacings       observed     expected
        0          57.       67.668
        1         131.      135.335
        2         142.      135.335
        3          90.       90.224
        4          51.       45.112
        5          25.       18.045
  6 to INF          4.        8.282
 Chisquare with  6 d.o.f. =     7.81 p-value=  .747843
  :::::::::::::::::::::::::::::::::::::::::
   The 9 p-values were
        .450398   .664107   .784022   .530998   .074835
        .810510   .536734   .096074   .747843
  A KSTEST for the 9 p-values yields  .286946

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::            THE OVERLAPPING 5-PERMUTATION TEST                 ::        
     :: This is the OPERM5 test.  It looks at a sequence of one mill- ::        
     :: ion 32-bit random integers.  Each set of five consecutive     ::        
     :: integers can be in one of 120 states, for the 5! possible or- ::        
     :: derings of five numbers.  Thus the 5th, 6th, 7th,...numbers   ::        
     :: each provide a state. As many thousands of state transitions  ::        
     :: are observed,  cumulative counts are made of the number of    ::        
     :: occurences of each state.  Then the quadratic form in the     ::        
     :: weak inverse of the 120x120 covariance matrix yields a test   ::        
     :: equivalent to the likelihood ratio test that the 120 cell     ::        
     :: counts came from the specified (asymptotically) normal dis-   ::        
     :: tribution with the specified 120x120 covariance matrix (with  ::        
     :: rank 99).  This version uses 1,000,000 integers, twice.       ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           OPERM5 test for file shake_10mb.txt 
     For a sample of 1,000,000 consecutive 5-tuples,
 chisquare for 99 degrees of freedom= 85.181; p-value= .162493
           OPERM5 test for file shake_10mb.txt 
     For a sample of 1,000,000 consecutive 5-tuples,
 chisquare for 99 degrees of freedom= 92.047; p-value= .323182
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 31x31 matrices. The leftmost ::        
     :: 31 bits of 31 random integers from the test sequence are used ::        
     :: to form a 31x31 binary matrix over the field {0,1}. The rank  ::        
     :: is determined. That rank can be from 0 to 31, but ranks< 28   ::        
     :: are rare, and their counts are pooled with those for rank 28. ::        
     :: Ranks are found for 40,000 such random matrices and a chisqua-::        
     :: re test is performed on counts for ranks 31,30,29 and <=28.   ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
    Binary rank test for shake_10mb.txt 
         Rank test for 31x31 binary matrices:
        rows from leftmost 31 bits of each 32-bit integer
      rank   observed  expected (o-e)^2/e  sum
        28       202     211.4   .419543     .420
        29      5102    5134.0   .199582     .619
        30     23205   23103.0   .449916    1.069
        31     11491   11551.5   .317119    1.386
  chisquare= 1.386 for 3 d. of f.; p-value= .410746
--------------------------------------------------------------
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 32x32 matrices. A random 32x ::        
     :: 32 binary matrix is formed, each row a 32-bit random integer. ::        
     :: The rank is determined. That rank can be from 0 to 32, ranks  ::        
     :: less than 29 are rare, and their counts are pooled with those ::        
     :: for rank 29.  Ranks are found for 40,000 such random matrices ::        
     :: and a chisquare test is performed on counts for ranks  32,31, ::        
     :: 30 and <=29.                                                  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
    Binary rank test for shake_10mb.txt 
         Rank test for 32x32 binary matrices:
        rows from leftmost 32 bits of each 32-bit integer
      rank   observed  expected (o-e)^2/e  sum
        29       241     211.4  4.139164    4.139
        30      5121    5134.0   .032970    4.172
        31     23151   23103.0   .099532    4.272
        32     11487   11551.5   .360420    4.632
  chisquare= 4.632 for 3 d. of f.; p-value= .814883
--------------------------------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 6x8 matrices.  From each of  ::        
     :: six random 32-bit integers from the generator under test, a   ::        
     :: specified byte is chosen, and the resulting six bytes form a  ::        
     :: 6x8 binary matrix whose rank is determined.  That rank can be ::        
     :: from 0 to 6, but ranks 0,1,2,3 are rare; their counts are     ::        
     :: pooled with those for rank 4. Ranks are found for 100,000     ::        
     :: random matrices, and a chi-square test is performed on        ::        
     :: counts for ranks 6,5 and <=4.                                 ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
         Binary Rank Test for shake_10mb.txt 
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG shake_10mb.txt 
     b-rank test for bits  1 to  8
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          954       944.3        .100        .100
          r =5        21626     21743.9        .639        .739
          r =6        77420     77311.8        .151        .890
                        p=1-exp(-SUM/2)= .35928
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG shake_10mb.txt 
     b-rank test for bits  2 to  9
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          920       944.3        .625        .625
          r =5        21722     21743.9        .022        .647
          r =6        77358     77311.8        .028        .675
                        p=1-exp(-SUM/2)= .28646
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG shake_10mb.txt 
     b-rank test for bits  3 to 10
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          958       944.3        .199        .199
          r =5        21560     21743.9       1.555       1.754
          r =6        77482     77311.8        .375       2.129
                        p=1-exp(-SUM/2)= .65506
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG shake_10mb.txt 
     b-rank test for bits  4 to 11
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          899       944.3       2.173       2.173
          r =5        21653     21743.9        .380       2.553
          r =6        77448     77311.8        .240       2.793
                        p=1-exp(-SUM/2)= .75256
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG shake_10mb.txt 
     b-rank test for bits  5 to 12
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          904       944.3       1.720       1.720
          r =5        21718     21743.9        .031       1.751
          r =6        77378     77311.8        .057       1.808
                        p=1-exp(-SUM/2)= .59496
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG shake_10mb.txt 
     b-rank test for bits  6 to 13
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          969       944.3        .646        .646
          r =5        21604     21743.9        .900       1.546
          r =6        77427     77311.8        .172       1.718
                        p=1-exp(-SUM/2)= .57637
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG shake_10mb.txt 
     b-rank test for bits  7 to 14
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          929       944.3        .248        .248
          r =5        21706     21743.9        .066        .314
          r =6        77365     77311.8        .037        .351
                        p=1-exp(-SUM/2)= .16080
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG shake_10mb.txt 
     b-rank test for bits  8 to 15
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          929       944.3        .248        .248
          r =5        21887     21743.9        .942       1.190
          r =6        77184     77311.8        .211       1.401
                        p=1-exp(-SUM/2)= .50366
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG shake_10mb.txt 
     b-rank test for bits  9 to 16
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          969       944.3        .646        .646
          r =5        21789     21743.9        .094        .740
          r =6        77242     77311.8        .063        .803
                        p=1-exp(-SUM/2)= .33054
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG shake_10mb.txt 
     b-rank test for bits 10 to 17
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          958       944.3        .199        .199
          r =5        21725     21743.9        .016        .215
          r =6        77317     77311.8        .000        .216
                        p=1-exp(-SUM/2)= .10215
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG shake_10mb.txt 
     b-rank test for bits 11 to 18
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          942       944.3        .006        .006
          r =5        21939     21743.9       1.751       1.756
          r =6        77119     77311.8        .481       2.237
                        p=1-exp(-SUM/2)= .67323
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG shake_10mb.txt 
     b-rank test for bits 12 to 19
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          883       944.3       3.979       3.979
          r =5        21959     21743.9       2.128       6.107
          r =6        77158     77311.8        .306       6.413
                        p=1-exp(-SUM/2)= .95951
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG shake_10mb.txt 
     b-rank test for bits 13 to 20
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          972       944.3        .812        .812
          r =5        21915     21743.9       1.346       2.159
          r =6        77113     77311.8        .511       2.670
                        p=1-exp(-SUM/2)= .73685
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG shake_10mb.txt 
     b-rank test for bits 14 to 21
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          953       944.3        .080        .080
          r =5        21796     21743.9        .125        .205
          r =6        77251     77311.8        .048        .253
                        p=1-exp(-SUM/2)= .11873
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG shake_10mb.txt 
     b-rank test for bits 15 to 22
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          962       944.3        .332        .332
          r =5        22014     21743.9       3.355       3.687
          r =6        77024     77311.8       1.071       4.758
                        p=1-exp(-SUM/2)= .90737
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG shake_10mb.txt 
     b-rank test for bits 16 to 23
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          970       944.3        .699        .699
          r =5        21921     21743.9       1.442       2.142
          r =6        77109     77311.8        .532       2.674
                        p=1-exp(-SUM/2)= .73734
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG shake_10mb.txt 
     b-rank test for bits 17 to 24
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          966       944.3        .499        .499
          r =5        21779     21743.9        .057        .555
          r =6        77255     77311.8        .042        .597
                        p=1-exp(-SUM/2)= .25807
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG shake_10mb.txt 
     b-rank test for bits 18 to 25
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          893       944.3       2.787       2.787
          r =5        21844     21743.9        .461       3.248
          r =6        77263     77311.8        .031       3.279
                        p=1-exp(-SUM/2)= .80589
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG shake_10mb.txt 
     b-rank test for bits 19 to 26
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          923       944.3        .481        .481
          r =5        21738     21743.9        .002        .482
          r =6        77339     77311.8        .010        .492
                        p=1-exp(-SUM/2)= .21795
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG shake_10mb.txt 
     b-rank test for bits 20 to 27
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4         1012       944.3       4.853       4.853
          r =5        21553     21743.9       1.676       6.529
          r =6        77435     77311.8        .196       6.726
                        p=1-exp(-SUM/2)= .96536
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG shake_10mb.txt 
     b-rank test for bits 21 to 28
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          993       944.3       2.511       2.511
          r =5        21622     21743.9        .683       3.195
          r =6        77385     77311.8        .069       3.264
                        p=1-exp(-SUM/2)= .80448
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG shake_10mb.txt 
     b-rank test for bits 22 to 29
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          964       944.3        .411        .411
          r =5        21862     21743.9        .641       1.052
          r =6        77174     77311.8        .246       1.298
                        p=1-exp(-SUM/2)= .47743
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG shake_10mb.txt 
     b-rank test for bits 23 to 30
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          868       944.3       6.165       6.165
          r =5        21669     21743.9        .258       6.423
          r =6        77463     77311.8        .296       6.719
                        p=1-exp(-SUM/2)= .96525
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG shake_10mb.txt 
     b-rank test for bits 24 to 31
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          985       944.3       1.754       1.754
          r =5        21731     21743.9        .008       1.762
          r =6        77284     77311.8        .010       1.772
                        p=1-exp(-SUM/2)= .58764
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG shake_10mb.txt 
     b-rank test for bits 25 to 32
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          936       944.3        .073        .073
          r =5        21850     21743.9        .518        .591
          r =6        77214     77311.8        .124        .714
                        p=1-exp(-SUM/2)= .30037
   TEST SUMMARY, 25 tests on 100,000 random 6x8 matrices
 These should be 25 uniform [0,1] random variables:
     .359276     .286464     .655055     .752562     .594957
     .576366     .160796     .503656     .330543     .102149
     .673229     .959509     .736849     .118732     .907369
     .737344     .258071     .805892     .217951     .965365
     .804476     .477433     .965247     .587645     .300374
   brank test summary for shake_10mb.txt 
       The KS test for those 25 supposed UNI's yields
                    KS p-value= .423838

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::                   THE BITSTREAM TEST                          ::        
     :: The file under test is viewed as a stream of bits. Call them  ::        
     :: b1,b2,... .  Consider an alphabet with two "letters", 0 and 1 ::        
     :: and think of the stream of bits as a succession of 20-letter  ::        
     :: "words", overlapping.  Thus the first word is b1b2...b20, the ::        
     :: second is b2b3...b21, and so on.  The bitstream test counts   ::        
     :: the number of missing 20-letter (20-bit) words in a string of ::        
     :: 2^21 overlapping 20-letter words.  There are 2^20 possible 20 ::        
     :: letter words.  For a truly random string of 2^21+19 bits, the ::        
     :: number of missing words j should be (very close to) normally  ::        
     :: distributed with mean 141,909 and sigma 428.  Thus            ::        
     ::  (j-141909)/428 should be a standard normal variate (z score) ::        
     :: that leads to a uniform [0,1) p value.  The test is repeated  ::        
     :: twenty times.                                                 ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 THE OVERLAPPING 20-tuples BITSTREAM  TEST, 20 BITS PER WORD, N words
   This test uses N=2^21 and samples the bitstream 20 times.
  No. missing words should average  141909. with sigma=428.
---------------------------------------------------------
 tst no  1:  141697 missing words,    -.50 sigmas from mean, p-value= .30991
 tst no  2:  142135 missing words,     .53 sigmas from mean, p-value= .70100
 tst no  3:  142411 missing words,    1.17 sigmas from mean, p-value= .87943
 tst no  4:  142352 missing words,    1.03 sigmas from mean, p-value= .84950
 tst no  5:  142418 missing words,    1.19 sigmas from mean, p-value= .88268
 tst no  6:  142148 missing words,     .56 sigmas from mean, p-value= .71146
 tst no  7:  141402 missing words,   -1.19 sigmas from mean, p-value= .11794
 tst no  8:  141365 missing words,   -1.27 sigmas from mean, p-value= .10172
 tst no  9:  141648 missing words,    -.61 sigmas from mean, p-value= .27074
 tst no 10:  142188 missing words,     .65 sigmas from mean, p-value= .74251
 tst no 11:  141459 missing words,   -1.05 sigmas from mean, p-value= .14636
 tst no 12:  141930 missing words,     .05 sigmas from mean, p-value= .51926
 tst no 13:  142114 missing words,     .48 sigmas from mean, p-value= .68375
 tst no 14:  141587 missing words,    -.75 sigmas from mean, p-value= .22569
 tst no 15:  141571 missing words,    -.79 sigmas from mean, p-value= .21462
 tst no 16:  141953 missing words,     .10 sigmas from mean, p-value= .54064
 tst no 17:  141975 missing words,     .15 sigmas from mean, p-value= .56097
 tst no 18:  141976 missing words,     .16 sigmas from mean, p-value= .56189
 tst no 19:  142308 missing words,     .93 sigmas from mean, p-value= .82420
 tst no 20:  141738 missing words,    -.40 sigmas from mean, p-value= .34447

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::             The tests OPSO, OQSO and DNA                      ::        
     ::         OPSO means Overlapping-Pairs-Sparse-Occupancy         ::        
     :: The OPSO test considers 2-letter words from an alphabet of    ::        
     :: 1024 letters.  Each letter is determined by a specified ten   ::        
     :: bits from a 32-bit integer in the sequence to be tested. OPSO ::        
     :: generates  2^21 (overlapping) 2-letter words  (from 2^21+1    ::        
     :: "keystrokes")  and counts the number of missing words---that  ::        
     :: is 2-letter words which do not appear in the entire sequence. ::        
     :: That count should be very close to normally distributed with  ::        
     :: mean 141,909, sigma 290. Thus (missingwrds-141909)/290 should ::        
     :: be a standard normal variable. The OPSO test takes 32 bits at ::        
     :: a time from the test file and uses a designated set of ten    ::        
     :: consecutive bits. It then restarts the file for the next de-  ::        
     :: signated 10 bits, and so on.                                  ::        
     ::                                                               ::        
     ::     OQSO means Overlapping-Quadruples-Sparse-Occupancy        ::        
     ::   The test OQSO is similar, except that it considers 4-letter ::        
     :: words from an alphabet of 32 letters, each letter determined  ::        
     :: by a designated string of 5 consecutive bits from the test    ::        
     :: file, elements of which are assumed 32-bit random integers.   ::        
     :: The mean number of missing words in a sequence of 2^21 four-  ::        
     :: letter words,  (2^21+3 "keystrokes"), is again 141909, with   ::        
     :: sigma = 295.  The mean is based on theory; sigma comes from   ::        
     :: extensive simulation.                                         ::        
     ::                                                               ::        
     ::    The DNA test considers an alphabet of 4 letters::  C,G,A,T,::        
     :: determined by two designated bits in the sequence of random   ::        
     :: integers being tested.  It considers 10-letter words, so that ::        
     :: as in OPSO and OQSO, there are 2^20 possible words, and the   ::        
     :: mean number of missing words from a string of 2^21  (over-    ::        
     :: lapping)  10-letter  words (2^21+9 "keystrokes") is 141909.   ::        
     :: The standard deviation sigma=339 was determined as for OQSO   ::        
     :: by simulation.  (Sigma for OPSO, 290, is the true value (to   ::        
     :: three places), not determined by simulation.                  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 OPSO test for generator shake_10mb.txt 
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
    OPSO for shake_10mb.txt  using bits 23 to 32        141880  -.101  .4597
    OPSO for shake_10mb.txt  using bits 22 to 31        141719  -.656  .2558
    OPSO for shake_10mb.txt  using bits 21 to 30        141985   .261  .6029
    OPSO for shake_10mb.txt  using bits 20 to 29        141993   .289  .6135
    OPSO for shake_10mb.txt  using bits 19 to 28        141804  -.363  .3582
    OPSO for shake_10mb.txt  using bits 18 to 27        141728  -.625  .2659
    OPSO for shake_10mb.txt  using bits 17 to 26        142115   .709  .7609
    OPSO for shake_10mb.txt  using bits 16 to 25        142216  1.057  .8549
    OPSO for shake_10mb.txt  using bits 15 to 24        141929   .068  .5270
    OPSO for shake_10mb.txt  using bits 14 to 23        142094   .637  .7379
    OPSO for shake_10mb.txt  using bits 13 to 22        142143   .806  .7898
    OPSO for shake_10mb.txt  using bits 12 to 21        141906  -.011  .4954
    OPSO for shake_10mb.txt  using bits 11 to 20        141572 -1.163  .1224
    OPSO for shake_10mb.txt  using bits 10 to 19        141731  -.615  .2693
    OPSO for shake_10mb.txt  using bits  9 to 18        141709  -.691  .2448
    OPSO for shake_10mb.txt  using bits  8 to 17        141766  -.494  .3106
    OPSO for shake_10mb.txt  using bits  7 to 16        141883  -.091  .4638
    OPSO for shake_10mb.txt  using bits  6 to 15        141933   .082  .5325
    OPSO for shake_10mb.txt  using bits  5 to 14        142061   .523  .6995
    OPSO for shake_10mb.txt  using bits  4 to 13        141728  -.625  .2659
    OPSO for shake_10mb.txt  using bits  3 to 12        142045   .468  .6800
    OPSO for shake_10mb.txt  using bits  2 to 11        142296  1.333  .9088
    OPSO for shake_10mb.txt  using bits  1 to 10        142313  1.392  .9180
 OQSO test for generator shake_10mb.txt 
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
    OQSO for shake_10mb.txt  using bits 28 to 32        141959   .168  .5669
    OQSO for shake_10mb.txt  using bits 27 to 31        141709  -.679  .2485
    OQSO for shake_10mb.txt  using bits 26 to 30        141062 -2.872  .0020
    OQSO for shake_10mb.txt  using bits 25 to 29        141837  -.245  .4032
    OQSO for shake_10mb.txt  using bits 24 to 28        141926   .057  .5225
    OQSO for shake_10mb.txt  using bits 23 to 27        142015   .358  .6399
    OQSO for shake_10mb.txt  using bits 22 to 26        142187   .941  .8267
    OQSO for shake_10mb.txt  using bits 21 to 25        142117   .704  .7593
    OQSO for shake_10mb.txt  using bits 20 to 24        142185   .934  .8250
    OQSO for shake_10mb.txt  using bits 19 to 23        141168 -2.513  .0060
    OQSO for shake_10mb.txt  using bits 18 to 22        141892  -.059  .4766
    OQSO for shake_10mb.txt  using bits 17 to 21        141854  -.188  .4256
    OQSO for shake_10mb.txt  using bits 16 to 20        141771  -.469  .3196
    OQSO for shake_10mb.txt  using bits 15 to 19        141877  -.110  .4564
    OQSO for shake_10mb.txt  using bits 14 to 18        141954   .151  .5602
    OQSO for shake_10mb.txt  using bits 13 to 17        141756  -.520  .3016
    OQSO for shake_10mb.txt  using bits 12 to 16        141844  -.221  .4124
    OQSO for shake_10mb.txt  using bits 11 to 15        142253  1.165  .8780
    OQSO for shake_10mb.txt  using bits 10 to 14        142128   .741  .7707
    OQSO for shake_10mb.txt  using bits  9 to 13        141459 -1.527  .0634
    OQSO for shake_10mb.txt  using bits  8 to 12        141555 -1.201  .1149
    OQSO for shake_10mb.txt  using bits  7 to 11        142025   .392  .6525
    OQSO for shake_10mb.txt  using bits  6 to 10        141689  -.747  .2276
    OQSO for shake_10mb.txt  using bits  5 to  9        141859  -.171  .4323
    OQSO for shake_10mb.txt  using bits  4 to  8        141905  -.015  .4941
    OQSO for shake_10mb.txt  using bits  3 to  7        141717  -.652  .2572
    OQSO for shake_10mb.txt  using bits  2 to  6        142286  1.277  .8992
    OQSO for shake_10mb.txt  using bits  1 to  5        142013   .351  .6374
  DNA test for generator shake_10mb.txt 
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
     DNA for shake_10mb.txt  using bits 31 to 32        141737  -.508  .3056
     DNA for shake_10mb.txt  using bits 30 to 31        141801  -.320  .3747
     DNA for shake_10mb.txt  using bits 29 to 30        141435 -1.399  .0809
     DNA for shake_10mb.txt  using bits 28 to 29        142224   .928  .8234
     DNA for shake_10mb.txt  using bits 27 to 28        141723  -.550  .2913
     DNA for shake_10mb.txt  using bits 26 to 27        141600  -.912  .1808
     DNA for shake_10mb.txt  using bits 25 to 26        142068   .468  .6801
     DNA for shake_10mb.txt  using bits 24 to 25        141413 -1.464  .0716
     DNA for shake_10mb.txt  using bits 23 to 24        141517 -1.157  .1236
     DNA for shake_10mb.txt  using bits 22 to 23        141858  -.151  .4398
     DNA for shake_10mb.txt  using bits 21 to 22        141640  -.794  .2135
     DNA for shake_10mb.txt  using bits 20 to 21        142418  1.501  .9333
     DNA for shake_10mb.txt  using bits 19 to 20        142067   .465  .6791
     DNA for shake_10mb.txt  using bits 18 to 19        142384  1.400  .9193
     DNA for shake_10mb.txt  using bits 17 to 18        142370  1.359  .9129
     DNA for shake_10mb.txt  using bits 16 to 17        141588  -.948  .1716
     DNA for shake_10mb.txt  using bits 15 to 16        142006   .285  .6122
     DNA for shake_10mb.txt  using bits 14 to 15        142346  1.288  .9011
     DNA for shake_10mb.txt  using bits 13 to 14        142128   .645  .7406
     DNA for shake_10mb.txt  using bits 12 to 13        141578  -.977  .1642
     DNA for shake_10mb.txt  using bits 11 to 12        141845  -.190  .4247
     DNA for shake_10mb.txt  using bits 10 to 11        142342  1.276  .8991
     DNA for shake_10mb.txt  using bits  9 to 10        142039   .383  .6490
     DNA for shake_10mb.txt  using bits  8 to  9        141976   .197  .5780
     DNA for shake_10mb.txt  using bits  7 to  8        141649  -.768  .2213
     DNA for shake_10mb.txt  using bits  6 to  7        141829  -.237  .4063
     DNA for shake_10mb.txt  using bits  5 to  6        141797  -.331  .3702
     DNA for shake_10mb.txt  using bits  4 to  5        142211   .890  .8132
     DNA for shake_10mb.txt  using bits  3 to  4        141558 -1.036  .1500
     DNA for shake_10mb.txt  using bits  2 to  3        141483 -1.258  .1043
     DNA for shake_10mb.txt  using bits  1 to  2        140977 -2.750  .0030

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the COUNT-THE-1's TEST on a stream of bytes.      ::        
     :: Consider the file under test as a stream of bytes (four per   ::        
     :: 32 bit integer).  Each byte can contain from 0 to 8 1's,      ::        
     :: with probabilities 1,8,28,56,70,56,28,8,1 over 256.  Now let  ::        
     :: the stream of bytes provide a string of overlapping  5-letter ::        
     :: words, each "letter" taking values A,B,C,D,E. The letters are ::        
     :: determined by the number of 1's in a byte::  0,1,or 2 yield A,::        
     :: 3 yields B, 4 yields C, 5 yields D and 6,7 or 8 yield E. Thus ::        
     :: we have a monkey at a typewriter hitting five keys with vari- ::        
     :: ous probabilities (37,56,70,56,37 over 256).  There are 5^5   ::        
     :: possible 5-letter words, and from a string of 256,000 (over-  ::        
     :: lapping) 5-letter words, counts are made on the frequencies   ::        
     :: for each word.   The quadratic form in the weak inverse of    ::        
     :: the covariance matrix of the cell counts provides a chisquare ::        
     :: test::  Q5-Q4, the difference of the naive Pearson sums of    ::        
     :: (OBS-EXP)^2/EXP on counts for 5- and 4-letter cell counts.    ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
   Test results for shake_10mb.txt 
 Chi-square with 5^5-5^4=2500 d.of f. for sample size:2560000
                               chisquare  equiv normal  p-value
  Results fo COUNT-THE-1's in successive bytes:
 byte stream for shake_10mb.txt   2419.23     -1.142      .126684
 byte stream for shake_10mb.txt   2566.26       .937      .825622

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the COUNT-THE-1's TEST for specific bytes.        ::        
     :: Consider the file under test as a stream of 32-bit integers.  ::        
     :: From each integer, a specific byte is chosen , say the left-  ::        
     :: most::  bits 1 to 8. Each byte can contain from 0 to 8 1's,   ::        
     :: with probabilitie 1,8,28,56,70,56,28,8,1 over 256.  Now let   ::        
     :: the specified bytes from successive integers provide a string ::        
     :: of (overlapping) 5-letter words, each "letter" taking values  ::        
     :: A,B,C,D,E. The letters are determined  by the number of 1's,  ::        
     :: in that byte::  0,1,or 2 ---> A, 3 ---> B, 4 ---> C, 5 ---> D,::        
     :: and  6,7 or 8 ---> E.  Thus we have a monkey at a typewriter  ::        
     :: hitting five keys with with various probabilities::  37,56,70,::        
     :: 56,37 over 256. There are 5^5 possible 5-letter words, and    ::        
     :: from a string of 256,000 (overlapping) 5-letter words, counts ::        
     :: are made on the frequencies for each word. The quadratic form ::        
     :: in the weak inverse of the covariance matrix of the cell      ::        
     :: counts provides a chisquare test::  Q5-Q4, the difference of  ::        
     :: the naive Pearson  sums of (OBS-EXP)^2/EXP on counts for 5-   ::        
     :: and 4-letter cell counts.                                     ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 Chi-square with 5^5-5^4=2500 d.of f. for sample size: 256000
                      chisquare  equiv normal  p value
  Results for COUNT-THE-1's in specified bytes:
           bits  1 to  8  2465.60      -.486      .313313
           bits  2 to  9  2492.52      -.106      .457892
           bits  3 to 10  2454.30      -.646      .259029
           bits  4 to 11  2552.20       .738      .769823
           bits  5 to 12  2538.76       .548      .708209
           bits  6 to 13  2462.42      -.531      .297566
           bits  7 to 14  2434.84      -.921      .178402
           bits  8 to 15  2487.77      -.173      .431334
           bits  9 to 16  2615.64      1.635      .949022
           bits 10 to 17  2545.92       .649      .741976
           bits 11 to 18  2558.46       .827      .795805
           bits 12 to 19  2402.32     -1.381      .083586
           bits 13 to 20  2465.04      -.494      .310507
           bits 14 to 21  2543.11       .610      .728950
           bits 15 to 22  2459.43      -.574      .283075
           bits 16 to 23  2417.07     -1.173      .120427
           bits 17 to 24  2482.24      -.251      .400863
           bits 18 to 25  2378.53     -1.718      .042915
           bits 19 to 26  2560.90       .861      .805446
           bits 20 to 27  2548.76       .690      .754757
           bits 21 to 28  2526.83       .380      .647842
           bits 22 to 29  2485.69      -.202      .419802
           bits 23 to 30  2493.29      -.095      .462197
           bits 24 to 31  2512.08       .171      .567847
           bits 25 to 32  2494.58      -.077      .469473

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::               THIS IS A PARKING LOT TEST                      ::        
     :: In a square of side 100, randomly "park" a car---a circle of  ::        
     :: radius 1.   Then try to park a 2nd, a 3rd, and so on, each    ::        
     :: time parking "by ear".  That is, if an attempt to park a car  ::        
     :: causes a crash with one already parked, try again at a new    ::        
     :: random location. (To avoid path problems, consider parking    ::        
     :: helicopters rather than cars.)   Each attempt leads to either ::        
     :: a crash or a success, the latter followed by an increment to  ::        
     :: the list of cars already parked. If we plot n:  the number of ::        
     :: attempts, versus k::  the number successfully parked, we get a::        
     :: curve that should be similar to those provided by a perfect   ::        
     :: random number generator.  Theory for the behavior of such a   ::        
     :: random curve seems beyond reach, and as graphics displays are ::        
     :: not available for this battery of tests, a simple characteriz ::        
     :: ation of the random experiment is used: k, the number of cars ::        
     :: successfully parked after n=12,000 attempts. Simulation shows ::        
     :: that k should average 3523 with sigma 21.9 and is very close  ::        
     :: to normally distributed.  Thus (k-3523)/21.9 should be a st-  ::        
     :: andard normal variable, which, converted to a uniform varia-  ::        
     :: ble, provides input to a KSTEST based on a sample of 10.      ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           CDPARK: result of ten tests on file shake_10mb.txt 
            Of 12,000 tries, the average no. of successes
                 should be 3523 with sigma=21.9
            Successes: 3574    z-score:  2.329 p-value: .990064
            Successes: 3517    z-score:  -.274 p-value: .392053
            Successes: 3549    z-score:  1.187 p-value: .882429
            Successes: 3511    z-score:  -.548 p-value: .291865
            Successes: 3542    z-score:   .868 p-value: .807188
            Successes: 3492    z-score: -1.416 p-value: .078457
            Successes: 3524    z-score:   .046 p-value: .518210
            Successes: 3510    z-score:  -.594 p-value: .276387
            Successes: 3504    z-score:  -.868 p-value: .192812
            Successes: 3558    z-score:  1.598 p-value: .944998
 
           square size   avg. no.  parked   sample sigma
             100.            3528.100       25.044
            KSTEST for the above 10: p=  .363513

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::               THE MINIMUM DISTANCE TEST                       ::        
     :: It does this 100 times::   choose n=8000 random points in a   ::        
     :: square of side 10000.  Find d, the minimum distance between   ::        
     :: the (n^2-n)/2 pairs of points.  If the points are truly inde- ::        
     :: pendent uniform, then d^2, the square of the minimum distance ::        
     :: should be (very close to) exponentially distributed with mean ::        
     :: .995 .  Thus 1-exp(-d^2/.995) should be uniform on [0,1) and  ::        
     :: a KSTEST on the resulting 100 values serves as a test of uni- ::        
     :: formity for random points in the square. Test numbers=0 mod 5 ::        
     :: are printed but the KSTEST is based on the full set of 100    ::        
     :: random choices of 8000 points in the 10000x10000 square.      ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
               This is the MINIMUM DISTANCE test
              for random integers in the file shake_10mb.txt 
     Sample no.    d^2     avg     equiv uni            
           5     .1675   1.1014     .154953
          10     .8276   1.5779     .564715
          15    1.5042   1.6807     .779485
          20    1.7291   1.4100     .824088
          25    1.2865   1.2415     .725539
          30    1.0544   1.1080     .653442
          35     .5048   1.1123     .397882
          40     .5536   1.1295     .426749
          45     .3322   1.1276     .283874
          50     .9977   1.0925     .633110
          55     .8759   1.1406     .585334
          60     .1622   1.1702     .150384
          65     .1853   1.1238     .169929
          70     .6094   1.0918     .457960
          75     .2926   1.0949     .254740
          80     .4135   1.0820     .340015
          85     .1418   1.0684     .132787
          90    4.1592   1.0819     .984703
          95    2.2934   1.0876     .900238
         100     .9266   1.0796     .605933
     MINIMUM DISTANCE TEST for shake_10mb.txt 
          Result of KS test on 20 transformed mindist^2's:
                                  p-value= .187355

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ 

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::              THE 3DSPHERES TEST                               ::        
     :: Choose  4000 random points in a cube of edge 1000.  At each   ::        
     :: point, center a sphere large enough to reach the next closest ::        
     :: point. Then the volume of the smallest such sphere is (very   ::        
     :: close to) exponentially distributed with mean 120pi/3.  Thus  ::        
     :: the radius cubed is exponential with mean 30. (The mean is    ::        
     :: obtained by extensive simulation).  The 3DSPHERES test gener- ::        
     :: ates 4000 such spheres 20 times.  Each min radius cubed leads ::        
     :: to a uniform variable by means of 1-exp(-r^3/30.), then a     ::        
     ::  KSTEST is done on the 20 p-values.                           ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
               The 3DSPHERES test for file shake_10mb.txt 
 sample no:  1     r^3=  17.593     p-value= .44369
 sample no:  2     r^3=  33.371     p-value= .67122
 sample no:  3     r^3=    .532     p-value= .01759
 sample no:  4     r^3=   2.449     p-value= .07840
 sample no:  5     r^3=    .436     p-value= .01442
 sample no:  6     r^3=  20.393     p-value= .49327
 sample no:  7     r^3=  17.746     p-value= .44652
 sample no:  8     r^3=   2.290     p-value= .07349
 sample no:  9     r^3=  25.528     p-value= .57299
 sample no: 10     r^3=  58.906     p-value= .85964
 sample no: 11     r^3=  27.134     p-value= .59524
 sample no: 12     r^3=  43.503     p-value= .76545
 sample no: 13     r^3=   3.328     p-value= .10499
 sample no: 14     r^3=   6.386     p-value= .19174
 sample no: 15     r^3=  35.227     p-value= .69094
 sample no: 16     r^3=  10.135     p-value= .28669
 sample no: 17     r^3=  91.986     p-value= .95340
 sample no: 18     r^3=  24.015     p-value= .55089
 sample no: 19     r^3=  44.854     p-value= .77578
 sample no: 20     r^3=  31.595     p-value= .65117
  A KS test is applied to those 20 p-values.
---------------------------------------------------------
       3DSPHERES test for file shake_10mb.txt       p-value= .420150
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::      This is the SQEEZE test                                  ::        
     ::  Random integers are floated to get uniforms on [0,1). Start- ::        
     ::  ing with k=2^31=2147483647, the test finds j, the number of  ::        
     ::  iterations necessary to reduce k to 1, using the reduction   ::        
     ::  k=ceiling(k*U), with U provided by floating integers from    ::        
     ::  the file being tested.  Such j's are found 100,000 times,    ::        
     ::  then counts for the number of times j was <=6,7,...,47,>=48  ::        
     ::  are used to provide a chi-square test for cell frequencies.  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
            RESULTS OF SQUEEZE TEST FOR shake_10mb.txt 
         Table of standardized frequency counts
     ( (obs-exp)/sqrt(exp) )^2
        for j taking values <=6,7,8,...,47,>=48:
     1.3      .1     1.3     -.7    -1.5     1.9
      .8    -1.4     -.6     -.4      .8     1.2
     -.9     -.1     1.1     -.7     1.2    -1.7
     -.3     -.7      .8     -.1      .3      .1
      .7     -.4     -.5     -.3      .8      .7
      .8    -1.3      .0     -.9     -.2      .8
    -1.2     -.1     1.3      .4      .9    -1.0
     -.1
           Chi-square with 42 degrees of freedom: 33.889
              z-score=  -.885  p-value= .190455
______________________________________________________________

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::             The  OVERLAPPING SUMS test                        ::        
     :: Integers are floated to get a sequence U(1),U(2),... of uni-  ::        
     :: form [0,1) variables.  Then overlapping sums,                 ::        
     ::   S(1)=U(1)+...+U(100), S2=U(2)+...+U(101),... are formed.    ::        
     :: The S's are virtually normal with a certain covariance mat-   ::        
     :: rix.  A linear transformation of the S's converts them to a   ::        
     :: sequence of independent standard normals, which are converted ::        
     :: to uniform variables for a KSTEST. The  p-values from ten     ::        
     :: KSTESTs are given still another KSTEST.                       ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
                Test no.  1      p-value  .915904
                Test no.  2      p-value  .721305
                Test no.  3      p-value  .485998
                Test no.  4      p-value  .409275
                Test no.  5      p-value  .979898
                Test no.  6      p-value  .745085
                Test no.  7      p-value  .062683
                Test no.  8      p-value  .433380
                Test no.  9      p-value  .677184
                Test no. 10      p-value  .406228
   Results of the OSUM test for shake_10mb.txt 
        KSTEST on the above 10 p-values:  .449128

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the RUNS test.  It counts runs up, and runs down, ::        
     :: in a sequence of uniform [0,1) variables, obtained by float-  ::        
     :: ing the 32-bit integers in the specified file. This example   ::        
     :: shows how runs are counted:  .123,.357,.789,.425,.224,.416,.95::        
     :: contains an up-run of length 3, a down-run of length 2 and an ::        
     :: up-run of (at least) 2, depending on the next values.  The    ::        
     :: covariance matrices for the runs-up and runs-down are well    ::        
     :: known, leading to chisquare tests for quadratic forms in the  ::        
     :: weak inverses of the covariance matrices.  Runs are counted   ::        
     :: for sequences of length 10,000.  This is done ten times. Then ::        
     :: repeated.                                                     ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           The RUNS test for file shake_10mb.txt 
     Up and down runs in a sample of 10000
_________________________________________________ 
                 Run test for shake_10mb.txt :
       runs up; ks test for 10 p's: .095559
     runs down; ks test for 10 p's: .681749
                 Run test for shake_10mb.txt :
       runs up; ks test for 10 p's: .228064
     runs down; ks test for 10 p's: .141264

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the CRAPS TEST. It plays 200,000 games of craps, finds::        
     :: the number of wins and the number of throws necessary to end  ::        
     :: each game.  The number of wins should be (very close to) a    ::        
     :: normal with mean 200000p and variance 200000p(1-p), with      ::        
     :: p=244/495.  Throws necessary to complete the game can vary    ::        
     :: from 1 to infinity, but counts for all>21 are lumped with 21. ::        
     :: A chi-square test is made on the no.-of-throws cell counts.   ::        
     :: Each 32-bit integer from the test file provides the value for ::        
     :: the throw of a die, by floating to [0,1), multiplying by 6    ::        
     :: and taking 1 plus the integer part of the result.             ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
                Results of craps test for shake_10mb.txt 
  No. of wins:  Observed Expected
                                98733    98585.86
                  98733= No. of wins, z-score=  .658 pvalue= .74476
   Analysis of Throws-per-Game:
 Chisq=  21.33 for 20 degrees of freedom, p=  .62214
               Throws Observed Expected  Chisq     Sum
                  1    66749    66666.7    .102     .102
                  2    37583    37654.3    .135     .237
                  3    27064    26954.7    .443     .680
                  4    19434    19313.5    .752    1.432
                  5    13803    13851.4    .169    1.601
                  6     9792     9943.5   2.310    3.911
                  7     7093     7145.0    .379    4.290
                  8     5062     5139.1   1.156    5.445
                  9     3669     3699.9    .257    5.703
                 10     2621     2666.3    .770    6.472
                 11     1942     1923.3    .181    6.654
                 12     1443     1388.7   2.120    8.774
                 13     1047     1003.7   1.867   10.640
                 14      709      726.1    .405   11.045
                 15      550      525.8   1.110   12.155
                 16      369      381.2    .387   12.543
                 17      296      276.5   1.369   13.912
                 18      210      200.8    .419   14.331
                 19      164      146.0   2.223   16.554
                 20       89      106.2   2.790   19.344
                 21      311      287.1   1.987   21.331
            SUMMARY  FOR shake_10mb.txt 
                p-value for no. of wins: .744763
                p-value for throws/game: .622136

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

 Results of DIEHARD battery of tests sent to file resshake.txt   
