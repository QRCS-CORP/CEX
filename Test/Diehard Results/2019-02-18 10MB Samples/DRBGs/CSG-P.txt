       NOTE: Most of the tests in DIEHARD return a p-value, which               
       should be uniform on [0,1) if the input file contains truly              
       independent random bits.   Those p-values are obtained by                
       p=F(X), where F is the assumed distribution of the sample                
       random variable X---often normal. But that assumed F is just             
       an asymptotic approximation, for which the fit will be worst             
       in the tails. Thus you should not be surprised with                      
       occasional p-values near 0 or 1, such as .0012 or .9983.                 
       When a bit stream really FAILS BIG, you will get p's of 0 or             
       1 to six or more places.  By all means, do not, as a                     
       Statistician might, think that a p < .025 or p> .975 means               
       that the RNG has "failed the test at the .05 level".  Such               
       p's happen among the hundreds that DIEHARD produces, even                
       with good RNG's.  So keep in mind that " p happens".                     
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::            This is the BIRTHDAY SPACINGS TEST                 ::        
     :: Choose m birthdays in a year of n days.  List the spacings    ::        
     :: between the birthdays.  If j is the number of values that     ::        
     :: occur more than once in that list, then j is asymptotically   ::        
     :: Poisson distributed with mean m^3/(4n).  Experience shows n   ::        
     :: must be quite large, say n>=2^18, for comparing the results   ::        
     :: to the Poisson distribution with that mean.  This test uses   ::        
     :: n=2^24 and m=2^9,  so that the underlying distribution for j  ::        
     :: is taken to be Poisson with lambda=2^27/(2^26)=2.  A sample   ::        
     :: of 500 j's is taken, and a chi-square goodness of fit test    ::        
     :: provides a p value.  The first test uses bits 1-24 (counting  ::        
     :: from the left) from integers in the specified file.           ::        
     ::   Then the file is closed and reopened. Next, bits 2-25 are   ::        
     :: used to provide birthdays, then 3-26 and so on to bits 9-32.  ::        
     :: Each set of bits provides a p-value, and the nine p-values    ::        
     :: provide a sample for a KSTEST.                                ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 BIRTHDAY SPACINGS TEST, M= 512 N=2**24 LAMBDA=  2.0000
           Results for csgp_10mb.txt  
                   For a sample of size 500:     mean   
           csgp_10mb.txt   using bits  1 to 24   2.084
  duplicate       number       number 
  spacings       observed     expected
        0          54.       67.668
        1         129.      135.335
        2         159.      135.335
        3          79.       90.224
        4          51.       45.112
        5          18.       18.045
  6 to INF         10.        8.282
 Chisquare with  6 d.o.f. =     9.72 p-value=  .862890
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           csgp_10mb.txt   using bits  2 to 25   1.822
  duplicate       number       number 
  spacings       observed     expected
        0          71.       67.668
        1         144.      135.335
        2         148.      135.335
        3          92.       90.224
        4          33.       45.112
        5           9.       18.045
  6 to INF          3.        8.282
 Chisquare with  6 d.o.f. =    13.09 p-value=  .958416
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           csgp_10mb.txt   using bits  3 to 26   1.826
  duplicate       number       number 
  spacings       observed     expected
        0          83.       67.668
        1         141.      135.335
        2         134.      135.335
        3          95.       90.224
        4          23.       45.112
        5          17.       18.045
  6 to INF          7.        8.282
 Chisquare with  6 d.o.f. =    15.07 p-value=  .980313
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           csgp_10mb.txt   using bits  4 to 27   1.912
  duplicate       number       number 
  spacings       observed     expected
        0          66.       67.668
        1         143.      135.335
        2         143.      135.335
        3          93.       90.224
        4          34.       45.112
        5          15.       18.045
  6 to INF          6.        8.282
 Chisquare with  6 d.o.f. =     4.87 p-value=  .439947
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           csgp_10mb.txt   using bits  5 to 28   1.930
  duplicate       number       number 
  spacings       observed     expected
        0          70.       67.668
        1         149.      135.335
        2         124.      135.335
        3          89.       90.224
        4          45.       45.112
        5          19.       18.045
  6 to INF          4.        8.282
 Chisquare with  6 d.o.f. =     4.69 p-value=  .415952
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           csgp_10mb.txt   using bits  6 to 29   2.066
  duplicate       number       number 
  spacings       observed     expected
        0          69.       67.668
        1         118.      135.335
        2         150.      135.335
        3          83.       90.224
        4          48.       45.112
        5          21.       18.045
  6 to INF         11.        8.282
 Chisquare with  6 d.o.f. =     5.98 p-value=  .574024
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           csgp_10mb.txt   using bits  7 to 30   1.900
  duplicate       number       number 
  spacings       observed     expected
        0          68.       67.668
        1         139.      135.335
        2         149.      135.335
        3          87.       90.224
        4          40.       45.112
        5          12.       18.045
  6 to INF          5.        8.282
 Chisquare with  6 d.o.f. =     5.50 p-value=  .518585
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           csgp_10mb.txt   using bits  8 to 31   1.916
  duplicate       number       number 
  spacings       observed     expected
        0          63.       67.668
        1         138.      135.335
        2         161.      135.335
        3          77.       90.224
        4          43.       45.112
        5          13.       18.045
  6 to INF          5.        8.282
 Chisquare with  6 d.o.f. =     9.99 p-value=  .874892
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           csgp_10mb.txt   using bits  9 to 32   2.038
  duplicate       number       number 
  spacings       observed     expected
        0          62.       67.668
        1         132.      135.335
        2         142.      135.335
        3          89.       90.224
        4          49.       45.112
        5          18.       18.045
  6 to INF          8.        8.282
 Chisquare with  6 d.o.f. =     1.25 p-value=  .025476
  :::::::::::::::::::::::::::::::::::::::::
   The 9 p-values were
        .862890   .958416   .980313   .439947   .415952
        .574024   .518585   .874892   .025476
  A KSTEST for the 9 p-values yields  .805908

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::            THE OVERLAPPING 5-PERMUTATION TEST                 ::        
     :: This is the OPERM5 test.  It looks at a sequence of one mill- ::        
     :: ion 32-bit random integers.  Each set of five consecutive     ::        
     :: integers can be in one of 120 states, for the 5! possible or- ::        
     :: derings of five numbers.  Thus the 5th, 6th, 7th,...numbers   ::        
     :: each provide a state. As many thousands of state transitions  ::        
     :: are observed,  cumulative counts are made of the number of    ::        
     :: occurences of each state.  Then the quadratic form in the     ::        
     :: weak inverse of the 120x120 covariance matrix yields a test   ::        
     :: equivalent to the likelihood ratio test that the 120 cell     ::        
     :: counts came from the specified (asymptotically) normal dis-   ::        
     :: tribution with the specified 120x120 covariance matrix (with  ::        
     :: rank 99).  This version uses 1,000,000 integers, twice.       ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           OPERM5 test for file csgp_10mb.txt  
     For a sample of 1,000,000 consecutive 5-tuples,
 chisquare for 99 degrees of freedom= 85.188; p-value= .162623
           OPERM5 test for file csgp_10mb.txt  
     For a sample of 1,000,000 consecutive 5-tuples,
 chisquare for 99 degrees of freedom=101.652; p-value= .592578
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 31x31 matrices. The leftmost ::        
     :: 31 bits of 31 random integers from the test sequence are used ::        
     :: to form a 31x31 binary matrix over the field {0,1}. The rank  ::        
     :: is determined. That rank can be from 0 to 31, but ranks< 28   ::        
     :: are rare, and their counts are pooled with those for rank 28. ::        
     :: Ranks are found for 40,000 such random matrices and a chisqua-::        
     :: re test is performed on counts for ranks 31,30,29 and <=28.   ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
    Binary rank test for csgp_10mb.txt  
         Rank test for 31x31 binary matrices:
        rows from leftmost 31 bits of each 32-bit integer
      rank   observed  expected (o-e)^2/e  sum
        28       215     211.4   .060688     .061
        29      5146    5134.0   .028000     .089
        30     23065   23103.0   .062657     .151
        31     11574   11551.5   .043730     .195
  chisquare=  .195 for 3 d. of f.; p-value= .350983
--------------------------------------------------------------
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 32x32 matrices. A random 32x ::        
     :: 32 binary matrix is formed, each row a 32-bit random integer. ::        
     :: The rank is determined. That rank can be from 0 to 32, ranks  ::        
     :: less than 29 are rare, and their counts are pooled with those ::        
     :: for rank 29.  Ranks are found for 40,000 such random matrices ::        
     :: and a chisquare test is performed on counts for ranks  32,31, ::        
     :: 30 and <=29.                                                  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
    Binary rank test for csgp_10mb.txt  
         Rank test for 32x32 binary matrices:
        rows from leftmost 32 bits of each 32-bit integer
      rank   observed  expected (o-e)^2/e  sum
        29       199     211.4   .729394     .729
        30      5042    5134.0  1.648981    2.378
        31     23038   23103.0   .183140    2.562
        32     11721   11551.5  2.486423    5.048
  chisquare= 5.048 for 3 d. of f.; p-value= .844007
--------------------------------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 6x8 matrices.  From each of  ::        
     :: six random 32-bit integers from the generator under test, a   ::        
     :: specified byte is chosen, and the resulting six bytes form a  ::        
     :: 6x8 binary matrix whose rank is determined.  That rank can be ::        
     :: from 0 to 6, but ranks 0,1,2,3 are rare; their counts are     ::        
     :: pooled with those for rank 4. Ranks are found for 100,000     ::        
     :: random matrices, and a chi-square test is performed on        ::        
     :: counts for ranks 6,5 and <=4.                                 ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
         Binary Rank Test for csgp_10mb.txt  
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csgp_10mb.txt  
     b-rank test for bits  1 to  8
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          963       944.3        .370        .370
          r =5        21823     21743.9        .288        .658
          r =6        77214     77311.8        .124        .782
                        p=1-exp(-SUM/2)= .32353
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csgp_10mb.txt  
     b-rank test for bits  2 to  9
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          959       944.3        .229        .229
          r =5        21701     21743.9        .085        .313
          r =6        77340     77311.8        .010        .324
                        p=1-exp(-SUM/2)= .14944
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csgp_10mb.txt  
     b-rank test for bits  3 to 10
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          978       944.3       1.203       1.203
          r =5        21355     21743.9       6.956       8.158
          r =6        77667     77311.8       1.632       9.790
                        p=1-exp(-SUM/2)= .99252
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csgp_10mb.txt  
     b-rank test for bits  4 to 11
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          937       944.3        .056        .056
          r =5        21998     21743.9       2.969       3.026
          r =6        77065     77311.8        .788       3.814
                        p=1-exp(-SUM/2)= .85146
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csgp_10mb.txt  
     b-rank test for bits  5 to 12
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          969       944.3        .646        .646
          r =5        21843     21743.9        .452       1.098
          r =6        77188     77311.8        .198       1.296
                        p=1-exp(-SUM/2)= .47689
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csgp_10mb.txt  
     b-rank test for bits  6 to 13
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          986       944.3       1.841       1.841
          r =5        21622     21743.9        .683       2.525
          r =6        77392     77311.8        .083       2.608
                        p=1-exp(-SUM/2)= .72855
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csgp_10mb.txt  
     b-rank test for bits  7 to 14
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          886       944.3       3.600       3.600
          r =5        21887     21743.9        .942       4.541
          r =6        77227     77311.8        .093       4.634
                        p=1-exp(-SUM/2)= .90145
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csgp_10mb.txt  
     b-rank test for bits  8 to 15
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          943       944.3        .002        .002
          r =5        21840     21743.9        .425        .427
          r =6        77217     77311.8        .116        .543
                        p=1-exp(-SUM/2)= .23768
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csgp_10mb.txt  
     b-rank test for bits  9 to 16
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          948       944.3        .014        .014
          r =5        21625     21743.9        .650        .665
          r =6        77427     77311.8        .172        .836
                        p=1-exp(-SUM/2)= .34174
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csgp_10mb.txt  
     b-rank test for bits 10 to 17
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          920       944.3        .625        .625
          r =5        21398     21743.9       5.503       6.128
          r =6        77682     77311.8       1.773       7.901
                        p=1-exp(-SUM/2)= .98075
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csgp_10mb.txt  
     b-rank test for bits 11 to 18
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          917       944.3        .789        .789
          r =5        21689     21743.9        .139        .928
          r =6        77394     77311.8        .087       1.015
                        p=1-exp(-SUM/2)= .39810
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csgp_10mb.txt  
     b-rank test for bits 12 to 19
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          898       944.3       2.270       2.270
          r =5        21603     21743.9        .913       3.183
          r =6        77499     77311.8        .453       3.637
                        p=1-exp(-SUM/2)= .83769
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csgp_10mb.txt  
     b-rank test for bits 13 to 20
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          934       944.3        .112        .112
          r =5        21666     21743.9        .279        .391
          r =6        77400     77311.8        .101        .492
                        p=1-exp(-SUM/2)= .21811
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csgp_10mb.txt  
     b-rank test for bits 14 to 21
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          950       944.3        .034        .034
          r =5        21648     21743.9        .423        .457
          r =6        77402     77311.8        .105        .563
                        p=1-exp(-SUM/2)= .24519
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csgp_10mb.txt  
     b-rank test for bits 15 to 22
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          956       944.3        .145        .145
          r =5        21846     21743.9        .479        .624
          r =6        77198     77311.8        .168        .792
                        p=1-exp(-SUM/2)= .32695
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csgp_10mb.txt  
     b-rank test for bits 16 to 23
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          944       944.3        .000        .000
          r =5        21691     21743.9        .129        .129
          r =6        77365     77311.8        .037        .165
                        p=1-exp(-SUM/2)= .07937
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csgp_10mb.txt  
     b-rank test for bits 17 to 24
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          983       944.3       1.586       1.586
          r =5        21645     21743.9        .450       2.036
          r =6        77372     77311.8        .047       2.083
                        p=1-exp(-SUM/2)= .64701
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csgp_10mb.txt  
     b-rank test for bits 18 to 25
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          953       944.3        .080        .080
          r =5        21753     21743.9        .004        .084
          r =6        77294     77311.8        .004        .088
                        p=1-exp(-SUM/2)= .04306
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csgp_10mb.txt  
     b-rank test for bits 19 to 26
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          931       944.3        .187        .187
          r =5        21899     21743.9       1.106       1.294
          r =6        77170     77311.8        .260       1.554
                        p=1-exp(-SUM/2)= .54017
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csgp_10mb.txt  
     b-rank test for bits 20 to 27
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          937       944.3        .056        .056
          r =5        21690     21743.9        .134        .190
          r =6        77373     77311.8        .048        .239
                        p=1-exp(-SUM/2)= .11242
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csgp_10mb.txt  
     b-rank test for bits 21 to 28
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          964       944.3        .411        .411
          r =5        21646     21743.9        .441        .852
          r =6        77390     77311.8        .079        .931
                        p=1-exp(-SUM/2)= .37212
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csgp_10mb.txt  
     b-rank test for bits 22 to 29
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          941       944.3        .012        .012
          r =5        21798     21743.9        .135        .146
          r =6        77261     77311.8        .033        .180
                        p=1-exp(-SUM/2)= .08585
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csgp_10mb.txt  
     b-rank test for bits 23 to 30
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          947       944.3        .008        .008
          r =5        21819     21743.9        .259        .267
          r =6        77234     77311.8        .078        .345
                        p=1-exp(-SUM/2)= .15861
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csgp_10mb.txt  
     b-rank test for bits 24 to 31
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4         1016       944.3       5.444       5.444
          r =5        21748     21743.9        .001       5.445
          r =6        77236     77311.8        .074       5.519
                        p=1-exp(-SUM/2)= .93668
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csgp_10mb.txt  
     b-rank test for bits 25 to 32
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          976       944.3       1.064       1.064
          r =5        21783     21743.9        .070       1.134
          r =6        77241     77311.8        .065       1.199
                        p=1-exp(-SUM/2)= .45098
   TEST SUMMARY, 25 tests on 100,000 random 6x8 matrices
 These should be 25 uniform [0,1] random variables:
     .323533     .149440     .992517     .851456     .476888
     .728546     .901446     .237678     .341737     .980751
     .398100     .837694     .218107     .245191     .326950
     .079372     .647011     .043065     .540167     .112416
     .372118     .085853     .158608     .936677     .450977
   brank test summary for csgp_10mb.txt  
       The KS test for those 25 supposed UNI's yields
                    KS p-value= .516586

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::                   THE BITSTREAM TEST                          ::        
     :: The file under test is viewed as a stream of bits. Call them  ::        
     :: b1,b2,... .  Consider an alphabet with two "letters", 0 and 1 ::        
     :: and think of the stream of bits as a succession of 20-letter  ::        
     :: "words", overlapping.  Thus the first word is b1b2...b20, the ::        
     :: second is b2b3...b21, and so on.  The bitstream test counts   ::        
     :: the number of missing 20-letter (20-bit) words in a string of ::        
     :: 2^21 overlapping 20-letter words.  There are 2^20 possible 20 ::        
     :: letter words.  For a truly random string of 2^21+19 bits, the ::        
     :: number of missing words j should be (very close to) normally  ::        
     :: distributed with mean 141,909 and sigma 428.  Thus            ::        
     ::  (j-141909)/428 should be a standard normal variate (z score) ::        
     :: that leads to a uniform [0,1) p value.  The test is repeated  ::        
     :: twenty times.                                                 ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 THE OVERLAPPING 20-tuples BITSTREAM  TEST, 20 BITS PER WORD, N words
   This test uses N=2^21 and samples the bitstream 20 times.
  No. missing words should average  141909. with sigma=428.
---------------------------------------------------------
 tst no  1:  141520 missing words,    -.91 sigmas from mean, p-value= .18150
 tst no  2:  141595 missing words,    -.73 sigmas from mean, p-value= .23135
 tst no  3:  142371 missing words,    1.08 sigmas from mean, p-value= .85963
 tst no  4:  142589 missing words,    1.59 sigmas from mean, p-value= .94386
 tst no  5:  142095 missing words,     .43 sigmas from mean, p-value= .66779
 tst no  6:  142583 missing words,    1.57 sigmas from mean, p-value= .94226
 tst no  7:  141996 missing words,     .20 sigmas from mean, p-value= .58024
 tst no  8:  141919 missing words,     .02 sigmas from mean, p-value= .50901
 tst no  9:  141130 missing words,   -1.82 sigmas from mean, p-value= .03431
 tst no 10:  142012 missing words,     .24 sigmas from mean, p-value= .59479
 tst no 11:  141971 missing words,     .14 sigmas from mean, p-value= .55729
 tst no 12:  141381 missing words,   -1.23 sigmas from mean, p-value= .10852
 tst no 13:  142190 missing words,     .66 sigmas from mean, p-value= .74402
 tst no 14:  141735 missing words,    -.41 sigmas from mean, p-value= .34189
 tst no 15:  141493 missing words,    -.97 sigmas from mean, p-value= .16534
 tst no 16:  142464 missing words,    1.30 sigmas from mean, p-value= .90251
 tst no 17:  141512 missing words,    -.93 sigmas from mean, p-value= .17662
 tst no 18:  141345 missing words,   -1.32 sigmas from mean, p-value= .09366
 tst no 19:  141720 missing words,    -.44 sigmas from mean, p-value= .32912
 tst no 20:  142921 missing words,    2.36 sigmas from mean, p-value= .99095

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::             The tests OPSO, OQSO and DNA                      ::        
     ::         OPSO means Overlapping-Pairs-Sparse-Occupancy         ::        
     :: The OPSO test considers 2-letter words from an alphabet of    ::        
     :: 1024 letters.  Each letter is determined by a specified ten   ::        
     :: bits from a 32-bit integer in the sequence to be tested. OPSO ::        
     :: generates  2^21 (overlapping) 2-letter words  (from 2^21+1    ::        
     :: "keystrokes")  and counts the number of missing words---that  ::        
     :: is 2-letter words which do not appear in the entire sequence. ::        
     :: That count should be very close to normally distributed with  ::        
     :: mean 141,909, sigma 290. Thus (missingwrds-141909)/290 should ::        
     :: be a standard normal variable. The OPSO test takes 32 bits at ::        
     :: a time from the test file and uses a designated set of ten    ::        
     :: consecutive bits. It then restarts the file for the next de-  ::        
     :: signated 10 bits, and so on.                                  ::        
     ::                                                               ::        
     ::     OQSO means Overlapping-Quadruples-Sparse-Occupancy        ::        
     ::   The test OQSO is similar, except that it considers 4-letter ::        
     :: words from an alphabet of 32 letters, each letter determined  ::        
     :: by a designated string of 5 consecutive bits from the test    ::        
     :: file, elements of which are assumed 32-bit random integers.   ::        
     :: The mean number of missing words in a sequence of 2^21 four-  ::        
     :: letter words,  (2^21+3 "keystrokes"), is again 141909, with   ::        
     :: sigma = 295.  The mean is based on theory; sigma comes from   ::        
     :: extensive simulation.                                         ::        
     ::                                                               ::        
     ::    The DNA test considers an alphabet of 4 letters::  C,G,A,T,::        
     :: determined by two designated bits in the sequence of random   ::        
     :: integers being tested.  It considers 10-letter words, so that ::        
     :: as in OPSO and OQSO, there are 2^20 possible words, and the   ::        
     :: mean number of missing words from a string of 2^21  (over-    ::        
     :: lapping)  10-letter  words (2^21+9 "keystrokes") is 141909.   ::        
     :: The standard deviation sigma=339 was determined as for OQSO   ::        
     :: by simulation.  (Sigma for OPSO, 290, is the true value (to   ::        
     :: three places), not determined by simulation.                  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 OPSO test for generator csgp_10mb.txt  
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
    OPSO for csgp_10mb.txt   using bits 23 to 32        141958   .168  .5666
    OPSO for csgp_10mb.txt   using bits 22 to 31        141798  -.384  .3505
    OPSO for csgp_10mb.txt   using bits 21 to 30        141890  -.067  .4734
    OPSO for csgp_10mb.txt   using bits 20 to 29        141960   .175  .5694
    OPSO for csgp_10mb.txt   using bits 19 to 28        141727  -.629  .2648
    OPSO for csgp_10mb.txt   using bits 18 to 27        141725  -.636  .2625
    OPSO for csgp_10mb.txt   using bits 17 to 26        142140   .795  .7868
    OPSO for csgp_10mb.txt   using bits 16 to 25        141555 -1.222  .1109
    OPSO for csgp_10mb.txt   using bits 15 to 24        142600  2.382  .9914
    OPSO for csgp_10mb.txt   using bits 14 to 23        142367  1.578  .9427
    OPSO for csgp_10mb.txt   using bits 13 to 22        141890  -.067  .4734
    OPSO for csgp_10mb.txt   using bits 12 to 21        142292  1.320  .9065
    OPSO for csgp_10mb.txt   using bits 11 to 20        141951   .144  .5571
    OPSO for csgp_10mb.txt   using bits 10 to 19        141751  -.546  .2925
    OPSO for csgp_10mb.txt   using bits  9 to 18        141578 -1.143  .1266
    OPSO for csgp_10mb.txt   using bits  8 to 17        141956   .161  .5639
    OPSO for csgp_10mb.txt   using bits  7 to 16        141493 -1.436  .0756
    OPSO for csgp_10mb.txt   using bits  6 to 15        142378  1.616  .9470
    OPSO for csgp_10mb.txt   using bits  5 to 14        141786  -.425  .3353
    OPSO for csgp_10mb.txt   using bits  4 to 13        141762  -.508  .3057
    OPSO for csgp_10mb.txt   using bits  3 to 12        142438  1.823  .9658
    OPSO for csgp_10mb.txt   using bits  2 to 11        142257  1.199  .8847
    OPSO for csgp_10mb.txt   using bits  1 to 10        141976   .230  .5909
 OQSO test for generator csgp_10mb.txt  
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
    OQSO for csgp_10mb.txt   using bits 28 to 32        142760  2.884  .9980
    OQSO for csgp_10mb.txt   using bits 27 to 31        141861  -.164  .4349
    OQSO for csgp_10mb.txt   using bits 26 to 30        141832  -.262  .3966
    OQSO for csgp_10mb.txt   using bits 25 to 29        142039   .440  .6699
    OQSO for csgp_10mb.txt   using bits 24 to 28        141775  -.455  .3244
    OQSO for csgp_10mb.txt   using bits 23 to 27        142133   .758  .7758
    OQSO for csgp_10mb.txt   using bits 22 to 26        141873  -.123  .4510
    OQSO for csgp_10mb.txt   using bits 21 to 25        141657  -.855  .1962
    OQSO for csgp_10mb.txt   using bits 20 to 24        141715  -.659  .2550
    OQSO for csgp_10mb.txt   using bits 19 to 23        142166   .870  .8079
    OQSO for csgp_10mb.txt   using bits 18 to 22        141826  -.282  .3888
    OQSO for csgp_10mb.txt   using bits 17 to 21        141846  -.215  .4150
    OQSO for csgp_10mb.txt   using bits 16 to 20        141721  -.638  .2616
    OQSO for csgp_10mb.txt   using bits 15 to 19        141732  -.601  .2739
    OQSO for csgp_10mb.txt   using bits 14 to 18        141632  -.940  .1736
    OQSO for csgp_10mb.txt   using bits 13 to 17        141996   .294  .6155
    OQSO for csgp_10mb.txt   using bits 12 to 16        142084   .592  .7231
    OQSO for csgp_10mb.txt   using bits 11 to 15        141291 -2.096  .0180
    OQSO for csgp_10mb.txt   using bits 10 to 14        142236  1.107  .8659
    OQSO for csgp_10mb.txt   using bits  9 to 13        141966   .192  .5762
    OQSO for csgp_10mb.txt   using bits  8 to 12        142018   .368  .6437
    OQSO for csgp_10mb.txt   using bits  7 to 11        141919   .033  .5131
    OQSO for csgp_10mb.txt   using bits  6 to 10        142000   .307  .6207
    OQSO for csgp_10mb.txt   using bits  5 to  9        142062   .518  .6976
    OQSO for csgp_10mb.txt   using bits  4 to  8        142068   .538  .7047
    OQSO for csgp_10mb.txt   using bits  3 to  7        141657  -.855  .1962
    OQSO for csgp_10mb.txt   using bits  2 to  6        142397  1.653  .9508
    OQSO for csgp_10mb.txt   using bits  1 to  5        142266  1.209  .8867
  DNA test for generator csgp_10mb.txt  
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
     DNA for csgp_10mb.txt   using bits 31 to 32        142329  1.238  .8921
     DNA for csgp_10mb.txt   using bits 30 to 31        141749  -.473  .3181
     DNA for csgp_10mb.txt   using bits 29 to 30        141231 -2.001  .0227
     DNA for csgp_10mb.txt   using bits 28 to 29        142021   .329  .6291
     DNA for csgp_10mb.txt   using bits 27 to 28        142421  1.509  .9344
     DNA for csgp_10mb.txt   using bits 26 to 27        142321  1.214  .8877
     DNA for csgp_10mb.txt   using bits 25 to 26        141839  -.207  .4178
     DNA for csgp_10mb.txt   using bits 24 to 25        141219 -2.036  .0209
     DNA for csgp_10mb.txt   using bits 23 to 24        141673  -.697  .2429
     DNA for csgp_10mb.txt   using bits 22 to 23        141852  -.169  .4329
     DNA for csgp_10mb.txt   using bits 21 to 22        141945   .105  .5419
     DNA for csgp_10mb.txt   using bits 20 to 21        141370 -1.591  .0558
     DNA for csgp_10mb.txt   using bits 19 to 20        142350  1.300  .9032
     DNA for csgp_10mb.txt   using bits 18 to 19        141781  -.379  .3525
     DNA for csgp_10mb.txt   using bits 17 to 18        142110   .592  .7231
     DNA for csgp_10mb.txt   using bits 16 to 17        141212 -2.057  .0198
     DNA for csgp_10mb.txt   using bits 15 to 16        141556 -1.042  .1486
     DNA for csgp_10mb.txt   using bits 14 to 15        142642  2.161  .9847
     DNA for csgp_10mb.txt   using bits 13 to 14        142233   .955  .8302
     DNA for csgp_10mb.txt   using bits 12 to 13        141570 -1.001  .1584
     DNA for csgp_10mb.txt   using bits 11 to 12        142125   .636  .7377
     DNA for csgp_10mb.txt   using bits 10 to 11        141290 -1.827  .0339
     DNA for csgp_10mb.txt   using bits  9 to 10        141234 -1.992  .0232
     DNA for csgp_10mb.txt   using bits  8 to  9        142192   .834  .7978
     DNA for csgp_10mb.txt   using bits  7 to  8        142054   .427  .6652
     DNA for csgp_10mb.txt   using bits  6 to  7        142093   .542  .7060
     DNA for csgp_10mb.txt   using bits  5 to  6        141666  -.718  .2364
     DNA for csgp_10mb.txt   using bits  4 to  5        142443  1.574  .9423
     DNA for csgp_10mb.txt   using bits  3 to  4        141856  -.157  .4375
     DNA for csgp_10mb.txt   using bits  2 to  3        142254  1.017  .8454
     DNA for csgp_10mb.txt   using bits  1 to  2        142006   .285  .6122

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the COUNT-THE-1's TEST on a stream of bytes.      ::        
     :: Consider the file under test as a stream of bytes (four per   ::        
     :: 32 bit integer).  Each byte can contain from 0 to 8 1's,      ::        
     :: with probabilities 1,8,28,56,70,56,28,8,1 over 256.  Now let  ::        
     :: the stream of bytes provide a string of overlapping  5-letter ::        
     :: words, each "letter" taking values A,B,C,D,E. The letters are ::        
     :: determined by the number of 1's in a byte::  0,1,or 2 yield A,::        
     :: 3 yields B, 4 yields C, 5 yields D and 6,7 or 8 yield E. Thus ::        
     :: we have a monkey at a typewriter hitting five keys with vari- ::        
     :: ous probabilities (37,56,70,56,37 over 256).  There are 5^5   ::        
     :: possible 5-letter words, and from a string of 256,000 (over-  ::        
     :: lapping) 5-letter words, counts are made on the frequencies   ::        
     :: for each word.   The quadratic form in the weak inverse of    ::        
     :: the covariance matrix of the cell counts provides a chisquare ::        
     :: test::  Q5-Q4, the difference of the naive Pearson sums of    ::        
     :: (OBS-EXP)^2/EXP on counts for 5- and 4-letter cell counts.    ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
   Test results for csgp_10mb.txt  
 Chi-square with 5^5-5^4=2500 d.of f. for sample size:2560000
                               chisquare  equiv normal  p-value
  Results fo COUNT-THE-1's in successive bytes:
 byte stream for csgp_10mb.txt    2528.44       .402      .656237
 byte stream for csgp_10mb.txt    2515.73       .222      .587996

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the COUNT-THE-1's TEST for specific bytes.        ::        
     :: Consider the file under test as a stream of 32-bit integers.  ::        
     :: From each integer, a specific byte is chosen , say the left-  ::        
     :: most::  bits 1 to 8. Each byte can contain from 0 to 8 1's,   ::        
     :: with probabilitie 1,8,28,56,70,56,28,8,1 over 256.  Now let   ::        
     :: the specified bytes from successive integers provide a string ::        
     :: of (overlapping) 5-letter words, each "letter" taking values  ::        
     :: A,B,C,D,E. The letters are determined  by the number of 1's,  ::        
     :: in that byte::  0,1,or 2 ---> A, 3 ---> B, 4 ---> C, 5 ---> D,::        
     :: and  6,7 or 8 ---> E.  Thus we have a monkey at a typewriter  ::        
     :: hitting five keys with with various probabilities::  37,56,70,::        
     :: 56,37 over 256. There are 5^5 possible 5-letter words, and    ::        
     :: from a string of 256,000 (overlapping) 5-letter words, counts ::        
     :: are made on the frequencies for each word. The quadratic form ::        
     :: in the weak inverse of the covariance matrix of the cell      ::        
     :: counts provides a chisquare test::  Q5-Q4, the difference of  ::        
     :: the naive Pearson  sums of (OBS-EXP)^2/EXP on counts for 5-   ::        
     :: and 4-letter cell counts.                                     ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 Chi-square with 5^5-5^4=2500 d.of f. for sample size: 256000
                      chisquare  equiv normal  p value
  Results for COUNT-THE-1's in specified bytes:
           bits  1 to  8  2446.89      -.751      .226303
           bits  2 to  9  2349.33     -2.131      .016554
           bits  3 to 10  2432.06      -.961      .168329
           bits  4 to 11  2580.80      1.143      .873415
           bits  5 to 12  2481.28      -.265      .395615
           bits  6 to 13  2594.42      1.335      .909107
           bits  7 to 14  2498.97      -.014      .494216
           bits  8 to 15  2568.61       .970      .834055
           bits  9 to 16  2614.52      1.620      .947339
           bits 10 to 17  2525.99       .368      .643399
           bits 11 to 18  2462.27      -.534      .296801
           bits 12 to 19  2577.77      1.100      .864309
           bits 13 to 20  2500.40       .006      .502255
           bits 14 to 21  2482.33      -.250      .401354
           bits 15 to 22  2472.64      -.387      .349402
           bits 16 to 23  2555.63       .787      .784259
           bits 17 to 24  2334.74     -2.337      .009718
           bits 18 to 25  2508.65       .122      .548675
           bits 19 to 26  2466.60      -.472      .318360
           bits 20 to 27  2328.52     -2.425      .007651
           bits 21 to 28  2517.80       .252      .599373
           bits 22 to 29  2551.63       .730      .767362
           bits 23 to 30  2625.40      1.773      .961915
           bits 24 to 31  2570.58       .998      .840881
           bits 25 to 32  2432.06      -.961      .168310

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::               THIS IS A PARKING LOT TEST                      ::        
     :: In a square of side 100, randomly "park" a car---a circle of  ::        
     :: radius 1.   Then try to park a 2nd, a 3rd, and so on, each    ::        
     :: time parking "by ear".  That is, if an attempt to park a car  ::        
     :: causes a crash with one already parked, try again at a new    ::        
     :: random location. (To avoid path problems, consider parking    ::        
     :: helicopters rather than cars.)   Each attempt leads to either ::        
     :: a crash or a success, the latter followed by an increment to  ::        
     :: the list of cars already parked. If we plot n:  the number of ::        
     :: attempts, versus k::  the number successfully parked, we get a::        
     :: curve that should be similar to those provided by a perfect   ::        
     :: random number generator.  Theory for the behavior of such a   ::        
     :: random curve seems beyond reach, and as graphics displays are ::        
     :: not available for this battery of tests, a simple characteriz ::        
     :: ation of the random experiment is used: k, the number of cars ::        
     :: successfully parked after n=12,000 attempts. Simulation shows ::        
     :: that k should average 3523 with sigma 21.9 and is very close  ::        
     :: to normally distributed.  Thus (k-3523)/21.9 should be a st-  ::        
     :: andard normal variable, which, converted to a uniform varia-  ::        
     :: ble, provides input to a KSTEST based on a sample of 10.      ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           CDPARK: result of ten tests on file csgp_10mb.txt  
            Of 12,000 tries, the average no. of successes
                 should be 3523 with sigma=21.9
            Successes: 3515    z-score:  -.365 p-value: .357445
            Successes: 3555    z-score:  1.461 p-value: .928018
            Successes: 3521    z-score:  -.091 p-value: .463618
            Successes: 3548    z-score:  1.142 p-value: .873180
            Successes: 3522    z-score:  -.046 p-value: .481790
            Successes: 3523    z-score:   .000 p-value: .500000
            Successes: 3500    z-score: -1.050 p-value: .146807
            Successes: 3516    z-score:  -.320 p-value: .374623
            Successes: 3506    z-score:  -.776 p-value: .218799
            Successes: 3514    z-score:  -.411 p-value: .340551
 
           square size   avg. no.  parked   sample sigma
             100.            3522.000       16.273
            KSTEST for the above 10: p=  .428152

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::               THE MINIMUM DISTANCE TEST                       ::        
     :: It does this 100 times::   choose n=8000 random points in a   ::        
     :: square of side 10000.  Find d, the minimum distance between   ::        
     :: the (n^2-n)/2 pairs of points.  If the points are truly inde- ::        
     :: pendent uniform, then d^2, the square of the minimum distance ::        
     :: should be (very close to) exponentially distributed with mean ::        
     :: .995 .  Thus 1-exp(-d^2/.995) should be uniform on [0,1) and  ::        
     :: a KSTEST on the resulting 100 values serves as a test of uni- ::        
     :: formity for random points in the square. Test numbers=0 mod 5 ::        
     :: are printed but the KSTEST is based on the full set of 100    ::        
     :: random choices of 8000 points in the 10000x10000 square.      ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
               This is the MINIMUM DISTANCE test
              for random integers in the file csgp_10mb.txt  
     Sample no.    d^2     avg     equiv uni            
           5     .8220    .9566     .562250
          10     .0079    .7480     .007914
          15    1.7923    .8392     .834915
          20    2.0370    .9098     .870911
          25     .8898    .8787     .591092
          30     .1301    .8076     .122559
          35     .4699    .8813     .376381
          40     .3068    .8851     .265365
          45    2.7851    .9466     .939133
          50     .1110    .9173     .105531
          55     .9584    .9292     .618324
          60     .1479    .9228     .138124
          65     .0022    .9215     .002174
          70    1.0822    .9438     .662998
          75    1.7419    .9476     .826333
          80     .8871    .9503     .589988
          85     .5131    .9582     .402928
          90    1.5471    .9746     .788786
          95     .0564    .9418     .055138
         100     .1774    .9425     .163305
     MINIMUM DISTANCE TEST for csgp_10mb.txt  
          Result of KS test on 20 transformed mindist^2's:
                                  p-value= .019760

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ 

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::              THE 3DSPHERES TEST                               ::        
     :: Choose  4000 random points in a cube of edge 1000.  At each   ::        
     :: point, center a sphere large enough to reach the next closest ::        
     :: point. Then the volume of the smallest such sphere is (very   ::        
     :: close to) exponentially distributed with mean 120pi/3.  Thus  ::        
     :: the radius cubed is exponential with mean 30. (The mean is    ::        
     :: obtained by extensive simulation).  The 3DSPHERES test gener- ::        
     :: ates 4000 such spheres 20 times.  Each min radius cubed leads ::        
     :: to a uniform variable by means of 1-exp(-r^3/30.), then a     ::        
     ::  KSTEST is done on the 20 p-values.                           ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
               The 3DSPHERES test for file csgp_10mb.txt  
 sample no:  1     r^3=   6.741     p-value= .20126
 sample no:  2     r^3=  44.025     p-value= .76950
 sample no:  3     r^3=  95.124     p-value= .95803
 sample no:  4     r^3=   1.671     p-value= .05417
 sample no:  5     r^3=   5.842     p-value= .17695
 sample no:  6     r^3= 114.084     p-value= .97769
 sample no:  7     r^3=  10.961     p-value= .30607
 sample no:  8     r^3=  21.652     p-value= .51409
 sample no:  9     r^3=   3.308     p-value= .10439
 sample no: 10     r^3=  28.687     p-value= .61566
 sample no: 11     r^3=   1.314     p-value= .04286
 sample no: 12     r^3=   7.599     p-value= .22377
 sample no: 13     r^3=  38.662     p-value= .72438
 sample no: 14     r^3=   1.291     p-value= .04211
 sample no: 15     r^3=  54.383     p-value= .83680
 sample no: 16     r^3=  18.771     p-value= .46511
 sample no: 17     r^3=  12.176     p-value= .33360
 sample no: 18     r^3=   2.886     p-value= .09172
 sample no: 19     r^3=   3.066     p-value= .09716
 sample no: 20     r^3=  10.691     p-value= .29979
  A KS test is applied to those 20 p-values.
---------------------------------------------------------
       3DSPHERES test for file csgp_10mb.txt        p-value= .906293
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::      This is the SQEEZE test                                  ::        
     ::  Random integers are floated to get uniforms on [0,1). Start- ::        
     ::  ing with k=2^31=2147483647, the test finds j, the number of  ::        
     ::  iterations necessary to reduce k to 1, using the reduction   ::        
     ::  k=ceiling(k*U), with U provided by floating integers from    ::        
     ::  the file being tested.  Such j's are found 100,000 times,    ::        
     ::  then counts for the number of times j was <=6,7,...,47,>=48  ::        
     ::  are used to provide a chi-square test for cell frequencies.  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
            RESULTS OF SQUEEZE TEST FOR csgp_10mb.txt  
         Table of standardized frequency counts
     ( (obs-exp)/sqrt(exp) )^2
        for j taking values <=6,7,8,...,47,>=48:
     -.8    -1.6      .6    -1.7     -.3      .3
      .3     -.6     -.7     -.1      .2     -.8
     -.4    -1.6      .9      .8      .6      .3
      .6      .7    -1.1     -.3      .5      .9
     -.8    -1.7    -1.3     2.1     1.4      .5
     -.5      .4     1.1    -1.4    -1.3    -1.2
     -.5     -.4      .5     2.1     -.6      .0
    -1.1
           Chi-square with 42 degrees of freedom: 41.000
              z-score=  -.109  p-value= .485126
______________________________________________________________

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::             The  OVERLAPPING SUMS test                        ::        
     :: Integers are floated to get a sequence U(1),U(2),... of uni-  ::        
     :: form [0,1) variables.  Then overlapping sums,                 ::        
     ::   S(1)=U(1)+...+U(100), S2=U(2)+...+U(101),... are formed.    ::        
     :: The S's are virtually normal with a certain covariance mat-   ::        
     :: rix.  A linear transformation of the S's converts them to a   ::        
     :: sequence of independent standard normals, which are converted ::        
     :: to uniform variables for a KSTEST. The  p-values from ten     ::        
     :: KSTESTs are given still another KSTEST.                       ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
                Test no.  1      p-value  .024601
                Test no.  2      p-value  .552439
                Test no.  3      p-value  .886986
                Test no.  4      p-value  .940856
                Test no.  5      p-value  .128795
                Test no.  6      p-value  .064808
                Test no.  7      p-value  .177058
                Test no.  8      p-value  .501435
                Test no.  9      p-value  .164602
                Test no. 10      p-value  .291776
   Results of the OSUM test for csgp_10mb.txt  
        KSTEST on the above 10 p-values:  .811779

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the RUNS test.  It counts runs up, and runs down, ::        
     :: in a sequence of uniform [0,1) variables, obtained by float-  ::        
     :: ing the 32-bit integers in the specified file. This example   ::        
     :: shows how runs are counted:  .123,.357,.789,.425,.224,.416,.95::        
     :: contains an up-run of length 3, a down-run of length 2 and an ::        
     :: up-run of (at least) 2, depending on the next values.  The    ::        
     :: covariance matrices for the runs-up and runs-down are well    ::        
     :: known, leading to chisquare tests for quadratic forms in the  ::        
     :: weak inverses of the covariance matrices.  Runs are counted   ::        
     :: for sequences of length 10,000.  This is done ten times. Then ::        
     :: repeated.                                                     ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           The RUNS test for file csgp_10mb.txt  
     Up and down runs in a sample of 10000
_________________________________________________ 
                 Run test for csgp_10mb.txt  :
       runs up; ks test for 10 p's: .353645
     runs down; ks test for 10 p's: .157468
                 Run test for csgp_10mb.txt  :
       runs up; ks test for 10 p's: .847989
     runs down; ks test for 10 p's: .820052

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the CRAPS TEST. It plays 200,000 games of craps, finds::        
     :: the number of wins and the number of throws necessary to end  ::        
     :: each game.  The number of wins should be (very close to) a    ::        
     :: normal with mean 200000p and variance 200000p(1-p), with      ::        
     :: p=244/495.  Throws necessary to complete the game can vary    ::        
     :: from 1 to infinity, but counts for all>21 are lumped with 21. ::        
     :: A chi-square test is made on the no.-of-throws cell counts.   ::        
     :: Each 32-bit integer from the test file provides the value for ::        
     :: the throw of a die, by floating to [0,1), multiplying by 6    ::        
     :: and taking 1 plus the integer part of the result.             ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
                Results of craps test for csgp_10mb.txt  
  No. of wins:  Observed Expected
                                98727    98585.86
                  98727= No. of wins, z-score=  .631 pvalue= .73607
   Analysis of Throws-per-Game:
 Chisq=  38.83 for 20 degrees of freedom, p=  .99299
               Throws Observed Expected  Chisq     Sum
                  1    66639    66666.7    .011     .011
                  2    37759    37654.3    .291     .302
                  3    27040    26954.7    .270     .572
                  4    19400    19313.5    .388     .960
                  5    13910    13851.4    .248    1.208
                  6     9827     9943.5   1.366    2.574
                  7     7217     7145.0    .725    3.299
                  8     4974     5139.1   5.302    8.601
                  9     3620     3699.9   1.724   10.325
                 10     2623     2666.3    .703   11.028
                 11     1962     1923.3    .778   11.805
                 12     1309     1388.7   4.579   16.384
                 13      986     1003.7    .313   16.697
                 14      764      726.1   1.974   18.671
                 15      545      525.8    .698   19.369
                 16      449      381.2  12.078   31.447
                 17      260      276.5    .989   32.436
                 18      201      200.8    .000   32.436
                 19      161      146.0   1.544   33.981
                 20      104      106.2    .046   34.027
                 21      250      287.1   4.798   38.825
            SUMMARY  FOR csgp_10mb.txt  
                p-value for no. of wins: .736066
                p-value for throws/game: .992991

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

 Results of DIEHARD battery of tests sent to file rescsgp.txt    
