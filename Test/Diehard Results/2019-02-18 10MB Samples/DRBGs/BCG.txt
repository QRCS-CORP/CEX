       NOTE: Most of the tests in DIEHARD return a p-value, which               
       should be uniform on [0,1) if the input file contains truly              
       independent random bits.   Those p-values are obtained by                
       p=F(X), where F is the assumed distribution of the sample                
       random variable X---often normal. But that assumed F is just             
       an asymptotic approximation, for which the fit will be worst             
       in the tails. Thus you should not be surprised with                      
       occasional p-values near 0 or 1, such as .0012 or .9983.                 
       When a bit stream really FAILS BIG, you will get p's of 0 or             
       1 to six or more places.  By all means, do not, as a                     
       Statistician might, think that a p < .025 or p> .975 means               
       that the RNG has "failed the test at the .05 level".  Such               
       p's happen among the hundreds that DIEHARD produces, even                
       with good RNG's.  So keep in mind that " p happens".                     
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::            This is the BIRTHDAY SPACINGS TEST                 ::        
     :: Choose m birthdays in a year of n days.  List the spacings    ::        
     :: between the birthdays.  If j is the number of values that     ::        
     :: occur more than once in that list, then j is asymptotically   ::        
     :: Poisson distributed with mean m^3/(4n).  Experience shows n   ::        
     :: must be quite large, say n>=2^18, for comparing the results   ::        
     :: to the Poisson distribution with that mean.  This test uses   ::        
     :: n=2^24 and m=2^9,  so that the underlying distribution for j  ::        
     :: is taken to be Poisson with lambda=2^27/(2^26)=2.  A sample   ::        
     :: of 500 j's is taken, and a chi-square goodness of fit test    ::        
     :: provides a p value.  The first test uses bits 1-24 (counting  ::        
     :: from the left) from integers in the specified file.           ::        
     ::   Then the file is closed and reopened. Next, bits 2-25 are   ::        
     :: used to provide birthdays, then 3-26 and so on to bits 9-32.  ::        
     :: Each set of bits provides a p-value, and the nine p-values    ::        
     :: provide a sample for a KSTEST.                                ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 BIRTHDAY SPACINGS TEST, M= 512 N=2**24 LAMBDA=  2.0000
           Results for bcg_10mb.txt   
                   For a sample of size 500:     mean   
           bcg_10mb.txt    using bits  1 to 24   1.882
  duplicate       number       number 
  spacings       observed     expected
        0          80.       67.668
        1         144.      135.335
        2         127.      135.335
        3          88.       90.224
        4          32.       45.112
        5          23.       18.045
  6 to INF          6.        8.282
 Chisquare with  6 d.o.f. =     9.17 p-value=  .835807
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           bcg_10mb.txt    using bits  2 to 25   1.912
  duplicate       number       number 
  spacings       observed     expected
        0          81.       67.668
        1         148.      135.335
        2         109.      135.335
        3          91.       90.224
        4          48.       45.112
        5          16.       18.045
  6 to INF          7.        8.282
 Chisquare with  6 d.o.f. =     9.56 p-value=  .855474
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           bcg_10mb.txt    using bits  3 to 26   2.020
  duplicate       number       number 
  spacings       observed     expected
        0          73.       67.668
        1         127.      135.335
        2         130.      135.335
        3          92.       90.224
        4          50.       45.112
        5          21.       18.045
  6 to INF          7.        8.282
 Chisquare with  6 d.o.f. =     2.39 p-value=  .119534
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           bcg_10mb.txt    using bits  4 to 27   2.024
  duplicate       number       number 
  spacings       observed     expected
        0          71.       67.668
        1         128.      135.335
        2         138.      135.335
        3          82.       90.224
        4          51.       45.112
        5          23.       18.045
  6 to INF          7.        8.282
 Chisquare with  6 d.o.f. =     3.69 p-value=  .281650
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           bcg_10mb.txt    using bits  5 to 28   1.978
  duplicate       number       number 
  spacings       observed     expected
        0          75.       67.668
        1         125.      135.335
        2         141.      135.335
        3          87.       90.224
        4          44.       45.112
        5          23.       18.045
  6 to INF          5.        8.282
 Chisquare with  6 d.o.f. =     4.62 p-value=  .407239
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           bcg_10mb.txt    using bits  6 to 29   1.986
  duplicate       number       number 
  spacings       observed     expected
        0          58.       67.668
        1         144.      135.335
        2         145.      135.335
        3          86.       90.224
        4          44.       45.112
        5          14.       18.045
  6 to INF          9.        8.282
 Chisquare with  6 d.o.f. =     3.82 p-value=  .299001
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           bcg_10mb.txt    using bits  7 to 30   2.082
  duplicate       number       number 
  spacings       observed     expected
        0          63.       67.668
        1         140.      135.335
        2         124.      135.335
        3          91.       90.224
        4          50.       45.112
        5          17.       18.045
  6 to INF         15.        8.282
 Chisquare with  6 d.o.f. =     7.48 p-value=  .721174
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           bcg_10mb.txt    using bits  8 to 31   2.030
  duplicate       number       number 
  spacings       observed     expected
        0          62.       67.668
        1         123.      135.335
        2         146.      135.335
        3         110.       90.224
        4          37.       45.112
        5          11.       18.045
  6 to INF         11.        8.282
 Chisquare with  6 d.o.f. =    11.88 p-value=  .935192
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           bcg_10mb.txt    using bits  9 to 32   1.986
  duplicate       number       number 
  spacings       observed     expected
        0          67.       67.668
        1         129.      135.335
        2         144.      135.335
        3          90.       90.224
        4          50.       45.112
        5          15.       18.045
  6 to INF          5.        8.282
 Chisquare with  6 d.o.f. =     3.20 p-value=  .216945
  :::::::::::::::::::::::::::::::::::::::::
   The 9 p-values were
        .835807   .855474   .119534   .281650   .407239
        .299001   .721174   .935192   .216945
  A KSTEST for the 9 p-values yields  .113604

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::            THE OVERLAPPING 5-PERMUTATION TEST                 ::        
     :: This is the OPERM5 test.  It looks at a sequence of one mill- ::        
     :: ion 32-bit random integers.  Each set of five consecutive     ::        
     :: integers can be in one of 120 states, for the 5! possible or- ::        
     :: derings of five numbers.  Thus the 5th, 6th, 7th,...numbers   ::        
     :: each provide a state. As many thousands of state transitions  ::        
     :: are observed,  cumulative counts are made of the number of    ::        
     :: occurences of each state.  Then the quadratic form in the     ::        
     :: weak inverse of the 120x120 covariance matrix yields a test   ::        
     :: equivalent to the likelihood ratio test that the 120 cell     ::        
     :: counts came from the specified (asymptotically) normal dis-   ::        
     :: tribution with the specified 120x120 covariance matrix (with  ::        
     :: rank 99).  This version uses 1,000,000 integers, twice.       ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           OPERM5 test for file bcg_10mb.txt   
     For a sample of 1,000,000 consecutive 5-tuples,
 chisquare for 99 degrees of freedom= 80.702; p-value= .089716
           OPERM5 test for file bcg_10mb.txt   
     For a sample of 1,000,000 consecutive 5-tuples,
 chisquare for 99 degrees of freedom=111.514; p-value= .816387
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 31x31 matrices. The leftmost ::        
     :: 31 bits of 31 random integers from the test sequence are used ::        
     :: to form a 31x31 binary matrix over the field {0,1}. The rank  ::        
     :: is determined. That rank can be from 0 to 31, but ranks< 28   ::        
     :: are rare, and their counts are pooled with those for rank 28. ::        
     :: Ranks are found for 40,000 such random matrices and a chisqua-::        
     :: re test is performed on counts for ranks 31,30,29 and <=28.   ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
    Binary rank test for bcg_10mb.txt   
         Rank test for 31x31 binary matrices:
        rows from leftmost 31 bits of each 32-bit integer
      rank   observed  expected (o-e)^2/e  sum
        28       211     211.4   .000826     .001
        29      5243    5134.0  2.313740    2.315
        30     22938   23103.0  1.179086    3.494
        31     11608   11551.5   .276110    3.770
  chisquare= 3.770 for 3 d. of f.; p-value= .738671
--------------------------------------------------------------
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 32x32 matrices. A random 32x ::        
     :: 32 binary matrix is formed, each row a 32-bit random integer. ::        
     :: The rank is determined. That rank can be from 0 to 32, ranks  ::        
     :: less than 29 are rare, and their counts are pooled with those ::        
     :: for rank 29.  Ranks are found for 40,000 such random matrices ::        
     :: and a chisquare test is performed on counts for ranks  32,31, ::        
     :: 30 and <=29.                                                  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
    Binary rank test for bcg_10mb.txt   
         Rank test for 32x32 binary matrices:
        rows from leftmost 32 bits of each 32-bit integer
      rank   observed  expected (o-e)^2/e  sum
        29       196     211.4  1.124385    1.124
        30      5228    5134.0  1.720696    2.845
        31     22996   23103.0   .495997    3.341
        32     11580   11551.5   .070195    3.411
  chisquare= 3.411 for 3 d. of f.; p-value= .699923
--------------------------------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 6x8 matrices.  From each of  ::        
     :: six random 32-bit integers from the generator under test, a   ::        
     :: specified byte is chosen, and the resulting six bytes form a  ::        
     :: 6x8 binary matrix whose rank is determined.  That rank can be ::        
     :: from 0 to 6, but ranks 0,1,2,3 are rare; their counts are     ::        
     :: pooled with those for rank 4. Ranks are found for 100,000     ::        
     :: random matrices, and a chi-square test is performed on        ::        
     :: counts for ranks 6,5 and <=4.                                 ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
         Binary Rank Test for bcg_10mb.txt   
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bcg_10mb.txt   
     b-rank test for bits  1 to  8
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          944       944.3        .000        .000
          r =5        21700     21743.9        .089        .089
          r =6        77356     77311.8        .025        .114
                        p=1-exp(-SUM/2)= .05540
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bcg_10mb.txt   
     b-rank test for bits  2 to  9
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          929       944.3        .248        .248
          r =5        21824     21743.9        .295        .543
          r =6        77247     77311.8        .054        .597
                        p=1-exp(-SUM/2)= .25819
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bcg_10mb.txt   
     b-rank test for bits  3 to 10
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          973       944.3        .872        .872
          r =5        21859     21743.9        .609       1.481
          r =6        77168     77311.8        .267       1.749
                        p=1-exp(-SUM/2)= .58292
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bcg_10mb.txt   
     b-rank test for bits  4 to 11
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          902       944.3       1.895       1.895
          r =5        21740     21743.9        .001       1.896
          r =6        77358     77311.8        .028       1.923
                        p=1-exp(-SUM/2)= .61773
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bcg_10mb.txt   
     b-rank test for bits  5 to 12
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          898       944.3       2.270       2.270
          r =5        21720     21743.9        .026       2.297
          r =6        77382     77311.8        .064       2.360
                        p=1-exp(-SUM/2)= .69276
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bcg_10mb.txt   
     b-rank test for bits  6 to 13
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          931       944.3        .187        .187
          r =5        21574     21743.9       1.328       1.515
          r =6        77495     77311.8        .434       1.949
                        p=1-exp(-SUM/2)= .62262
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bcg_10mb.txt   
     b-rank test for bits  7 to 14
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          915       944.3        .909        .909
          r =5        21616     21743.9        .752       1.662
          r =6        77469     77311.8        .320       1.981
                        p=1-exp(-SUM/2)= .62864
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bcg_10mb.txt   
     b-rank test for bits  8 to 15
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          926       944.3        .355        .355
          r =5        21906     21743.9       1.208       1.563
          r =6        77168     77311.8        .267       1.831
                        p=1-exp(-SUM/2)= .59961
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bcg_10mb.txt   
     b-rank test for bits  9 to 16
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          942       944.3        .006        .006
          r =5        21645     21743.9        .450        .455
          r =6        77413     77311.8        .132        .588
                        p=1-exp(-SUM/2)= .25469
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bcg_10mb.txt   
     b-rank test for bits 10 to 17
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          939       944.3        .030        .030
          r =5        21882     21743.9        .877        .907
          r =6        77179     77311.8        .228       1.135
                        p=1-exp(-SUM/2)= .43306
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bcg_10mb.txt   
     b-rank test for bits 11 to 18
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          913       944.3       1.038       1.038
          r =5        21903     21743.9       1.164       2.202
          r =6        77184     77311.8        .211       2.413
                        p=1-exp(-SUM/2)= .70075
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bcg_10mb.txt   
     b-rank test for bits 12 to 19
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          884       944.3       3.851       3.851
          r =5        21904     21743.9       1.179       5.030
          r =6        77212     77311.8        .129       5.158
                        p=1-exp(-SUM/2)= .92416
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bcg_10mb.txt   
     b-rank test for bits 13 to 20
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          946       944.3        .003        .003
          r =5        21862     21743.9        .641        .645
          r =6        77192     77311.8        .186        .830
                        p=1-exp(-SUM/2)= .33971
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bcg_10mb.txt   
     b-rank test for bits 14 to 21
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          951       944.3        .048        .048
          r =5        21618     21743.9        .729        .777
          r =6        77431     77311.8        .184        .960
                        p=1-exp(-SUM/2)= .38130
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bcg_10mb.txt   
     b-rank test for bits 15 to 22
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          993       944.3       2.511       2.511
          r =5        21731     21743.9        .008       2.519
          r =6        77276     77311.8        .017       2.536
                        p=1-exp(-SUM/2)= .71856
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bcg_10mb.txt   
     b-rank test for bits 16 to 23
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          925       944.3        .395        .395
          r =5        21637     21743.9        .526        .920
          r =6        77438     77311.8        .206       1.126
                        p=1-exp(-SUM/2)= .43052
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bcg_10mb.txt   
     b-rank test for bits 17 to 24
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          954       944.3        .100        .100
          r =5        21636     21743.9        .535        .635
          r =6        77410     77311.8        .125        .760
                        p=1-exp(-SUM/2)= .31606
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bcg_10mb.txt   
     b-rank test for bits 18 to 25
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          914       944.3        .972        .972
          r =5        21680     21743.9        .188       1.160
          r =6        77406     77311.8        .115       1.275
                        p=1-exp(-SUM/2)= .47136
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bcg_10mb.txt   
     b-rank test for bits 19 to 26
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          893       944.3       2.787       2.787
          r =5        21747     21743.9        .000       2.787
          r =6        77360     77311.8        .030       2.818
                        p=1-exp(-SUM/2)= .75556
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bcg_10mb.txt   
     b-rank test for bits 20 to 27
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          945       944.3        .001        .001
          r =5        21540     21743.9       1.912       1.913
          r =6        77515     77311.8        .534       2.447
                        p=1-exp(-SUM/2)= .70574
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bcg_10mb.txt   
     b-rank test for bits 21 to 28
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          983       944.3       1.586       1.586
          r =5        21524     21743.9       2.224       3.810
          r =6        77493     77311.8        .425       4.234
                        p=1-exp(-SUM/2)= .87964
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bcg_10mb.txt   
     b-rank test for bits 22 to 29
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          926       944.3        .355        .355
          r =5        22017     21743.9       3.430       3.785
          r =6        77057     77311.8        .840       4.625
                        p=1-exp(-SUM/2)= .90096
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bcg_10mb.txt   
     b-rank test for bits 23 to 30
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4         1008       944.3       4.297       4.297
          r =5        21693     21743.9        .119       4.416
          r =6        77299     77311.8        .002       4.418
                        p=1-exp(-SUM/2)= .89020
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bcg_10mb.txt   
     b-rank test for bits 24 to 31
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          902       944.3       1.895       1.895
          r =5        21710     21743.9        .053       1.948
          r =6        77388     77311.8        .075       2.023
                        p=1-exp(-SUM/2)= .63631
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG bcg_10mb.txt   
     b-rank test for bits 25 to 32
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          952       944.3        .063        .063
          r =5        21675     21743.9        .218        .281
          r =6        77373     77311.8        .048        .330
                        p=1-exp(-SUM/2)= .15191
   TEST SUMMARY, 25 tests on 100,000 random 6x8 matrices
 These should be 25 uniform [0,1] random variables:
     .055403     .258192     .582920     .617728     .692762
     .622620     .628637     .599608     .254688     .433055
     .700752     .924164     .339711     .381300     .718562
     .430519     .316060     .471356     .755556     .705745
     .879637     .900965     .890197     .636307     .151908
   brank test summary for bcg_10mb.txt   
       The KS test for those 25 supposed UNI's yields
                    KS p-value= .724908

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::                   THE BITSTREAM TEST                          ::        
     :: The file under test is viewed as a stream of bits. Call them  ::        
     :: b1,b2,... .  Consider an alphabet with two "letters", 0 and 1 ::        
     :: and think of the stream of bits as a succession of 20-letter  ::        
     :: "words", overlapping.  Thus the first word is b1b2...b20, the ::        
     :: second is b2b3...b21, and so on.  The bitstream test counts   ::        
     :: the number of missing 20-letter (20-bit) words in a string of ::        
     :: 2^21 overlapping 20-letter words.  There are 2^20 possible 20 ::        
     :: letter words.  For a truly random string of 2^21+19 bits, the ::        
     :: number of missing words j should be (very close to) normally  ::        
     :: distributed with mean 141,909 and sigma 428.  Thus            ::        
     ::  (j-141909)/428 should be a standard normal variate (z score) ::        
     :: that leads to a uniform [0,1) p value.  The test is repeated  ::        
     :: twenty times.                                                 ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 THE OVERLAPPING 20-tuples BITSTREAM  TEST, 20 BITS PER WORD, N words
   This test uses N=2^21 and samples the bitstream 20 times.
  No. missing words should average  141909. with sigma=428.
---------------------------------------------------------
 tst no  1:  142489 missing words,    1.35 sigmas from mean, p-value= .91219
 tst no  2:  141513 missing words,    -.93 sigmas from mean, p-value= .17722
 tst no  3:  141064 missing words,   -1.98 sigmas from mean, p-value= .02413
 tst no  4:  142121 missing words,     .49 sigmas from mean, p-value= .68954
 tst no  5:  142224 missing words,     .74 sigmas from mean, p-value= .76890
 tst no  6:  141419 missing words,   -1.15 sigmas from mean, p-value= .12597
 tst no  7:  141546 missing words,    -.85 sigmas from mean, p-value= .19797
 tst no  8:  141745 missing words,    -.38 sigmas from mean, p-value= .35051
 tst no  9:  142072 missing words,     .38 sigmas from mean, p-value= .64805
 tst no 10:  142215 missing words,     .71 sigmas from mean, p-value= .76244
 tst no 11:  141210 missing words,   -1.63 sigmas from mean, p-value= .05114
 tst no 12:  142401 missing words,    1.15 sigmas from mean, p-value= .87467
 tst no 13:  142566 missing words,    1.53 sigmas from mean, p-value= .93752
 tst no 14:  141547 missing words,    -.85 sigmas from mean, p-value= .19862
 tst no 15:  141843 missing words,    -.15 sigmas from mean, p-value= .43842
 tst no 16:  141948 missing words,     .09 sigmas from mean, p-value= .53600
 tst no 17:  141165 missing words,   -1.74 sigmas from mean, p-value= .04101
 tst no 18:  142003 missing words,     .22 sigmas from mean, p-value= .58662
 tst no 19:  140872 missing words,   -2.42 sigmas from mean, p-value= .00768
 tst no 20:  142311 missing words,     .94 sigmas from mean, p-value= .82600

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::             The tests OPSO, OQSO and DNA                      ::        
     ::         OPSO means Overlapping-Pairs-Sparse-Occupancy         ::        
     :: The OPSO test considers 2-letter words from an alphabet of    ::        
     :: 1024 letters.  Each letter is determined by a specified ten   ::        
     :: bits from a 32-bit integer in the sequence to be tested. OPSO ::        
     :: generates  2^21 (overlapping) 2-letter words  (from 2^21+1    ::        
     :: "keystrokes")  and counts the number of missing words---that  ::        
     :: is 2-letter words which do not appear in the entire sequence. ::        
     :: That count should be very close to normally distributed with  ::        
     :: mean 141,909, sigma 290. Thus (missingwrds-141909)/290 should ::        
     :: be a standard normal variable. The OPSO test takes 32 bits at ::        
     :: a time from the test file and uses a designated set of ten    ::        
     :: consecutive bits. It then restarts the file for the next de-  ::        
     :: signated 10 bits, and so on.                                  ::        
     ::                                                               ::        
     ::     OQSO means Overlapping-Quadruples-Sparse-Occupancy        ::        
     ::   The test OQSO is similar, except that it considers 4-letter ::        
     :: words from an alphabet of 32 letters, each letter determined  ::        
     :: by a designated string of 5 consecutive bits from the test    ::        
     :: file, elements of which are assumed 32-bit random integers.   ::        
     :: The mean number of missing words in a sequence of 2^21 four-  ::        
     :: letter words,  (2^21+3 "keystrokes"), is again 141909, with   ::        
     :: sigma = 295.  The mean is based on theory; sigma comes from   ::        
     :: extensive simulation.                                         ::        
     ::                                                               ::        
     ::    The DNA test considers an alphabet of 4 letters::  C,G,A,T,::        
     :: determined by two designated bits in the sequence of random   ::        
     :: integers being tested.  It considers 10-letter words, so that ::        
     :: as in OPSO and OQSO, there are 2^20 possible words, and the   ::        
     :: mean number of missing words from a string of 2^21  (over-    ::        
     :: lapping)  10-letter  words (2^21+9 "keystrokes") is 141909.   ::        
     :: The standard deviation sigma=339 was determined as for OQSO   ::        
     :: by simulation.  (Sigma for OPSO, 290, is the true value (to   ::        
     :: three places), not determined by simulation.                  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 OPSO test for generator bcg_10mb.txt   
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
    OPSO for bcg_10mb.txt    using bits 23 to 32        142011   .351  .6371
    OPSO for bcg_10mb.txt    using bits 22 to 31        142340  1.485  .9312
    OPSO for bcg_10mb.txt    using bits 21 to 30        141776  -.460  .3228
    OPSO for bcg_10mb.txt    using bits 20 to 29        141898  -.039  .4844
    OPSO for bcg_10mb.txt    using bits 19 to 28        142131   .764  .7777
    OPSO for bcg_10mb.txt    using bits 18 to 27        141853  -.194  .4230
    OPSO for bcg_10mb.txt    using bits 17 to 26        142081   .592  .7231
    OPSO for bcg_10mb.txt    using bits 16 to 25        142032   .423  .6639
    OPSO for bcg_10mb.txt    using bits 15 to 24        142012   .354  .6383
    OPSO for bcg_10mb.txt    using bits 14 to 23        142007   .337  .6319
    OPSO for bcg_10mb.txt    using bits 13 to 22        142139   .792  .7858
    OPSO for bcg_10mb.txt    using bits 12 to 21        141851  -.201  .4203
    OPSO for bcg_10mb.txt    using bits 11 to 20        141662  -.853  .1969
    OPSO for bcg_10mb.txt    using bits 10 to 19        142375  1.606  .9458
    OPSO for bcg_10mb.txt    using bits  9 to 18        142181   .937  .8256
    OPSO for bcg_10mb.txt    using bits  8 to 17        141869  -.139  .4447
    OPSO for bcg_10mb.txt    using bits  7 to 16        141990   .278  .6096
    OPSO for bcg_10mb.txt    using bits  6 to 15        141934   .085  .5339
    OPSO for bcg_10mb.txt    using bits  5 to 14        142115   .709  .7609
    OPSO for bcg_10mb.txt    using bits  4 to 13        141433 -1.643  .0502
    OPSO for bcg_10mb.txt    using bits  3 to 12        142148   .823  .7947
    OPSO for bcg_10mb.txt    using bits  2 to 11        141975   .226  .5896
    OPSO for bcg_10mb.txt    using bits  1 to 10        141910   .002  .5009
 OQSO test for generator bcg_10mb.txt   
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
    OQSO for bcg_10mb.txt    using bits 28 to 32        141813  -.327  .3720
    OQSO for bcg_10mb.txt    using bits 27 to 31        142057   .501  .6917
    OQSO for bcg_10mb.txt    using bits 26 to 30        141630  -.947  .1719
    OQSO for bcg_10mb.txt    using bits 25 to 29        141893  -.055  .4779
    OQSO for bcg_10mb.txt    using bits 24 to 28        142328  1.419  .9221
    OQSO for bcg_10mb.txt    using bits 23 to 27        141916   .023  .5090
    OQSO for bcg_10mb.txt    using bits 22 to 26        142109   .677  .7508
    OQSO for bcg_10mb.txt    using bits 21 to 25        142361  1.531  .9371
    OQSO for bcg_10mb.txt    using bits 20 to 24        141805  -.354  .3618
    OQSO for bcg_10mb.txt    using bits 19 to 23        141937   .094  .5374
    OQSO for bcg_10mb.txt    using bits 18 to 22        142035   .426  .6649
    OQSO for bcg_10mb.txt    using bits 17 to 21        142264  1.202  .8854
    OQSO for bcg_10mb.txt    using bits 16 to 20        142299  1.321  .9067
    OQSO for bcg_10mb.txt    using bits 15 to 19        141555 -1.201  .1149
    OQSO for bcg_10mb.txt    using bits 14 to 18        141929   .067  .5266
    OQSO for bcg_10mb.txt    using bits 13 to 17        141979   .236  .5934
    OQSO for bcg_10mb.txt    using bits 12 to 16        141868  -.140  .4443
    OQSO for bcg_10mb.txt    using bits 11 to 15        142333  1.436  .9245
    OQSO for bcg_10mb.txt    using bits 10 to 14        141750  -.540  .2946
    OQSO for bcg_10mb.txt    using bits  9 to 13        142164   .863  .8060
    OQSO for bcg_10mb.txt    using bits  8 to 12        141956   .158  .5629
    OQSO for bcg_10mb.txt    using bits  7 to 11        141847  -.211  .4163
    OQSO for bcg_10mb.txt    using bits  6 to 10        142059   .507  .6940
    OQSO for bcg_10mb.txt    using bits  5 to  9        141466 -1.503  .0664
    OQSO for bcg_10mb.txt    using bits  4 to  8        141888  -.072  .4712
    OQSO for bcg_10mb.txt    using bits  3 to  7        141928   .063  .5252
    OQSO for bcg_10mb.txt    using bits  2 to  6        141419 -1.662  .0482
    OQSO for bcg_10mb.txt    using bits  1 to  5        142024   .389  .6513
  DNA test for generator bcg_10mb.txt   
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
     DNA for bcg_10mb.txt    using bits 31 to 32        141653  -.756  .2248
     DNA for bcg_10mb.txt    using bits 30 to 31        141898  -.033  .4867
     DNA for bcg_10mb.txt    using bits 29 to 30        141767  -.420  .3373
     DNA for bcg_10mb.txt    using bits 28 to 29        142031   .359  .6402
     DNA for bcg_10mb.txt    using bits 27 to 28        142093   .542  .7060
     DNA for bcg_10mb.txt    using bits 26 to 27        141890  -.057  .4773
     DNA for bcg_10mb.txt    using bits 25 to 26        142324  1.223  .8894
     DNA for bcg_10mb.txt    using bits 24 to 25        141779  -.384  .3503
     DNA for bcg_10mb.txt    using bits 23 to 24        142033   .365  .6424
     DNA for bcg_10mb.txt    using bits 22 to 23        142105   .577  .7181
     DNA for bcg_10mb.txt    using bits 21 to 22        142427  1.527  .9366
     DNA for bcg_10mb.txt    using bits 20 to 21        142372  1.365  .9138
     DNA for bcg_10mb.txt    using bits 19 to 20        141788  -.358  .3602
     DNA for bcg_10mb.txt    using bits 18 to 19        141727  -.538  .2953
     DNA for bcg_10mb.txt    using bits 17 to 18        142572  1.955  .9747
     DNA for bcg_10mb.txt    using bits 16 to 17        141967   .170  .5675
     DNA for bcg_10mb.txt    using bits 15 to 16        142100   .562  .7131
     DNA for bcg_10mb.txt    using bits 14 to 15        141562 -1.025  .1528
     DNA for bcg_10mb.txt    using bits 13 to 14        141407 -1.482  .0692
     DNA for bcg_10mb.txt    using bits 12 to 13        141964   .161  .5641
     DNA for bcg_10mb.txt    using bits 11 to 12        142206   .875  .8093
     DNA for bcg_10mb.txt    using bits 10 to 11        141680  -.676  .2494
     DNA for bcg_10mb.txt    using bits  9 to 10        141290 -1.827  .0339
     DNA for bcg_10mb.txt    using bits  8 to  9        142019   .324  .6268
     DNA for bcg_10mb.txt    using bits  7 to  8        141816  -.275  .3915
     DNA for bcg_10mb.txt    using bits  6 to  7        141946   .108  .5431
     DNA for bcg_10mb.txt    using bits  5 to  6        141750  -.470  .3192
     DNA for bcg_10mb.txt    using bits  4 to  5        141992   .244  .5963
     DNA for bcg_10mb.txt    using bits  3 to  4        142054   .427  .6652
     DNA for bcg_10mb.txt    using bits  2 to  3        141222 -2.028  .0213
     DNA for bcg_10mb.txt    using bits  1 to  2        141954   .132  .5524

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the COUNT-THE-1's TEST on a stream of bytes.      ::        
     :: Consider the file under test as a stream of bytes (four per   ::        
     :: 32 bit integer).  Each byte can contain from 0 to 8 1's,      ::        
     :: with probabilities 1,8,28,56,70,56,28,8,1 over 256.  Now let  ::        
     :: the stream of bytes provide a string of overlapping  5-letter ::        
     :: words, each "letter" taking values A,B,C,D,E. The letters are ::        
     :: determined by the number of 1's in a byte::  0,1,or 2 yield A,::        
     :: 3 yields B, 4 yields C, 5 yields D and 6,7 or 8 yield E. Thus ::        
     :: we have a monkey at a typewriter hitting five keys with vari- ::        
     :: ous probabilities (37,56,70,56,37 over 256).  There are 5^5   ::        
     :: possible 5-letter words, and from a string of 256,000 (over-  ::        
     :: lapping) 5-letter words, counts are made on the frequencies   ::        
     :: for each word.   The quadratic form in the weak inverse of    ::        
     :: the covariance matrix of the cell counts provides a chisquare ::        
     :: test::  Q5-Q4, the difference of the naive Pearson sums of    ::        
     :: (OBS-EXP)^2/EXP on counts for 5- and 4-letter cell counts.    ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
   Test results for bcg_10mb.txt   
 Chi-square with 5^5-5^4=2500 d.of f. for sample size:2560000
                               chisquare  equiv normal  p-value
  Results fo COUNT-THE-1's in successive bytes:
 byte stream for bcg_10mb.txt     2458.01      -.594      .276307
 byte stream for bcg_10mb.txt     2472.36      -.391      .347937

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the COUNT-THE-1's TEST for specific bytes.        ::        
     :: Consider the file under test as a stream of 32-bit integers.  ::        
     :: From each integer, a specific byte is chosen , say the left-  ::        
     :: most::  bits 1 to 8. Each byte can contain from 0 to 8 1's,   ::        
     :: with probabilitie 1,8,28,56,70,56,28,8,1 over 256.  Now let   ::        
     :: the specified bytes from successive integers provide a string ::        
     :: of (overlapping) 5-letter words, each "letter" taking values  ::        
     :: A,B,C,D,E. The letters are determined  by the number of 1's,  ::        
     :: in that byte::  0,1,or 2 ---> A, 3 ---> B, 4 ---> C, 5 ---> D,::        
     :: and  6,7 or 8 ---> E.  Thus we have a monkey at a typewriter  ::        
     :: hitting five keys with with various probabilities::  37,56,70,::        
     :: 56,37 over 256. There are 5^5 possible 5-letter words, and    ::        
     :: from a string of 256,000 (overlapping) 5-letter words, counts ::        
     :: are made on the frequencies for each word. The quadratic form ::        
     :: in the weak inverse of the covariance matrix of the cell      ::        
     :: counts provides a chisquare test::  Q5-Q4, the difference of  ::        
     :: the naive Pearson  sums of (OBS-EXP)^2/EXP on counts for 5-   ::        
     :: and 4-letter cell counts.                                     ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 Chi-square with 5^5-5^4=2500 d.of f. for sample size: 256000
                      chisquare  equiv normal  p value
  Results for COUNT-THE-1's in specified bytes:
           bits  1 to  8  2455.57      -.628      .264893
           bits  2 to  9  2432.65      -.952      .170437
           bits  3 to 10  2636.27      1.927      .973023
           bits  4 to 11  2400.10     -1.413      .078865
           bits  5 to 12  2459.65      -.571      .284110
           bits  6 to 13  2542.76       .605      .727338
           bits  7 to 14  2589.63      1.268      .897518
           bits  8 to 15  2530.31       .429      .665917
           bits  9 to 16  2574.47      1.053      .853865
           bits 10 to 17  2490.69      -.132      .447605
           bits 11 to 18  2476.26      -.336      .368559
           bits 12 to 19  2617.70      1.665      .951997
           bits 13 to 20  2469.47      -.432      .332980
           bits 14 to 21  2456.67      -.613      .270024
           bits 15 to 22  2493.82      -.087      .465198
           bits 16 to 23  2540.16       .568      .714957
           bits 17 to 24  2630.59      1.847      .967615
           bits 18 to 25  2587.36      1.235      .891671
           bits 19 to 26  2439.18      -.860      .194868
           bits 20 to 27  2493.98      -.085      .466071
           bits 21 to 28  2493.62      -.090      .464074
           bits 22 to 29  2552.73       .746      .772067
           bits 23 to 30  2581.37      1.151      .875078
           bits 24 to 31  2464.86      -.497      .309595
           bits 25 to 32  2497.63      -.033      .486657

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::               THIS IS A PARKING LOT TEST                      ::        
     :: In a square of side 100, randomly "park" a car---a circle of  ::        
     :: radius 1.   Then try to park a 2nd, a 3rd, and so on, each    ::        
     :: time parking "by ear".  That is, if an attempt to park a car  ::        
     :: causes a crash with one already parked, try again at a new    ::        
     :: random location. (To avoid path problems, consider parking    ::        
     :: helicopters rather than cars.)   Each attempt leads to either ::        
     :: a crash or a success, the latter followed by an increment to  ::        
     :: the list of cars already parked. If we plot n:  the number of ::        
     :: attempts, versus k::  the number successfully parked, we get a::        
     :: curve that should be similar to those provided by a perfect   ::        
     :: random number generator.  Theory for the behavior of such a   ::        
     :: random curve seems beyond reach, and as graphics displays are ::        
     :: not available for this battery of tests, a simple characteriz ::        
     :: ation of the random experiment is used: k, the number of cars ::        
     :: successfully parked after n=12,000 attempts. Simulation shows ::        
     :: that k should average 3523 with sigma 21.9 and is very close  ::        
     :: to normally distributed.  Thus (k-3523)/21.9 should be a st-  ::        
     :: andard normal variable, which, converted to a uniform varia-  ::        
     :: ble, provides input to a KSTEST based on a sample of 10.      ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           CDPARK: result of ten tests on file bcg_10mb.txt   
            Of 12,000 tries, the average no. of successes
                 should be 3523 with sigma=21.9
            Successes: 3496    z-score: -1.233 p-value: .108811
            Successes: 3495    z-score: -1.279 p-value: .100530
            Successes: 3516    z-score:  -.320 p-value: .374623
            Successes: 3504    z-score:  -.868 p-value: .192812
            Successes: 3539    z-score:   .731 p-value: .767486
            Successes: 3559    z-score:  1.644 p-value: .949895
            Successes: 3534    z-score:   .502 p-value: .692266
            Successes: 3546    z-score:  1.050 p-value: .853193
            Successes: 3545    z-score:  1.005 p-value: .842447
            Successes: 3574    z-score:  2.329 p-value: .990064
 
           square size   avg. no.  parked   sample sigma
             100.            3530.800       25.678
            KSTEST for the above 10: p=  .710710

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::               THE MINIMUM DISTANCE TEST                       ::        
     :: It does this 100 times::   choose n=8000 random points in a   ::        
     :: square of side 10000.  Find d, the minimum distance between   ::        
     :: the (n^2-n)/2 pairs of points.  If the points are truly inde- ::        
     :: pendent uniform, then d^2, the square of the minimum distance ::        
     :: should be (very close to) exponentially distributed with mean ::        
     :: .995 .  Thus 1-exp(-d^2/.995) should be uniform on [0,1) and  ::        
     :: a KSTEST on the resulting 100 values serves as a test of uni- ::        
     :: formity for random points in the square. Test numbers=0 mod 5 ::        
     :: are printed but the KSTEST is based on the full set of 100    ::        
     :: random choices of 8000 points in the 10000x10000 square.      ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
               This is the MINIMUM DISTANCE test
              for random integers in the file bcg_10mb.txt   
     Sample no.    d^2     avg     equiv uni            
           5     .1214   1.2939     .114817
          10    1.2286    .9667     .709098
          15     .1118    .9926     .106308
          20    3.1354   1.1064     .957196
          25    1.5442   1.0591     .788164
          30     .9416   1.0449     .611846
          35    2.4313   1.0636     .913144
          40    1.8131   1.1004     .838333
          45    1.3024   1.0976     .729899
          50     .0963   1.0329     .092205
          55     .1091    .9944     .103885
          60     .3989    .9808     .330315
          65     .5446    .9528     .421513
          70     .3136    .9473     .270371
          75    1.5753    .9446     .794687
          80     .1528    .9096     .142355
          85     .0093    .8895     .009281
          90    1.8394    .9552     .842550
          95    3.3926    .9574     .966948
         100    4.7261   1.0131     .991347
     MINIMUM DISTANCE TEST for bcg_10mb.txt   
          Result of KS test on 20 transformed mindist^2's:
                                  p-value= .137953

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ 

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::              THE 3DSPHERES TEST                               ::        
     :: Choose  4000 random points in a cube of edge 1000.  At each   ::        
     :: point, center a sphere large enough to reach the next closest ::        
     :: point. Then the volume of the smallest such sphere is (very   ::        
     :: close to) exponentially distributed with mean 120pi/3.  Thus  ::        
     :: the radius cubed is exponential with mean 30. (The mean is    ::        
     :: obtained by extensive simulation).  The 3DSPHERES test gener- ::        
     :: ates 4000 such spheres 20 times.  Each min radius cubed leads ::        
     :: to a uniform variable by means of 1-exp(-r^3/30.), then a     ::        
     ::  KSTEST is done on the 20 p-values.                           ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
               The 3DSPHERES test for file bcg_10mb.txt   
 sample no:  1     r^3=  51.930     p-value= .82289
 sample no:  2     r^3=  17.007     p-value= .43272
 sample no:  3     r^3=  46.520     p-value= .78789
 sample no:  4     r^3=  11.465     p-value= .31762
 sample no:  5     r^3=  24.860     p-value= .56338
 sample no:  6     r^3=  28.938     p-value= .61887
 sample no:  7     r^3=   9.685     p-value= .27590
 sample no:  8     r^3=  25.099     p-value= .56683
 sample no:  9     r^3=  30.758     p-value= .64130
 sample no: 10     r^3= 141.428     p-value= .99103
 sample no: 11     r^3=   1.155     p-value= .03776
 sample no: 12     r^3=  57.641     p-value= .85359
 sample no: 13     r^3=  10.330     p-value= .29131
 sample no: 14     r^3=   6.886     p-value= .20509
 sample no: 15     r^3=  15.454     p-value= .40257
 sample no: 16     r^3=  39.355     p-value= .73067
 sample no: 17     r^3=  48.059     p-value= .79850
 sample no: 18     r^3=   4.145     p-value= .12905
 sample no: 19     r^3=  14.018     p-value= .37328
 sample no: 20     r^3=  46.313     p-value= .78642
  A KS test is applied to those 20 p-values.
---------------------------------------------------------
       3DSPHERES test for file bcg_10mb.txt         p-value= .152681
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::      This is the SQEEZE test                                  ::        
     ::  Random integers are floated to get uniforms on [0,1). Start- ::        
     ::  ing with k=2^31=2147483647, the test finds j, the number of  ::        
     ::  iterations necessary to reduce k to 1, using the reduction   ::        
     ::  k=ceiling(k*U), with U provided by floating integers from    ::        
     ::  the file being tested.  Such j's are found 100,000 times,    ::        
     ::  then counts for the number of times j was <=6,7,...,47,>=48  ::        
     ::  are used to provide a chi-square test for cell frequencies.  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
            RESULTS OF SQUEEZE TEST FOR bcg_10mb.txt   
         Table of standardized frequency counts
     ( (obs-exp)/sqrt(exp) )^2
        for j taking values <=6,7,8,...,47,>=48:
      .6     -.3     2.3    -1.0      .9     -.2
     -.8    -1.5     1.0     -.3      .3      .5
    -1.0     1.7    -1.2     -.2      .4      .4
      .9     -.2      .6     -.6    -1.2      .0
     -.3     -.2     1.6      .1     -.1    -1.4
      .3     -.5     -.9    -1.5      .5    -1.0
     -.2     -.7     -.8     -.1      .1      .0
     -.1
           Chi-square with 42 degrees of freedom: 30.875
              z-score= -1.214  p-value= .102498
______________________________________________________________

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::             The  OVERLAPPING SUMS test                        ::        
     :: Integers are floated to get a sequence U(1),U(2),... of uni-  ::        
     :: form [0,1) variables.  Then overlapping sums,                 ::        
     ::   S(1)=U(1)+...+U(100), S2=U(2)+...+U(101),... are formed.    ::        
     :: The S's are virtually normal with a certain covariance mat-   ::        
     :: rix.  A linear transformation of the S's converts them to a   ::        
     :: sequence of independent standard normals, which are converted ::        
     :: to uniform variables for a KSTEST. The  p-values from ten     ::        
     :: KSTESTs are given still another KSTEST.                       ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
                Test no.  1      p-value  .781677
                Test no.  2      p-value  .711411
                Test no.  3      p-value  .078194
                Test no.  4      p-value  .603816
                Test no.  5      p-value  .058893
                Test no.  6      p-value  .513515
                Test no.  7      p-value  .212673
                Test no.  8      p-value  .497298
                Test no.  9      p-value  .984300
                Test no. 10      p-value  .258398
   Results of the OSUM test for bcg_10mb.txt   
        KSTEST on the above 10 p-values:  .057242

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the RUNS test.  It counts runs up, and runs down, ::        
     :: in a sequence of uniform [0,1) variables, obtained by float-  ::        
     :: ing the 32-bit integers in the specified file. This example   ::        
     :: shows how runs are counted:  .123,.357,.789,.425,.224,.416,.95::        
     :: contains an up-run of length 3, a down-run of length 2 and an ::        
     :: up-run of (at least) 2, depending on the next values.  The    ::        
     :: covariance matrices for the runs-up and runs-down are well    ::        
     :: known, leading to chisquare tests for quadratic forms in the  ::        
     :: weak inverses of the covariance matrices.  Runs are counted   ::        
     :: for sequences of length 10,000.  This is done ten times. Then ::        
     :: repeated.                                                     ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           The RUNS test for file bcg_10mb.txt   
     Up and down runs in a sample of 10000
_________________________________________________ 
                 Run test for bcg_10mb.txt   :
       runs up; ks test for 10 p's: .910380
     runs down; ks test for 10 p's: .523974
                 Run test for bcg_10mb.txt   :
       runs up; ks test for 10 p's: .132232
     runs down; ks test for 10 p's: .108138

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the CRAPS TEST. It plays 200,000 games of craps, finds::        
     :: the number of wins and the number of throws necessary to end  ::        
     :: each game.  The number of wins should be (very close to) a    ::        
     :: normal with mean 200000p and variance 200000p(1-p), with      ::        
     :: p=244/495.  Throws necessary to complete the game can vary    ::        
     :: from 1 to infinity, but counts for all>21 are lumped with 21. ::        
     :: A chi-square test is made on the no.-of-throws cell counts.   ::        
     :: Each 32-bit integer from the test file provides the value for ::        
     :: the throw of a die, by floating to [0,1), multiplying by 6    ::        
     :: and taking 1 plus the integer part of the result.             ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
                Results of craps test for bcg_10mb.txt   
  No. of wins:  Observed Expected
                                98473    98585.86
                  98473= No. of wins, z-score= -.505 pvalue= .30686
   Analysis of Throws-per-Game:
 Chisq=  18.34 for 20 degrees of freedom, p=  .43469
               Throws Observed Expected  Chisq     Sum
                  1    66260    66666.7   2.481    2.481
                  2    37863    37654.3   1.156    3.637
                  3    27383    26954.7   6.805   10.442
                  4    19246    19313.5    .236   10.677
                  5    13728    13851.4   1.100   11.777
                  6     9892     9943.5    .267   12.044
                  7     7185     7145.0    .224   12.268
                  8     5162     5139.1    .102   12.370
                  9     3658     3699.9    .474   12.844
                 10     2693     2666.3    .267   13.111
                 11     1929     1923.3    .017   13.128
                 12     1430     1388.7   1.226   14.354
                 13      972     1003.7   1.002   15.356
                 14      712      726.1    .275   15.631
                 15      524      525.8    .006   15.638
                 16      356      381.2   1.660   17.297
                 17      285      276.5    .259   17.556
                 18      197      200.8    .073   17.629
                 19      145      146.0    .007   17.636
                 20      107      106.2    .006   17.642
                 21      273      287.1    .694   18.336
            SUMMARY  FOR bcg_10mb.txt   
                p-value for no. of wins: .306859
                p-value for throws/game: .434691

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

 Results of DIEHARD battery of tests sent to file resbcg.txt     
