       NOTE: Most of the tests in DIEHARD return a p-value, which               
       should be uniform on [0,1) if the input file contains truly              
       independent random bits.   Those p-values are obtained by                
       p=F(X), where F is the assumed distribution of the sample                
       random variable X---often normal. But that assumed F is just             
       an asymptotic approximation, for which the fit will be worst             
       in the tails. Thus you should not be surprised with                      
       occasional p-values near 0 or 1, such as .0012 or .9983.                 
       When a bit stream really FAILS BIG, you will get p's of 0 or             
       1 to six or more places.  By all means, do not, as a                     
       Statistician might, think that a p < .025 or p> .975 means               
       that the RNG has "failed the test at the .05 level".  Such               
       p's happen among the hundreds that DIEHARD produces, even                
       with good RNG's.  So keep in mind that " p happens".                     
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::            This is the BIRTHDAY SPACINGS TEST                 ::        
     :: Choose m birthdays in a year of n days.  List the spacings    ::        
     :: between the birthdays.  If j is the number of values that     ::        
     :: occur more than once in that list, then j is asymptotically   ::        
     :: Poisson distributed with mean m^3/(4n).  Experience shows n   ::        
     :: must be quite large, say n>=2^18, for comparing the results   ::        
     :: to the Poisson distribution with that mean.  This test uses   ::        
     :: n=2^24 and m=2^9,  so that the underlying distribution for j  ::        
     :: is taken to be Poisson with lambda=2^27/(2^26)=2.  A sample   ::        
     :: of 500 j's is taken, and a chi-square goodness of fit test    ::        
     :: provides a p value.  The first test uses bits 1-24 (counting  ::        
     :: from the left) from integers in the specified file.           ::        
     ::   Then the file is closed and reopened. Next, bits 2-25 are   ::        
     :: used to provide birthdays, then 3-26 and so on to bits 9-32.  ::        
     :: Each set of bits provides a p-value, and the nine p-values    ::        
     :: provide a sample for a KSTEST.                                ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 BIRTHDAY SPACINGS TEST, M= 512 N=2**24 LAMBDA=  2.0000
           Results for csr_10mb.txt   
                   For a sample of size 500:     mean   
           csr_10mb.txt    using bits  1 to 24   1.990
  duplicate       number       number 
  spacings       observed     expected
        0          67.       67.668
        1         138.      135.335
        2         139.      135.335
        3          83.       90.224
        4          44.       45.112
        5          22.       18.045
  6 to INF          7.        8.282
 Chisquare with  6 d.o.f. =     1.83 p-value=  .065298
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           csr_10mb.txt    using bits  2 to 25   2.066
  duplicate       number       number 
  spacings       observed     expected
        0          64.       67.668
        1         130.      135.335
        2         136.      135.335
        3          92.       90.224
        4          47.       45.112
        5          21.       18.045
  6 to INF         10.        8.282
 Chisquare with  6 d.o.f. =     1.37 p-value=  .032157
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           csr_10mb.txt    using bits  3 to 26   2.086
  duplicate       number       number 
  spacings       observed     expected
        0          65.       67.668
        1         123.      135.335
        2         137.      135.335
        3          94.       90.224
        4          51.       45.112
        5          22.       18.045
  6 to INF          8.        8.282
 Chisquare with  6 d.o.f. =     3.05 p-value=  .197854
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           csr_10mb.txt    using bits  4 to 27   1.876
  duplicate       number       number 
  spacings       observed     expected
        0          71.       67.668
        1         148.      135.335
        2         136.      135.335
        3          87.       90.224
        4          37.       45.112
        5          17.       18.045
  6 to INF          4.        8.282
 Chisquare with  6 d.o.f. =     5.20 p-value=  .481641
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           csr_10mb.txt    using bits  5 to 28   1.948
  duplicate       number       number 
  spacings       observed     expected
        0          71.       67.668
        1         126.      135.335
        2         149.      135.335
        3          90.       90.224
        4          45.       45.112
        5          14.       18.045
  6 to INF          5.        8.282
 Chisquare with  6 d.o.f. =     4.40 p-value=  .376707
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           csr_10mb.txt    using bits  6 to 29   2.020
  duplicate       number       number 
  spacings       observed     expected
        0          74.       67.668
        1         125.      135.335
        2         133.      135.335
        3          96.       90.224
        4          42.       45.112
        5          23.       18.045
  6 to INF          7.        8.282
 Chisquare with  6 d.o.f. =     3.57 p-value=  .264807
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           csr_10mb.txt    using bits  7 to 30   1.954
  duplicate       number       number 
  spacings       observed     expected
        0          78.       67.668
        1         130.      135.335
        2         141.      135.335
        3          74.       90.224
        4          53.       45.112
        5          17.       18.045
  6 to INF          7.        8.282
 Chisquare with  6 d.o.f. =     6.58 p-value=  .638617
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           csr_10mb.txt    using bits  8 to 31   1.978
  duplicate       number       number 
  spacings       observed     expected
        0          76.       67.668
        1         130.      135.335
        2         128.      135.335
        3          96.       90.224
        4          45.       45.112
        5          17.       18.045
  6 to INF          8.        8.282
 Chisquare with  6 d.o.f. =     2.07 p-value=  .087242
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           csr_10mb.txt    using bits  9 to 32   1.956
  duplicate       number       number 
  spacings       observed     expected
        0          77.       67.668
        1         118.      135.335
        2         147.      135.335
        3          98.       90.224
        4          38.       45.112
        5          14.       18.045
  6 to INF          8.        8.282
 Chisquare with  6 d.o.f. =     7.22 p-value=  .699072
  :::::::::::::::::::::::::::::::::::::::::
   The 9 p-values were
        .065298   .032157   .197854   .481641   .376707
        .264807   .638617   .087242   .699072
  A KSTEST for the 9 p-values yields  .908003

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::            THE OVERLAPPING 5-PERMUTATION TEST                 ::        
     :: This is the OPERM5 test.  It looks at a sequence of one mill- ::        
     :: ion 32-bit random integers.  Each set of five consecutive     ::        
     :: integers can be in one of 120 states, for the 5! possible or- ::        
     :: derings of five numbers.  Thus the 5th, 6th, 7th,...numbers   ::        
     :: each provide a state. As many thousands of state transitions  ::        
     :: are observed,  cumulative counts are made of the number of    ::        
     :: occurences of each state.  Then the quadratic form in the     ::        
     :: weak inverse of the 120x120 covariance matrix yields a test   ::        
     :: equivalent to the likelihood ratio test that the 120 cell     ::        
     :: counts came from the specified (asymptotically) normal dis-   ::        
     :: tribution with the specified 120x120 covariance matrix (with  ::        
     :: rank 99).  This version uses 1,000,000 integers, twice.       ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           OPERM5 test for file csr_10mb.txt   
     For a sample of 1,000,000 consecutive 5-tuples,
 chisquare for 99 degrees of freedom=134.465; p-value= .989702
           OPERM5 test for file csr_10mb.txt   
     For a sample of 1,000,000 consecutive 5-tuples,
 chisquare for 99 degrees of freedom=127.700; p-value= .972354
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 31x31 matrices. The leftmost ::        
     :: 31 bits of 31 random integers from the test sequence are used ::        
     :: to form a 31x31 binary matrix over the field {0,1}. The rank  ::        
     :: is determined. That rank can be from 0 to 31, but ranks< 28   ::        
     :: are rare, and their counts are pooled with those for rank 28. ::        
     :: Ranks are found for 40,000 such random matrices and a chisqua-::        
     :: re test is performed on counts for ranks 31,30,29 and <=28.   ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
    Binary rank test for csr_10mb.txt   
         Rank test for 31x31 binary matrices:
        rows from leftmost 31 bits of each 32-bit integer
      rank   observed  expected (o-e)^2/e  sum
        28       205     211.4   .194832     .195
        29      5177    5134.0   .359976     .555
        30     22968   23103.0   .789405    1.344
        31     11650   11551.5   .839494    2.184
  chisquare= 2.184 for 3 d. of f.; p-value= .534575
--------------------------------------------------------------
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 32x32 matrices. A random 32x ::        
     :: 32 binary matrix is formed, each row a 32-bit random integer. ::        
     :: The rank is determined. That rank can be from 0 to 32, ranks  ::        
     :: less than 29 are rare, and their counts are pooled with those ::        
     :: for rank 29.  Ranks are found for 40,000 such random matrices ::        
     :: and a chisquare test is performed on counts for ranks  32,31, ::        
     :: 30 and <=29.                                                  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
    Binary rank test for csr_10mb.txt   
         Rank test for 32x32 binary matrices:
        rows from leftmost 32 bits of each 32-bit integer
      rank   observed  expected (o-e)^2/e  sum
        29       230     211.4  1.633211    1.633
        30      5164    5134.0   .175182    1.808
        31     23159   23103.0   .135513    1.944
        32     11447   11551.5   .945793    2.890
  chisquare= 2.890 for 3 d. of f.; p-value= .635628
--------------------------------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 6x8 matrices.  From each of  ::        
     :: six random 32-bit integers from the generator under test, a   ::        
     :: specified byte is chosen, and the resulting six bytes form a  ::        
     :: 6x8 binary matrix whose rank is determined.  That rank can be ::        
     :: from 0 to 6, but ranks 0,1,2,3 are rare; their counts are     ::        
     :: pooled with those for rank 4. Ranks are found for 100,000     ::        
     :: random matrices, and a chi-square test is performed on        ::        
     :: counts for ranks 6,5 and <=4.                                 ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
         Binary Rank Test for csr_10mb.txt   
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csr_10mb.txt   
     b-rank test for bits  1 to  8
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          942       944.3        .006        .006
          r =5        22012     21743.9       3.306       3.311
          r =6        77046     77311.8        .914       4.225
                        p=1-exp(-SUM/2)= .87907
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csr_10mb.txt   
     b-rank test for bits  2 to  9
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          992       944.3       2.409       2.409
          r =5        21982     21743.9       2.607       5.017
          r =6        77026     77311.8       1.057       6.073
                        p=1-exp(-SUM/2)= .95200
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csr_10mb.txt   
     b-rank test for bits  3 to 10
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          922       944.3        .527        .527
          r =5        21825     21743.9        .302        .829
          r =6        77253     77311.8        .045        .874
                        p=1-exp(-SUM/2)= .35399
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csr_10mb.txt   
     b-rank test for bits  4 to 11
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          993       944.3       2.511       2.511
          r =5        21899     21743.9       1.106       3.618
          r =6        77108     77311.8        .537       4.155
                        p=1-exp(-SUM/2)= .87476
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csr_10mb.txt   
     b-rank test for bits  5 to 12
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          900       944.3       2.078       2.078
          r =5        21734     21743.9        .005       2.083
          r =6        77366     77311.8        .038       2.121
                        p=1-exp(-SUM/2)= .65369
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csr_10mb.txt   
     b-rank test for bits  6 to 13
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          968       944.3        .595        .595
          r =5        21483     21743.9       3.130       3.725
          r =6        77549     77311.8        .728       4.453
                        p=1-exp(-SUM/2)= .89209
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csr_10mb.txt   
     b-rank test for bits  7 to 14
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          925       944.3        .395        .395
          r =5        21549     21743.9       1.747       2.141
          r =6        77526     77311.8        .593       2.735
                        p=1-exp(-SUM/2)= .74525
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csr_10mb.txt   
     b-rank test for bits  8 to 15
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          947       944.3        .008        .008
          r =5        21480     21743.9       3.203       3.211
          r =6        77573     77311.8        .882       4.093
                        p=1-exp(-SUM/2)= .87082
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csr_10mb.txt   
     b-rank test for bits  9 to 16
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          966       944.3        .499        .499
          r =5        21590     21743.9       1.089       1.588
          r =6        77444     77311.8        .226       1.814
                        p=1-exp(-SUM/2)= .59625
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csr_10mb.txt   
     b-rank test for bits 10 to 17
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          945       944.3        .001        .001
          r =5        21689     21743.9        .139        .139
          r =6        77366     77311.8        .038        .177
                        p=1-exp(-SUM/2)= .08475
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csr_10mb.txt   
     b-rank test for bits 11 to 18
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          993       944.3       2.511       2.511
          r =5        21556     21743.9       1.624       4.135
          r =6        77451     77311.8        .251       4.386
                        p=1-exp(-SUM/2)= .88841
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csr_10mb.txt   
     b-rank test for bits 12 to 19
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4         1001       944.3       3.404       3.404
          r =5        21738     21743.9        .002       3.406
          r =6        77261     77311.8        .033       3.439
                        p=1-exp(-SUM/2)= .82088
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csr_10mb.txt   
     b-rank test for bits 13 to 20
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          965       944.3        .454        .454
          r =5        21789     21743.9        .094        .547
          r =6        77246     77311.8        .056        .603
                        p=1-exp(-SUM/2)= .26039
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csr_10mb.txt   
     b-rank test for bits 14 to 21
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          909       944.3       1.320       1.320
          r =5        21717     21743.9        .033       1.353
          r =6        77374     77311.8        .050       1.403
                        p=1-exp(-SUM/2)= .50416
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csr_10mb.txt   
     b-rank test for bits 15 to 22
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          862       944.3       7.173       7.173
          r =5        21740     21743.9        .001       7.174
          r =6        77398     77311.8        .096       7.270
                        p=1-exp(-SUM/2)= .97361
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csr_10mb.txt   
     b-rank test for bits 16 to 23
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4         1002       944.3       3.526       3.526
          r =5        21697     21743.9        .101       3.627
          r =6        77301     77311.8        .002       3.628
                        p=1-exp(-SUM/2)= .83701
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csr_10mb.txt   
     b-rank test for bits 17 to 24
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          973       944.3        .872        .872
          r =5        21686     21743.9        .154       1.026
          r =6        77341     77311.8        .011       1.037
                        p=1-exp(-SUM/2)= .40471
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csr_10mb.txt   
     b-rank test for bits 18 to 25
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          929       944.3        .248        .248
          r =5        21887     21743.9        .942       1.190
          r =6        77184     77311.8        .211       1.401
                        p=1-exp(-SUM/2)= .50366
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csr_10mb.txt   
     b-rank test for bits 19 to 26
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          966       944.3        .499        .499
          r =5        21831     21743.9        .349        .848
          r =6        77203     77311.8        .153       1.001
                        p=1-exp(-SUM/2)= .39366
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csr_10mb.txt   
     b-rank test for bits 20 to 27
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          955       944.3        .121        .121
          r =5        21597     21743.9        .992       1.114
          r =6        77448     77311.8        .240       1.354
                        p=1-exp(-SUM/2)= .49176
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csr_10mb.txt   
     b-rank test for bits 21 to 28
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          962       944.3        .332        .332
          r =5        21839     21743.9        .416        .748
          r =6        77199     77311.8        .165        .912
                        p=1-exp(-SUM/2)= .36626
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csr_10mb.txt   
     b-rank test for bits 22 to 29
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          956       944.3        .145        .145
          r =5        21699     21743.9        .093        .238
          r =6        77345     77311.8        .014        .252
                        p=1-exp(-SUM/2)= .11834
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csr_10mb.txt   
     b-rank test for bits 23 to 30
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          979       944.3       1.275       1.275
          r =5        21729     21743.9        .010       1.285
          r =6        77292     77311.8        .005       1.290
                        p=1-exp(-SUM/2)= .47542
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csr_10mb.txt   
     b-rank test for bits 24 to 31
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          936       944.3        .073        .073
          r =5        21640     21743.9        .496        .569
          r =6        77424     77311.8        .163        .732
                        p=1-exp(-SUM/2)= .30659
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csr_10mb.txt   
     b-rank test for bits 25 to 32
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          941       944.3        .012        .012
          r =5        21522     21743.9       2.265       2.276
          r =6        77537     77311.8        .656       2.932
                        p=1-exp(-SUM/2)= .76916
   TEST SUMMARY, 25 tests on 100,000 random 6x8 matrices
 These should be 25 uniform [0,1] random variables:
     .879071     .952001     .353994     .874759     .653694
     .892093     .745248     .870817     .596253     .084754
     .888408     .820876     .260389     .504159     .973614
     .837014     .404707     .503656     .393660     .491757
     .366263     .118343     .475417     .306590     .769156
   brank test summary for csr_10mb.txt   
       The KS test for those 25 supposed UNI's yields
                    KS p-value= .886189

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::                   THE BITSTREAM TEST                          ::        
     :: The file under test is viewed as a stream of bits. Call them  ::        
     :: b1,b2,... .  Consider an alphabet with two "letters", 0 and 1 ::        
     :: and think of the stream of bits as a succession of 20-letter  ::        
     :: "words", overlapping.  Thus the first word is b1b2...b20, the ::        
     :: second is b2b3...b21, and so on.  The bitstream test counts   ::        
     :: the number of missing 20-letter (20-bit) words in a string of ::        
     :: 2^21 overlapping 20-letter words.  There are 2^20 possible 20 ::        
     :: letter words.  For a truly random string of 2^21+19 bits, the ::        
     :: number of missing words j should be (very close to) normally  ::        
     :: distributed with mean 141,909 and sigma 428.  Thus            ::        
     ::  (j-141909)/428 should be a standard normal variate (z score) ::        
     :: that leads to a uniform [0,1) p value.  The test is repeated  ::        
     :: twenty times.                                                 ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 THE OVERLAPPING 20-tuples BITSTREAM  TEST, 20 BITS PER WORD, N words
   This test uses N=2^21 and samples the bitstream 20 times.
  No. missing words should average  141909. with sigma=428.
---------------------------------------------------------
 tst no  1:  141962 missing words,     .12 sigmas from mean, p-value= .54897
 tst no  2:  141832 missing words,    -.18 sigmas from mean, p-value= .42831
 tst no  3:  142634 missing words,    1.69 sigmas from mean, p-value= .95479
 tst no  4:  142271 missing words,     .85 sigmas from mean, p-value= .80095
 tst no  5:  142122 missing words,     .50 sigmas from mean, p-value= .69037
 tst no  6:  141832 missing words,    -.18 sigmas from mean, p-value= .42831
 tst no  7:  141548 missing words,    -.84 sigmas from mean, p-value= .19927
 tst no  8:  142415 missing words,    1.18 sigmas from mean, p-value= .88129
 tst no  9:  141928 missing words,     .04 sigmas from mean, p-value= .51740
 tst no 10:  141870 missing words,    -.09 sigmas from mean, p-value= .46339
 tst no 11:  141731 missing words,    -.42 sigmas from mean, p-value= .33847
 tst no 12:  142064 missing words,     .36 sigmas from mean, p-value= .64109
 tst no 13:  141190 missing words,   -1.68 sigmas from mean, p-value= .04641
 tst no 14:  141655 missing words,    -.59 sigmas from mean, p-value= .27618
 tst no 15:  141521 missing words,    -.91 sigmas from mean, p-value= .18212
 tst no 16:  142079 missing words,     .40 sigmas from mean, p-value= .65411
 tst no 17:  142312 missing words,     .94 sigmas from mean, p-value= .82660
 tst no 18:  142265 missing words,     .83 sigmas from mean, p-value= .79702
 tst no 19:  141640 missing words,    -.63 sigmas from mean, p-value= .26459
 tst no 20:  141547 missing words,    -.85 sigmas from mean, p-value= .19862

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::             The tests OPSO, OQSO and DNA                      ::        
     ::         OPSO means Overlapping-Pairs-Sparse-Occupancy         ::        
     :: The OPSO test considers 2-letter words from an alphabet of    ::        
     :: 1024 letters.  Each letter is determined by a specified ten   ::        
     :: bits from a 32-bit integer in the sequence to be tested. OPSO ::        
     :: generates  2^21 (overlapping) 2-letter words  (from 2^21+1    ::        
     :: "keystrokes")  and counts the number of missing words---that  ::        
     :: is 2-letter words which do not appear in the entire sequence. ::        
     :: That count should be very close to normally distributed with  ::        
     :: mean 141,909, sigma 290. Thus (missingwrds-141909)/290 should ::        
     :: be a standard normal variable. The OPSO test takes 32 bits at ::        
     :: a time from the test file and uses a designated set of ten    ::        
     :: consecutive bits. It then restarts the file for the next de-  ::        
     :: signated 10 bits, and so on.                                  ::        
     ::                                                               ::        
     ::     OQSO means Overlapping-Quadruples-Sparse-Occupancy        ::        
     ::   The test OQSO is similar, except that it considers 4-letter ::        
     :: words from an alphabet of 32 letters, each letter determined  ::        
     :: by a designated string of 5 consecutive bits from the test    ::        
     :: file, elements of which are assumed 32-bit random integers.   ::        
     :: The mean number of missing words in a sequence of 2^21 four-  ::        
     :: letter words,  (2^21+3 "keystrokes"), is again 141909, with   ::        
     :: sigma = 295.  The mean is based on theory; sigma comes from   ::        
     :: extensive simulation.                                         ::        
     ::                                                               ::        
     ::    The DNA test considers an alphabet of 4 letters::  C,G,A,T,::        
     :: determined by two designated bits in the sequence of random   ::        
     :: integers being tested.  It considers 10-letter words, so that ::        
     :: as in OPSO and OQSO, there are 2^20 possible words, and the   ::        
     :: mean number of missing words from a string of 2^21  (over-    ::        
     :: lapping)  10-letter  words (2^21+9 "keystrokes") is 141909.   ::        
     :: The standard deviation sigma=339 was determined as for OQSO   ::        
     :: by simulation.  (Sigma for OPSO, 290, is the true value (to   ::        
     :: three places), not determined by simulation.                  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 OPSO test for generator csr_10mb.txt   
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
    OPSO for csr_10mb.txt    using bits 23 to 32        142617  2.440  .9927
    OPSO for csr_10mb.txt    using bits 22 to 31        142489  1.999  .9772
    OPSO for csr_10mb.txt    using bits 21 to 30        141953   .151  .5599
    OPSO for csr_10mb.txt    using bits 20 to 29        142297  1.337  .9094
    OPSO for csr_10mb.txt    using bits 19 to 28        141364 -1.880  .0300
    OPSO for csr_10mb.txt    using bits 18 to 27        141478 -1.487  .0685
    OPSO for csr_10mb.txt    using bits 17 to 26        142061   .523  .6995
    OPSO for csr_10mb.txt    using bits 16 to 25        141972   .216  .5855
    OPSO for csr_10mb.txt    using bits 15 to 24        141926   .057  .5229
    OPSO for csr_10mb.txt    using bits 14 to 23        141778  -.453  .3253
    OPSO for csr_10mb.txt    using bits 13 to 22        140992 -3.163  .0008
    OPSO for csr_10mb.txt    using bits 12 to 21        142066   .540  .7055
    OPSO for csr_10mb.txt    using bits 11 to 20        141466 -1.529  .0632
    OPSO for csr_10mb.txt    using bits 10 to 19        141546 -1.253  .1051
    OPSO for csr_10mb.txt    using bits  9 to 18        142108   .685  .7534
    OPSO for csr_10mb.txt    using bits  8 to 17        141821  -.305  .3803
    OPSO for csr_10mb.txt    using bits  7 to 16        141194 -2.467  .0068
    OPSO for csr_10mb.txt    using bits  6 to 15        142072   .561  .7126
    OPSO for csr_10mb.txt    using bits  5 to 14        141816  -.322  .3738
    OPSO for csr_10mb.txt    using bits  4 to 13        141528 -1.315  .0943
    OPSO for csr_10mb.txt    using bits  3 to 12        141441 -1.615  .0532
    OPSO for csr_10mb.txt    using bits  2 to 11        141533 -1.298  .0972
    OPSO for csr_10mb.txt    using bits  1 to 10        141611 -1.029  .1518
 OQSO test for generator csr_10mb.txt   
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
    OQSO for csr_10mb.txt    using bits 28 to 32        141883  -.089  .4644
    OQSO for csr_10mb.txt    using bits 27 to 31        142118   .707  .7603
    OQSO for csr_10mb.txt    using bits 26 to 30        142057   .501  .6917
    OQSO for csr_10mb.txt    using bits 25 to 29        141916   .023  .5090
    OQSO for csr_10mb.txt    using bits 24 to 28        141933   .080  .5320
    OQSO for csr_10mb.txt    using bits 23 to 27        141817  -.313  .3771
    OQSO for csr_10mb.txt    using bits 22 to 26        141469 -1.493  .0678
    OQSO for csr_10mb.txt    using bits 21 to 25        142140   .782  .7829
    OQSO for csr_10mb.txt    using bits 20 to 24        142225  1.070  .8577
    OQSO for csr_10mb.txt    using bits 19 to 23        141882  -.093  .4631
    OQSO for csr_10mb.txt    using bits 18 to 22        142240  1.121  .8688
    OQSO for csr_10mb.txt    using bits 17 to 21        142083   .589  .7220
    OQSO for csr_10mb.txt    using bits 16 to 20        141531 -1.282  .0998
    OQSO for csr_10mb.txt    using bits 15 to 19        142019   .372  .6450
    OQSO for csr_10mb.txt    using bits 14 to 18        142079   .575  .7174
    OQSO for csr_10mb.txt    using bits 13 to 17        141874  -.120  .4523
    OQSO for csr_10mb.txt    using bits 12 to 16        142436  1.785  .9629
    OQSO for csr_10mb.txt    using bits 11 to 15        141280 -2.133  .0164
    OQSO for csr_10mb.txt    using bits 10 to 14        141701  -.706  .2400
    OQSO for csr_10mb.txt    using bits  9 to 13        141339 -1.933  .0266
    OQSO for csr_10mb.txt    using bits  8 to 12        141558 -1.191  .1168
    OQSO for csr_10mb.txt    using bits  7 to 11        141773  -.462  .3220
    OQSO for csr_10mb.txt    using bits  6 to 10        142748  2.843  .9978
    OQSO for csr_10mb.txt    using bits  5 to  9        142170   .884  .8116
    OQSO for csr_10mb.txt    using bits  4 to  8        141701  -.706  .2400
    OQSO for csr_10mb.txt    using bits  3 to  7        141822  -.296  .3836
    OQSO for csr_10mb.txt    using bits  2 to  6        141599 -1.052  .1464
    OQSO for csr_10mb.txt    using bits  1 to  5        141494 -1.408  .0796
  DNA test for generator csr_10mb.txt   
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
     DNA for csr_10mb.txt    using bits 31 to 32        141083 -2.438  .0074
     DNA for csr_10mb.txt    using bits 30 to 31        142737  2.442  .9927
     DNA for csr_10mb.txt    using bits 29 to 30        142244   .987  .8382
     DNA for csr_10mb.txt    using bits 28 to 29        142018   .321  .6257
     DNA for csr_10mb.txt    using bits 27 to 28        141473 -1.287  .0990
     DNA for csr_10mb.txt    using bits 26 to 27        142046   .403  .6566
     DNA for csr_10mb.txt    using bits 25 to 26        141774  -.399  .3449
     DNA for csr_10mb.txt    using bits 24 to 25        141954   .132  .5524
     DNA for csr_10mb.txt    using bits 23 to 24        141818  -.269  .3938
     DNA for csr_10mb.txt    using bits 22 to 23        142056   .433  .6674
     DNA for csr_10mb.txt    using bits 21 to 22        142267  1.055  .8543
     DNA for csr_10mb.txt    using bits 20 to 21        141960   .149  .5594
     DNA for csr_10mb.txt    using bits 19 to 20        141635  -.809  .2092
     DNA for csr_10mb.txt    using bits 18 to 19        142392  1.424  .9227
     DNA for csr_10mb.txt    using bits 17 to 18        141713  -.579  .2812
     DNA for csr_10mb.txt    using bits 16 to 17        141947   .111  .5442
     DNA for csr_10mb.txt    using bits 15 to 16        142034   .368  .6435
     DNA for csr_10mb.txt    using bits 14 to 15        141342 -1.674  .0471
     DNA for csr_10mb.txt    using bits 13 to 14        142176   .787  .7843
     DNA for csr_10mb.txt    using bits 12 to 13        142045   .400  .6555
     DNA for csr_10mb.txt    using bits 11 to 12        142176   .787  .7843
     DNA for csr_10mb.txt    using bits 10 to 11        141794  -.340  .3669
     DNA for csr_10mb.txt    using bits  9 to 10        141660  -.735  .2310
     DNA for csr_10mb.txt    using bits  8 to  9        142125   .636  .7377
     DNA for csr_10mb.txt    using bits  7 to  8        141872  -.110  .4562
     DNA for csr_10mb.txt    using bits  6 to  7        142544  1.872  .9694
     DNA for csr_10mb.txt    using bits  5 to  6        142015   .312  .6224
     DNA for csr_10mb.txt    using bits  4 to  5        141780  -.381  .3514
     DNA for csr_10mb.txt    using bits  3 to  4        141881  -.084  .4667
     DNA for csr_10mb.txt    using bits  2 to  3        142191   .831  .7970
     DNA for csr_10mb.txt    using bits  1 to  2        141518 -1.154  .1242

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the COUNT-THE-1's TEST on a stream of bytes.      ::        
     :: Consider the file under test as a stream of bytes (four per   ::        
     :: 32 bit integer).  Each byte can contain from 0 to 8 1's,      ::        
     :: with probabilities 1,8,28,56,70,56,28,8,1 over 256.  Now let  ::        
     :: the stream of bytes provide a string of overlapping  5-letter ::        
     :: words, each "letter" taking values A,B,C,D,E. The letters are ::        
     :: determined by the number of 1's in a byte::  0,1,or 2 yield A,::        
     :: 3 yields B, 4 yields C, 5 yields D and 6,7 or 8 yield E. Thus ::        
     :: we have a monkey at a typewriter hitting five keys with vari- ::        
     :: ous probabilities (37,56,70,56,37 over 256).  There are 5^5   ::        
     :: possible 5-letter words, and from a string of 256,000 (over-  ::        
     :: lapping) 5-letter words, counts are made on the frequencies   ::        
     :: for each word.   The quadratic form in the weak inverse of    ::        
     :: the covariance matrix of the cell counts provides a chisquare ::        
     :: test::  Q5-Q4, the difference of the naive Pearson sums of    ::        
     :: (OBS-EXP)^2/EXP on counts for 5- and 4-letter cell counts.    ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
   Test results for csr_10mb.txt   
 Chi-square with 5^5-5^4=2500 d.of f. for sample size:2560000
                               chisquare  equiv normal  p-value
  Results fo COUNT-THE-1's in successive bytes:
 byte stream for csr_10mb.txt     2594.05      1.330      .908257
 byte stream for csr_10mb.txt     2518.89       .267      .605309

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the COUNT-THE-1's TEST for specific bytes.        ::        
     :: Consider the file under test as a stream of 32-bit integers.  ::        
     :: From each integer, a specific byte is chosen , say the left-  ::        
     :: most::  bits 1 to 8. Each byte can contain from 0 to 8 1's,   ::        
     :: with probabilitie 1,8,28,56,70,56,28,8,1 over 256.  Now let   ::        
     :: the specified bytes from successive integers provide a string ::        
     :: of (overlapping) 5-letter words, each "letter" taking values  ::        
     :: A,B,C,D,E. The letters are determined  by the number of 1's,  ::        
     :: in that byte::  0,1,or 2 ---> A, 3 ---> B, 4 ---> C, 5 ---> D,::        
     :: and  6,7 or 8 ---> E.  Thus we have a monkey at a typewriter  ::        
     :: hitting five keys with with various probabilities::  37,56,70,::        
     :: 56,37 over 256. There are 5^5 possible 5-letter words, and    ::        
     :: from a string of 256,000 (overlapping) 5-letter words, counts ::        
     :: are made on the frequencies for each word. The quadratic form ::        
     :: in the weak inverse of the covariance matrix of the cell      ::        
     :: counts provides a chisquare test::  Q5-Q4, the difference of  ::        
     :: the naive Pearson  sums of (OBS-EXP)^2/EXP on counts for 5-   ::        
     :: and 4-letter cell counts.                                     ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 Chi-square with 5^5-5^4=2500 d.of f. for sample size: 256000
                      chisquare  equiv normal  p value
  Results for COUNT-THE-1's in specified bytes:
           bits  1 to  8  2466.27      -.477      .316675
           bits  2 to  9  2615.30      1.631      .948505
           bits  3 to 10  2590.99      1.287      .900928
           bits  4 to 11  2513.85       .196      .577656
           bits  5 to 12  2483.18      -.238      .405967
           bits  6 to 13  2450.69      -.697      .242779
           bits  7 to 14  2492.16      -.111      .455868
           bits  8 to 15  2520.10       .284      .611867
           bits  9 to 16  2484.75      -.216      .414613
           bits 10 to 17  2393.87     -1.501      .066694
           bits 11 to 18  2538.47       .544      .706772
           bits 12 to 19  2449.89      -.709      .239245
           bits 13 to 20  2636.70      1.933      .973392
           bits 14 to 21  2517.57       .249      .598140
           bits 15 to 22  2531.73       .449      .673172
           bits 16 to 23  2492.36      -.108      .457006
           bits 17 to 24  2394.62     -1.490      .068082
           bits 18 to 25  2502.35       .033      .513266
           bits 19 to 26  2509.77       .138      .554964
           bits 20 to 27  2498.12      -.027      .489398
           bits 21 to 28  2459.48      -.573      .283310
           bits 22 to 29  2423.69     -1.079      .140253
           bits 23 to 30  2569.85       .988      .838379
           bits 24 to 31  2449.17      -.719      .236132
           bits 25 to 32  2613.39      1.604      .945600

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::               THIS IS A PARKING LOT TEST                      ::        
     :: In a square of side 100, randomly "park" a car---a circle of  ::        
     :: radius 1.   Then try to park a 2nd, a 3rd, and so on, each    ::        
     :: time parking "by ear".  That is, if an attempt to park a car  ::        
     :: causes a crash with one already parked, try again at a new    ::        
     :: random location. (To avoid path problems, consider parking    ::        
     :: helicopters rather than cars.)   Each attempt leads to either ::        
     :: a crash or a success, the latter followed by an increment to  ::        
     :: the list of cars already parked. If we plot n:  the number of ::        
     :: attempts, versus k::  the number successfully parked, we get a::        
     :: curve that should be similar to those provided by a perfect   ::        
     :: random number generator.  Theory for the behavior of such a   ::        
     :: random curve seems beyond reach, and as graphics displays are ::        
     :: not available for this battery of tests, a simple characteriz ::        
     :: ation of the random experiment is used: k, the number of cars ::        
     :: successfully parked after n=12,000 attempts. Simulation shows ::        
     :: that k should average 3523 with sigma 21.9 and is very close  ::        
     :: to normally distributed.  Thus (k-3523)/21.9 should be a st-  ::        
     :: andard normal variable, which, converted to a uniform varia-  ::        
     :: ble, provides input to a KSTEST based on a sample of 10.      ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           CDPARK: result of ten tests on file csr_10mb.txt   
            Of 12,000 tries, the average no. of successes
                 should be 3523 with sigma=21.9
            Successes: 3531    z-score:   .365 p-value: .642555
            Successes: 3556    z-score:  1.507 p-value: .934075
            Successes: 3532    z-score:   .411 p-value: .659449
            Successes: 3514    z-score:  -.411 p-value: .340551
            Successes: 3539    z-score:   .731 p-value: .767486
            Successes: 3563    z-score:  1.826 p-value: .966111
            Successes: 3543    z-score:   .913 p-value: .819442
            Successes: 3538    z-score:   .685 p-value: .753306
            Successes: 3527    z-score:   .183 p-value: .572463
            Successes: 3508    z-score:  -.685 p-value: .246694
 
           square size   avg. no.  parked   sample sigma
             100.            3535.100       16.025
            KSTEST for the above 10: p=  .895392

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::               THE MINIMUM DISTANCE TEST                       ::        
     :: It does this 100 times::   choose n=8000 random points in a   ::        
     :: square of side 10000.  Find d, the minimum distance between   ::        
     :: the (n^2-n)/2 pairs of points.  If the points are truly inde- ::        
     :: pendent uniform, then d^2, the square of the minimum distance ::        
     :: should be (very close to) exponentially distributed with mean ::        
     :: .995 .  Thus 1-exp(-d^2/.995) should be uniform on [0,1) and  ::        
     :: a KSTEST on the resulting 100 values serves as a test of uni- ::        
     :: formity for random points in the square. Test numbers=0 mod 5 ::        
     :: are printed but the KSTEST is based on the full set of 100    ::        
     :: random choices of 8000 points in the 10000x10000 square.      ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
               This is the MINIMUM DISTANCE test
              for random integers in the file csr_10mb.txt   
     Sample no.    d^2     avg     equiv uni            
           5     .0689    .9504     .066918
          10    1.0072    .7930     .636601
          15     .3057    .7657     .264530
          20     .2986    .6517     .259238
          25    1.4148    .7164     .758749
          30    1.3734    .9945     .748500
          35     .0536    .8983     .052454
          40     .5042    .8966     .397520
          45    3.8544    .9684     .979221
          50     .9122    .9799     .600202
          55    4.3011   1.0471     .986736
          60     .9743   1.0284     .624403
          65     .5838    .9953     .443874
          70     .4008   1.0126     .331596
          75    3.6285   1.0322     .973923
          80     .2637   1.0053     .232840
          85     .9024    .9857     .596232
          90    1.2576    .9812     .717465
          95     .3421    .9789     .290912
         100     .5513    .9810     .425375
     MINIMUM DISTANCE TEST for csr_10mb.txt   
          Result of KS test on 20 transformed mindist^2's:
                                  p-value= .011232

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ 

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::              THE 3DSPHERES TEST                               ::        
     :: Choose  4000 random points in a cube of edge 1000.  At each   ::        
     :: point, center a sphere large enough to reach the next closest ::        
     :: point. Then the volume of the smallest such sphere is (very   ::        
     :: close to) exponentially distributed with mean 120pi/3.  Thus  ::        
     :: the radius cubed is exponential with mean 30. (The mean is    ::        
     :: obtained by extensive simulation).  The 3DSPHERES test gener- ::        
     :: ates 4000 such spheres 20 times.  Each min radius cubed leads ::        
     :: to a uniform variable by means of 1-exp(-r^3/30.), then a     ::        
     ::  KSTEST is done on the 20 p-values.                           ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
               The 3DSPHERES test for file csr_10mb.txt   
 sample no:  1     r^3=  69.244     p-value= .90055
 sample no:  2     r^3=    .884     p-value= .02905
 sample no:  3     r^3=   9.247     p-value= .26524
 sample no:  4     r^3=  40.986     p-value= .74492
 sample no:  5     r^3=    .889     p-value= .02921
 sample no:  6     r^3=  18.515     p-value= .46053
 sample no:  7     r^3=  57.179     p-value= .85132
 sample no:  8     r^3=   7.314     p-value= .21634
 sample no:  9     r^3=  17.559     p-value= .44305
 sample no: 10     r^3=  47.741     p-value= .79636
 sample no: 11     r^3=  20.175     p-value= .48958
 sample no: 12     r^3=  30.464     p-value= .63777
 sample no: 13     r^3=   1.671     p-value= .05417
 sample no: 14     r^3=  33.530     p-value= .67296
 sample no: 15     r^3=   6.866     p-value= .20457
 sample no: 16     r^3=  41.037     p-value= .74536
 sample no: 17     r^3=  30.640     p-value= .63989
 sample no: 18     r^3=    .853     p-value= .02805
 sample no: 19     r^3= 110.374     p-value= .97476
 sample no: 20     r^3=   4.810     p-value= .14814
  A KS test is applied to those 20 p-values.
---------------------------------------------------------
       3DSPHERES test for file csr_10mb.txt         p-value= .443427
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::      This is the SQEEZE test                                  ::        
     ::  Random integers are floated to get uniforms on [0,1). Start- ::        
     ::  ing with k=2^31=2147483647, the test finds j, the number of  ::        
     ::  iterations necessary to reduce k to 1, using the reduction   ::        
     ::  k=ceiling(k*U), with U provided by floating integers from    ::        
     ::  the file being tested.  Such j's are found 100,000 times,    ::        
     ::  then counts for the number of times j was <=6,7,...,47,>=48  ::        
     ::  are used to provide a chi-square test for cell frequencies.  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
            RESULTS OF SQUEEZE TEST FOR csr_10mb.txt   
         Table of standardized frequency counts
     ( (obs-exp)/sqrt(exp) )^2
        for j taking values <=6,7,8,...,47,>=48:
     -.8     -.3     -.6     1.9    -1.4      .1
     -.4      .5     -.1      .8      .0    -1.2
     -.5     1.8     -.8     -.4      .3    -1.2
     -.8      .5      .9     1.6     -.9     1.0
     -.3     -.4      .9     -.6     -.2     -.6
     -.7     -.1      .4     -.3      .9      .8
      .5    -1.0    -1.2    -1.8     -.6    -1.0
    -1.1
           Chi-square with 42 degrees of freedom: 33.872
              z-score=  -.887  p-value= .189879
______________________________________________________________

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::             The  OVERLAPPING SUMS test                        ::        
     :: Integers are floated to get a sequence U(1),U(2),... of uni-  ::        
     :: form [0,1) variables.  Then overlapping sums,                 ::        
     ::   S(1)=U(1)+...+U(100), S2=U(2)+...+U(101),... are formed.    ::        
     :: The S's are virtually normal with a certain covariance mat-   ::        
     :: rix.  A linear transformation of the S's converts them to a   ::        
     :: sequence of independent standard normals, which are converted ::        
     :: to uniform variables for a KSTEST. The  p-values from ten     ::        
     :: KSTESTs are given still another KSTEST.                       ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
                Test no.  1      p-value  .639107
                Test no.  2      p-value  .290700
                Test no.  3      p-value  .097872
                Test no.  4      p-value  .735796
                Test no.  5      p-value  .927160
                Test no.  6      p-value  .252249
                Test no.  7      p-value  .352322
                Test no.  8      p-value  .290708
                Test no.  9      p-value  .021512
                Test no. 10      p-value  .229719
   Results of the OSUM test for csr_10mb.txt   
        KSTEST on the above 10 p-values:  .687800

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the RUNS test.  It counts runs up, and runs down, ::        
     :: in a sequence of uniform [0,1) variables, obtained by float-  ::        
     :: ing the 32-bit integers in the specified file. This example   ::        
     :: shows how runs are counted:  .123,.357,.789,.425,.224,.416,.95::        
     :: contains an up-run of length 3, a down-run of length 2 and an ::        
     :: up-run of (at least) 2, depending on the next values.  The    ::        
     :: covariance matrices for the runs-up and runs-down are well    ::        
     :: known, leading to chisquare tests for quadratic forms in the  ::        
     :: weak inverses of the covariance matrices.  Runs are counted   ::        
     :: for sequences of length 10,000.  This is done ten times. Then ::        
     :: repeated.                                                     ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           The RUNS test for file csr_10mb.txt   
     Up and down runs in a sample of 10000
_________________________________________________ 
                 Run test for csr_10mb.txt   :
       runs up; ks test for 10 p's: .943834
     runs down; ks test for 10 p's: .989213
                 Run test for csr_10mb.txt   :
       runs up; ks test for 10 p's: .100815
     runs down; ks test for 10 p's: .137995

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the CRAPS TEST. It plays 200,000 games of craps, finds::        
     :: the number of wins and the number of throws necessary to end  ::        
     :: each game.  The number of wins should be (very close to) a    ::        
     :: normal with mean 200000p and variance 200000p(1-p), with      ::        
     :: p=244/495.  Throws necessary to complete the game can vary    ::        
     :: from 1 to infinity, but counts for all>21 are lumped with 21. ::        
     :: A chi-square test is made on the no.-of-throws cell counts.   ::        
     :: Each 32-bit integer from the test file provides the value for ::        
     :: the throw of a die, by floating to [0,1), multiplying by 6    ::        
     :: and taking 1 plus the integer part of the result.             ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
                Results of craps test for csr_10mb.txt   
  No. of wins:  Observed Expected
                                98770    98585.86
                  98770= No. of wins, z-score=  .824 pvalue= .79491
   Analysis of Throws-per-Game:
 Chisq=  16.24 for 20 degrees of freedom, p=  .29812
               Throws Observed Expected  Chisq     Sum
                  1    66778    66666.7    .186     .186
                  2    37614    37654.3    .043     .229
                  3    26885    26954.7    .180     .409
                  4    19208    19313.5    .576     .985
                  5    13777    13851.4    .400    1.385
                  6    10083     9943.5   1.956    3.341
                  7     7188     7145.0    .258    3.600
                  8     5128     5139.1    .024    3.623
                  9     3707     3699.9    .014    3.637
                 10     2695     2666.3    .309    3.946
                 11     1965     1923.3    .903    4.849
                 12     1399     1388.7    .076    4.925
                 13     1034     1003.7    .914    5.839
                 14      679      726.1   3.060    8.899
                 15      486      525.8   3.018   11.917
                 16      372      381.2    .220   12.136
                 17      264      276.5    .569   12.705
                 18      214      200.8    .864   13.569
                 19      142      146.0    .109   13.677
                 20       90      106.2   2.475   16.153
                 21      292      287.1    .083   16.236
            SUMMARY  FOR csr_10mb.txt   
                p-value for no. of wins: .794912
                p-value for throws/game: .298123

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

 Results of DIEHARD battery of tests sent to file rescsr.txt     
