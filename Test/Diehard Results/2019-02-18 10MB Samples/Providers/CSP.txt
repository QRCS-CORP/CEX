       NOTE: Most of the tests in DIEHARD return a p-value, which               
       should be uniform on [0,1) if the input file contains truly              
       independent random bits.   Those p-values are obtained by                
       p=F(X), where F is the assumed distribution of the sample                
       random variable X---often normal. But that assumed F is just             
       an asymptotic approximation, for which the fit will be worst             
       in the tails. Thus you should not be surprised with                      
       occasional p-values near 0 or 1, such as .0012 or .9983.                 
       When a bit stream really FAILS BIG, you will get p's of 0 or             
       1 to six or more places.  By all means, do not, as a                     
       Statistician might, think that a p < .025 or p> .975 means               
       that the RNG has "failed the test at the .05 level".  Such               
       p's happen among the hundreds that DIEHARD produces, even                
       with good RNG's.  So keep in mind that " p happens".                     
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::            This is the BIRTHDAY SPACINGS TEST                 ::        
     :: Choose m birthdays in a year of n days.  List the spacings    ::        
     :: between the birthdays.  If j is the number of values that     ::        
     :: occur more than once in that list, then j is asymptotically   ::        
     :: Poisson distributed with mean m^3/(4n).  Experience shows n   ::        
     :: must be quite large, say n>=2^18, for comparing the results   ::        
     :: to the Poisson distribution with that mean.  This test uses   ::        
     :: n=2^24 and m=2^9,  so that the underlying distribution for j  ::        
     :: is taken to be Poisson with lambda=2^27/(2^26)=2.  A sample   ::        
     :: of 500 j's is taken, and a chi-square goodness of fit test    ::        
     :: provides a p value.  The first test uses bits 1-24 (counting  ::        
     :: from the left) from integers in the specified file.           ::        
     ::   Then the file is closed and reopened. Next, bits 2-25 are   ::        
     :: used to provide birthdays, then 3-26 and so on to bits 9-32.  ::        
     :: Each set of bits provides a p-value, and the nine p-values    ::        
     :: provide a sample for a KSTEST.                                ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 BIRTHDAY SPACINGS TEST, M= 512 N=2**24 LAMBDA=  2.0000
           Results for csp_10mb.txt   
                   For a sample of size 500:     mean   
           csp_10mb.txt    using bits  1 to 24   2.000
  duplicate       number       number 
  spacings       observed     expected
        0          69.       67.668
        1         127.      135.335
        2         138.      135.335
        3         100.       90.224
        4          46.       45.112
        5           9.       18.045
  6 to INF         11.        8.282
 Chisquare with  6 d.o.f. =     7.09 p-value=  .687815
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           csp_10mb.txt    using bits  2 to 25   2.030
  duplicate       number       number 
  spacings       observed     expected
        0          65.       67.668
        1         146.      135.335
        2         127.      135.335
        3          84.       90.224
        4          46.       45.112
        5          18.       18.045
  6 to INF         14.        8.282
 Chisquare with  6 d.o.f. =     5.85 p-value=  .560254
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           csp_10mb.txt    using bits  3 to 26   2.024
  duplicate       number       number 
  spacings       observed     expected
        0          82.       67.668
        1         118.      135.335
        2         132.      135.335
        3          89.       90.224
        4          46.       45.112
        5          22.       18.045
  6 to INF         11.        8.282
 Chisquare with  6 d.o.f. =     7.13 p-value=  .691149
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           csp_10mb.txt    using bits  4 to 27   1.898
  duplicate       number       number 
  spacings       observed     expected
        0          83.       67.668
        1         135.      135.335
        2         129.      135.335
        3          79.       90.224
        4          58.       45.112
        5          10.       18.045
  6 to INF          6.        8.282
 Chisquare with  6 d.o.f. =    13.06 p-value=  .957983
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           csp_10mb.txt    using bits  5 to 28   1.972
  duplicate       number       number 
  spacings       observed     expected
        0          69.       67.668
        1         128.      135.335
        2         143.      135.335
        3          99.       90.224
        4          41.       45.112
        5          13.       18.045
  6 to INF          7.        8.282
 Chisquare with  6 d.o.f. =     3.70 p-value=  .282147
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           csp_10mb.txt    using bits  6 to 29   1.994
  duplicate       number       number 
  spacings       observed     expected
        0          69.       67.668
        1         129.      135.335
        2         147.      135.335
        3          86.       90.224
        4          39.       45.112
        5          21.       18.045
  6 to INF          9.        8.282
 Chisquare with  6 d.o.f. =     2.90 p-value=  .178738
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           csp_10mb.txt    using bits  7 to 30   2.002
  duplicate       number       number 
  spacings       observed     expected
        0          72.       67.668
        1         124.      135.335
        2         152.      135.335
        3          74.       90.224
        4          51.       45.112
        5          18.       18.045
  6 to INF          9.        8.282
 Chisquare with  6 d.o.f. =     7.03 p-value=  .681643
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           csp_10mb.txt    using bits  8 to 31   1.940
  duplicate       number       number 
  spacings       observed     expected
        0          68.       67.668
        1         146.      135.335
        2         127.      135.335
        3          95.       90.224
        4          42.       45.112
        5          17.       18.045
  6 to INF          5.        8.282
 Chisquare with  6 d.o.f. =     3.18 p-value=  .214560
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           csp_10mb.txt    using bits  9 to 32   1.938
  duplicate       number       number 
  spacings       observed     expected
        0          68.       67.668
        1         141.      135.335
        2         133.      135.335
        3         100.       90.224
        4          36.       45.112
        5          15.       18.045
  6 to INF          7.        8.282
 Chisquare with  6 d.o.f. =     3.89 p-value=  .308567
  :::::::::::::::::::::::::::::::::::::::::
   The 9 p-values were
        .687815   .560254   .691149   .957983   .282147
        .178738   .681643   .214560   .308567
  A KSTEST for the 9 p-values yields  .164863

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::            THE OVERLAPPING 5-PERMUTATION TEST                 ::        
     :: This is the OPERM5 test.  It looks at a sequence of one mill- ::        
     :: ion 32-bit random integers.  Each set of five consecutive     ::        
     :: integers can be in one of 120 states, for the 5! possible or- ::        
     :: derings of five numbers.  Thus the 5th, 6th, 7th,...numbers   ::        
     :: each provide a state. As many thousands of state transitions  ::        
     :: are observed,  cumulative counts are made of the number of    ::        
     :: occurences of each state.  Then the quadratic form in the     ::        
     :: weak inverse of the 120x120 covariance matrix yields a test   ::        
     :: equivalent to the likelihood ratio test that the 120 cell     ::        
     :: counts came from the specified (asymptotically) normal dis-   ::        
     :: tribution with the specified 120x120 covariance matrix (with  ::        
     :: rank 99).  This version uses 1,000,000 integers, twice.       ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           OPERM5 test for file csp_10mb.txt   
     For a sample of 1,000,000 consecutive 5-tuples,
 chisquare for 99 degrees of freedom= 97.788; p-value= .484395
           OPERM5 test for file csp_10mb.txt   
     For a sample of 1,000,000 consecutive 5-tuples,
 chisquare for 99 degrees of freedom=145.954; p-value= .998477
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 31x31 matrices. The leftmost ::        
     :: 31 bits of 31 random integers from the test sequence are used ::        
     :: to form a 31x31 binary matrix over the field {0,1}. The rank  ::        
     :: is determined. That rank can be from 0 to 31, but ranks< 28   ::        
     :: are rare, and their counts are pooled with those for rank 28. ::        
     :: Ranks are found for 40,000 such random matrices and a chisqua-::        
     :: re test is performed on counts for ranks 31,30,29 and <=28.   ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
    Binary rank test for csp_10mb.txt   
         Rank test for 31x31 binary matrices:
        rows from leftmost 31 bits of each 32-bit integer
      rank   observed  expected (o-e)^2/e  sum
        28       218     211.4   .204914     .205
        29      5107    5134.0   .142102     .347
        30     23130   23103.0   .031445     .378
        31     11545   11551.5   .003685     .382
  chisquare=  .382 for 3 d. of f.; p-value= .324323
--------------------------------------------------------------
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 32x32 matrices. A random 32x ::        
     :: 32 binary matrix is formed, each row a 32-bit random integer. ::        
     :: The rank is determined. That rank can be from 0 to 32, ranks  ::        
     :: less than 29 are rare, and their counts are pooled with those ::        
     :: for rank 29.  Ranks are found for 40,000 such random matrices ::        
     :: and a chisquare test is performed on counts for ranks  32,31, ::        
     :: 30 and <=29.                                                  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
    Binary rank test for csp_10mb.txt   
         Rank test for 32x32 binary matrices:
        rows from leftmost 32 bits of each 32-bit integer
      rank   observed  expected (o-e)^2/e  sum
        29       195     211.4  1.274968    1.275
        30      5144    5134.0   .019438    1.294
        31     23223   23103.0   .622808    1.917
        32     11438   11551.5  1.115679    3.033
  chisquare= 3.033 for 3 d. of f.; p-value= .654215
--------------------------------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 6x8 matrices.  From each of  ::        
     :: six random 32-bit integers from the generator under test, a   ::        
     :: specified byte is chosen, and the resulting six bytes form a  ::        
     :: 6x8 binary matrix whose rank is determined.  That rank can be ::        
     :: from 0 to 6, but ranks 0,1,2,3 are rare; their counts are     ::        
     :: pooled with those for rank 4. Ranks are found for 100,000     ::        
     :: random matrices, and a chi-square test is performed on        ::        
     :: counts for ranks 6,5 and <=4.                                 ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
         Binary Rank Test for csp_10mb.txt   
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_10mb.txt   
     b-rank test for bits  1 to  8
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          982       944.3       1.505       1.505
          r =5        21847     21743.9        .489       1.994
          r =6        77171     77311.8        .256       2.250
                        p=1-exp(-SUM/2)= .67540
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_10mb.txt   
     b-rank test for bits  2 to  9
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          956       944.3        .145        .145
          r =5        21707     21743.9        .063        .208
          r =6        77337     77311.8        .008        .216
                        p=1-exp(-SUM/2)= .10227
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_10mb.txt   
     b-rank test for bits  3 to 10
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          935       944.3        .092        .092
          r =5        21829     21743.9        .333        .425
          r =6        77236     77311.8        .074        .499
                        p=1-exp(-SUM/2)= .22081
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_10mb.txt   
     b-rank test for bits  4 to 11
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          971       944.3        .755        .755
          r =5        21676     21743.9        .212        .967
          r =6        77353     77311.8        .022        .989
                        p=1-exp(-SUM/2)= .39008
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_10mb.txt   
     b-rank test for bits  5 to 12
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          982       944.3       1.505       1.505
          r =5        21838     21743.9        .407       1.912
          r =6        77180     77311.8        .225       2.137
                        p=1-exp(-SUM/2)= .65647
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_10mb.txt   
     b-rank test for bits  6 to 13
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          937       944.3        .056        .056
          r =5        21587     21743.9       1.132       1.189
          r =6        77476     77311.8        .349       1.537
                        p=1-exp(-SUM/2)= .53637
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_10mb.txt   
     b-rank test for bits  7 to 14
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          956       944.3        .145        .145
          r =5        21789     21743.9        .094        .238
          r =6        77255     77311.8        .042        .280
                        p=1-exp(-SUM/2)= .13073
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_10mb.txt   
     b-rank test for bits  8 to 15
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          909       944.3       1.320       1.320
          r =5        21863     21743.9        .652       1.972
          r =6        77228     77311.8        .091       2.063
                        p=1-exp(-SUM/2)= .64351
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_10mb.txt   
     b-rank test for bits  9 to 16
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          961       944.3        .295        .295
          r =5        21806     21743.9        .177        .473
          r =6        77233     77311.8        .080        .553
                        p=1-exp(-SUM/2)= .24156
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_10mb.txt   
     b-rank test for bits 10 to 17
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          943       944.3        .002        .002
          r =5        21658     21743.9        .339        .341
          r =6        77399     77311.8        .098        .439
                        p=1-exp(-SUM/2)= .19728
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_10mb.txt   
     b-rank test for bits 11 to 18
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          945       944.3        .001        .001
          r =5        21877     21743.9        .815        .815
          r =6        77178     77311.8        .232       1.047
                        p=1-exp(-SUM/2)= .40751
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_10mb.txt   
     b-rank test for bits 12 to 19
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          949       944.3        .023        .023
          r =5        21725     21743.9        .016        .040
          r =6        77326     77311.8        .003        .042
                        p=1-exp(-SUM/2)= .02098
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_10mb.txt   
     b-rank test for bits 13 to 20
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          961       944.3        .295        .295
          r =5        21779     21743.9        .057        .352
          r =6        77260     77311.8        .035        .387
                        p=1-exp(-SUM/2)= .17579
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_10mb.txt   
     b-rank test for bits 14 to 21
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          876       944.3       4.940       4.940
          r =5        21676     21743.9        .212       5.152
          r =6        77448     77311.8        .240       5.392
                        p=1-exp(-SUM/2)= .93253
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_10mb.txt   
     b-rank test for bits 15 to 22
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          966       944.3        .499        .499
          r =5        21669     21743.9        .258        .757
          r =6        77365     77311.8        .037        .793
                        p=1-exp(-SUM/2)= .32740
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_10mb.txt   
     b-rank test for bits 16 to 23
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          960       944.3        .261        .261
          r =5        21638     21743.9        .516        .777
          r =6        77402     77311.8        .105        .882
                        p=1-exp(-SUM/2)= .35660
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_10mb.txt   
     b-rank test for bits 17 to 24
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          948       944.3        .014        .014
          r =5        21646     21743.9        .441        .455
          r =6        77406     77311.8        .115        .570
                        p=1-exp(-SUM/2)= .24800
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_10mb.txt   
     b-rank test for bits 18 to 25
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          954       944.3        .100        .100
          r =5        21821     21743.9        .273        .373
          r =6        77225     77311.8        .097        .470
                        p=1-exp(-SUM/2)= .20961
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_10mb.txt   
     b-rank test for bits 19 to 26
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          953       944.3        .080        .080
          r =5        21857     21743.9        .588        .668
          r =6        77190     77311.8        .192        .860
                        p=1-exp(-SUM/2)= .34959
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_10mb.txt   
     b-rank test for bits 20 to 27
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          899       944.3       2.173       2.173
          r =5        21742     21743.9        .000       2.173
          r =6        77359     77311.8        .029       2.202
                        p=1-exp(-SUM/2)= .66750
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_10mb.txt   
     b-rank test for bits 21 to 28
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          939       944.3        .030        .030
          r =5        21704     21743.9        .073        .103
          r =6        77357     77311.8        .026        .129
                        p=1-exp(-SUM/2)= .06265
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_10mb.txt   
     b-rank test for bits 22 to 29
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          930       944.3        .217        .217
          r =5        21648     21743.9        .423        .640
          r =6        77422     77311.8        .157        .797
                        p=1-exp(-SUM/2)= .32855
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_10mb.txt   
     b-rank test for bits 23 to 30
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          915       944.3        .909        .909
          r =5        21451     21743.9       3.946       4.855
          r =6        77634     77311.8       1.343       6.197
                        p=1-exp(-SUM/2)= .95489
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_10mb.txt   
     b-rank test for bits 24 to 31
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          946       944.3        .003        .003
          r =5        21702     21743.9        .081        .084
          r =6        77352     77311.8        .021        .105
                        p=1-exp(-SUM/2)= .05100
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG csp_10mb.txt   
     b-rank test for bits 25 to 32
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          927       944.3        .317        .317
          r =5        21678     21743.9        .200        .517
          r =6        77395     77311.8        .090        .606
                        p=1-exp(-SUM/2)= .26149
   TEST SUMMARY, 25 tests on 100,000 random 6x8 matrices
 These should be 25 uniform [0,1] random variables:
     .675399     .102267     .220810     .390079     .656469
     .536371     .130734     .643507     .241557     .197276
     .407506     .020984     .175793     .932532     .327402
     .356602     .248002     .209610     .349593     .667500
     .062651     .328546     .954893     .051001     .261491
   brank test summary for csp_10mb.txt   
       The KS test for those 25 supposed UNI's yields
                    KS p-value= .973308

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::                   THE BITSTREAM TEST                          ::        
     :: The file under test is viewed as a stream of bits. Call them  ::        
     :: b1,b2,... .  Consider an alphabet with two "letters", 0 and 1 ::        
     :: and think of the stream of bits as a succession of 20-letter  ::        
     :: "words", overlapping.  Thus the first word is b1b2...b20, the ::        
     :: second is b2b3...b21, and so on.  The bitstream test counts   ::        
     :: the number of missing 20-letter (20-bit) words in a string of ::        
     :: 2^21 overlapping 20-letter words.  There are 2^20 possible 20 ::        
     :: letter words.  For a truly random string of 2^21+19 bits, the ::        
     :: number of missing words j should be (very close to) normally  ::        
     :: distributed with mean 141,909 and sigma 428.  Thus            ::        
     ::  (j-141909)/428 should be a standard normal variate (z score) ::        
     :: that leads to a uniform [0,1) p value.  The test is repeated  ::        
     :: twenty times.                                                 ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 THE OVERLAPPING 20-tuples BITSTREAM  TEST, 20 BITS PER WORD, N words
   This test uses N=2^21 and samples the bitstream 20 times.
  No. missing words should average  141909. with sigma=428.
---------------------------------------------------------
 tst no  1:  141990 missing words,     .19 sigmas from mean, p-value= .57475
 tst no  2:  141504 missing words,    -.95 sigmas from mean, p-value= .17181
 tst no  3:  142144 missing words,     .55 sigmas from mean, p-value= .70826
 tst no  4:  142258 missing words,     .81 sigmas from mean, p-value= .79236
 tst no  5:  141131 missing words,   -1.82 sigmas from mean, p-value= .03449
 tst no  6:  142070 missing words,     .38 sigmas from mean, p-value= .64632
 tst no  7:  141360 missing words,   -1.28 sigmas from mean, p-value= .09966
 tst no  8:  141484 missing words,    -.99 sigmas from mean, p-value= .16017
 tst no  9:  141871 missing words,    -.09 sigmas from mean, p-value= .46432
 tst no 10:  142040 missing words,     .31 sigmas from mean, p-value= .61993
 tst no 11:  141936 missing words,     .06 sigmas from mean, p-value= .52485
 tst no 12:  142689 missing words,    1.82 sigmas from mean, p-value= .96575
 tst no 13:  141786 missing words,    -.29 sigmas from mean, p-value= .38662
 tst no 14:  141890 missing words,    -.05 sigmas from mean, p-value= .48199
 tst no 15:  141780 missing words,    -.30 sigmas from mean, p-value= .38126
 tst no 16:  141697 missing words,    -.50 sigmas from mean, p-value= .30991
 tst no 17:  142020 missing words,     .26 sigmas from mean, p-value= .60202
 tst no 18:  141918 missing words,     .02 sigmas from mean, p-value= .50808
 tst no 19:  141086 missing words,   -1.92 sigmas from mean, p-value= .02720
 tst no 20:  142844 missing words,    2.18 sigmas from mean, p-value= .98551

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::             The tests OPSO, OQSO and DNA                      ::        
     ::         OPSO means Overlapping-Pairs-Sparse-Occupancy         ::        
     :: The OPSO test considers 2-letter words from an alphabet of    ::        
     :: 1024 letters.  Each letter is determined by a specified ten   ::        
     :: bits from a 32-bit integer in the sequence to be tested. OPSO ::        
     :: generates  2^21 (overlapping) 2-letter words  (from 2^21+1    ::        
     :: "keystrokes")  and counts the number of missing words---that  ::        
     :: is 2-letter words which do not appear in the entire sequence. ::        
     :: That count should be very close to normally distributed with  ::        
     :: mean 141,909, sigma 290. Thus (missingwrds-141909)/290 should ::        
     :: be a standard normal variable. The OPSO test takes 32 bits at ::        
     :: a time from the test file and uses a designated set of ten    ::        
     :: consecutive bits. It then restarts the file for the next de-  ::        
     :: signated 10 bits, and so on.                                  ::        
     ::                                                               ::        
     ::     OQSO means Overlapping-Quadruples-Sparse-Occupancy        ::        
     ::   The test OQSO is similar, except that it considers 4-letter ::        
     :: words from an alphabet of 32 letters, each letter determined  ::        
     :: by a designated string of 5 consecutive bits from the test    ::        
     :: file, elements of which are assumed 32-bit random integers.   ::        
     :: The mean number of missing words in a sequence of 2^21 four-  ::        
     :: letter words,  (2^21+3 "keystrokes"), is again 141909, with   ::        
     :: sigma = 295.  The mean is based on theory; sigma comes from   ::        
     :: extensive simulation.                                         ::        
     ::                                                               ::        
     ::    The DNA test considers an alphabet of 4 letters::  C,G,A,T,::        
     :: determined by two designated bits in the sequence of random   ::        
     :: integers being tested.  It considers 10-letter words, so that ::        
     :: as in OPSO and OQSO, there are 2^20 possible words, and the   ::        
     :: mean number of missing words from a string of 2^21  (over-    ::        
     :: lapping)  10-letter  words (2^21+9 "keystrokes") is 141909.   ::        
     :: The standard deviation sigma=339 was determined as for OQSO   ::        
     :: by simulation.  (Sigma for OPSO, 290, is the true value (to   ::        
     :: three places), not determined by simulation.                  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 OPSO test for generator csp_10mb.txt   
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
    OPSO for csp_10mb.txt    using bits 23 to 32        141875  -.118  .4529
    OPSO for csp_10mb.txt    using bits 22 to 31        142284  1.292  .9018
    OPSO for csp_10mb.txt    using bits 21 to 30        141991   .282  .6109
    OPSO for csp_10mb.txt    using bits 20 to 29        141973   .220  .5869
    OPSO for csp_10mb.txt    using bits 19 to 28        142008   .340  .6332
    OPSO for csp_10mb.txt    using bits 18 to 27        141802  -.370  .3557
    OPSO for csp_10mb.txt    using bits 17 to 26        141855  -.187  .4257
    OPSO for csp_10mb.txt    using bits 16 to 25        141709  -.691  .2448
    OPSO for csp_10mb.txt    using bits 15 to 24        142043   .461  .6776
    OPSO for csp_10mb.txt    using bits 14 to 23        141728  -.625  .2659
    OPSO for csp_10mb.txt    using bits 13 to 22        141759  -.518  .3021
    OPSO for csp_10mb.txt    using bits 12 to 21        142895  3.399  .9997
    OPSO for csp_10mb.txt    using bits 11 to 20        142418  1.754  .9603
    OPSO for csp_10mb.txt    using bits 10 to 19        141870  -.136  .4461
    OPSO for csp_10mb.txt    using bits  9 to 18        142092   .630  .7356
    OPSO for csp_10mb.txt    using bits  8 to 17        141825  -.291  .3856
    OPSO for csp_10mb.txt    using bits  7 to 16        141871  -.132  .4474
    OPSO for csp_10mb.txt    using bits  6 to 15        141624  -.984  .1626
    OPSO for csp_10mb.txt    using bits  5 to 14        142048   .478  .6837
    OPSO for csp_10mb.txt    using bits  4 to 13        141903  -.022  .4913
    OPSO for csp_10mb.txt    using bits  3 to 12        142050   .485  .6862
    OPSO for csp_10mb.txt    using bits  2 to 11        141711  -.684  .2470
    OPSO for csp_10mb.txt    using bits  1 to 10        142059   .516  .6971
 OQSO test for generator csp_10mb.txt   
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
    OQSO for csp_10mb.txt    using bits 28 to 32        142153   .826  .7956
    OQSO for csp_10mb.txt    using bits 27 to 31        141838  -.242  .4045
    OQSO for csp_10mb.txt    using bits 26 to 30        141914   .016  .5063
    OQSO for csp_10mb.txt    using bits 25 to 29        142381  1.599  .9451
    OQSO for csp_10mb.txt    using bits 24 to 28        141546 -1.232  .1090
    OQSO for csp_10mb.txt    using bits 23 to 27        141625  -.964  .1676
    OQSO for csp_10mb.txt    using bits 22 to 26        141915   .019  .5077
    OQSO for csp_10mb.txt    using bits 21 to 25        141459 -1.527  .0634
    OQSO for csp_10mb.txt    using bits 20 to 24        141508 -1.360  .0868
    OQSO for csp_10mb.txt    using bits 19 to 23        141610 -1.015  .1551
    OQSO for csp_10mb.txt    using bits 18 to 22        141872  -.127  .4497
    OQSO for csp_10mb.txt    using bits 17 to 21        141668  -.818  .2067
    OQSO for csp_10mb.txt    using bits 16 to 20        142143   .792  .7859
    OQSO for csp_10mb.txt    using bits 15 to 19        142313  1.368  .9144
    OQSO for csp_10mb.txt    using bits 14 to 18        142245  1.138  .8724
    OQSO for csp_10mb.txt    using bits 13 to 17        141900  -.032  .4874
    OQSO for csp_10mb.txt    using bits 12 to 16        142237  1.111  .8667
    OQSO for csp_10mb.txt    using bits 11 to 15        142019   .372  .6450
    OQSO for csp_10mb.txt    using bits 10 to 14        141871  -.130  .4483
    OQSO for csp_10mb.txt    using bits  9 to 13        141846  -.215  .4150
    OQSO for csp_10mb.txt    using bits  8 to 12        141426 -1.638  .0507
    OQSO for csp_10mb.txt    using bits  7 to 11        141766  -.486  .3135
    OQSO for csp_10mb.txt    using bits  6 to 10        142517  2.060  .9803
    OQSO for csp_10mb.txt    using bits  5 to  9        142057   .501  .6917
    OQSO for csp_10mb.txt    using bits  4 to  8        141958   .165  .5655
    OQSO for csp_10mb.txt    using bits  3 to  7        141882  -.093  .4631
    OQSO for csp_10mb.txt    using bits  2 to  6        142124   .728  .7666
    OQSO for csp_10mb.txt    using bits  1 to  5        142557  2.195  .9859
  DNA test for generator csp_10mb.txt   
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
     DNA for csp_10mb.txt    using bits 31 to 32        141977   .200  .5791
     DNA for csp_10mb.txt    using bits 30 to 31        142061   .447  .6727
     DNA for csp_10mb.txt    using bits 29 to 30        141820  -.264  .3961
     DNA for csp_10mb.txt    using bits 28 to 29        141986   .226  .5895
     DNA for csp_10mb.txt    using bits 27 to 28        141315 -1.753  .0398
     DNA for csp_10mb.txt    using bits 26 to 27        141918   .026  .5102
     DNA for csp_10mb.txt    using bits 25 to 26        141899  -.030  .4878
     DNA for csp_10mb.txt    using bits 24 to 25        142212   .893  .8140
     DNA for csp_10mb.txt    using bits 23 to 24        141673  -.697  .2429
     DNA for csp_10mb.txt    using bits 22 to 23        141737  -.508  .3056
     DNA for csp_10mb.txt    using bits 21 to 22        142629  2.123  .9831
     DNA for csp_10mb.txt    using bits 20 to 21        141080 -2.446  .0072
     DNA for csp_10mb.txt    using bits 19 to 20        141742  -.494  .3108
     DNA for csp_10mb.txt    using bits 18 to 19        141955   .135  .5536
     DNA for csp_10mb.txt    using bits 17 to 18        142061   .447  .6727
     DNA for csp_10mb.txt    using bits 16 to 17        142010   .297  .6168
     DNA for csp_10mb.txt    using bits 15 to 16        141529 -1.122  .1309
     DNA for csp_10mb.txt    using bits 14 to 15        141399 -1.505  .0661
     DNA for csp_10mb.txt    using bits 13 to 14        142260  1.034  .8495
     DNA for csp_10mb.txt    using bits 12 to 13        142397  1.439  .9249
     DNA for csp_10mb.txt    using bits 11 to 12        141957   .141  .5559
     DNA for csp_10mb.txt    using bits 10 to 11        141463 -1.317  .0940
     DNA for csp_10mb.txt    using bits  9 to 10        141739  -.502  .3077
     DNA for csp_10mb.txt    using bits  8 to  9        141977   .200  .5791
     DNA for csp_10mb.txt    using bits  7 to  8        141457 -1.334  .0911
     DNA for csp_10mb.txt    using bits  6 to  7        141741  -.497  .3098
     DNA for csp_10mb.txt    using bits  5 to  6        142416  1.495  .9325
     DNA for csp_10mb.txt    using bits  4 to  5        142048   .409  .6588
     DNA for csp_10mb.txt    using bits  3 to  4        142191   .831  .7970
     DNA for csp_10mb.txt    using bits  2 to  3        142356  1.318  .9062
     DNA for csp_10mb.txt    using bits  1 to  2        142329  1.238  .8921

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the COUNT-THE-1's TEST on a stream of bytes.      ::        
     :: Consider the file under test as a stream of bytes (four per   ::        
     :: 32 bit integer).  Each byte can contain from 0 to 8 1's,      ::        
     :: with probabilities 1,8,28,56,70,56,28,8,1 over 256.  Now let  ::        
     :: the stream of bytes provide a string of overlapping  5-letter ::        
     :: words, each "letter" taking values A,B,C,D,E. The letters are ::        
     :: determined by the number of 1's in a byte::  0,1,or 2 yield A,::        
     :: 3 yields B, 4 yields C, 5 yields D and 6,7 or 8 yield E. Thus ::        
     :: we have a monkey at a typewriter hitting five keys with vari- ::        
     :: ous probabilities (37,56,70,56,37 over 256).  There are 5^5   ::        
     :: possible 5-letter words, and from a string of 256,000 (over-  ::        
     :: lapping) 5-letter words, counts are made on the frequencies   ::        
     :: for each word.   The quadratic form in the weak inverse of    ::        
     :: the covariance matrix of the cell counts provides a chisquare ::        
     :: test::  Q5-Q4, the difference of the naive Pearson sums of    ::        
     :: (OBS-EXP)^2/EXP on counts for 5- and 4-letter cell counts.    ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
   Test results for csp_10mb.txt   
 Chi-square with 5^5-5^4=2500 d.of f. for sample size:2560000
                               chisquare  equiv normal  p-value
  Results fo COUNT-THE-1's in successive bytes:
 byte stream for csp_10mb.txt     2672.24      2.436      .992572
 byte stream for csp_10mb.txt     2414.93     -1.203      .114465

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the COUNT-THE-1's TEST for specific bytes.        ::        
     :: Consider the file under test as a stream of 32-bit integers.  ::        
     :: From each integer, a specific byte is chosen , say the left-  ::        
     :: most::  bits 1 to 8. Each byte can contain from 0 to 8 1's,   ::        
     :: with probabilitie 1,8,28,56,70,56,28,8,1 over 256.  Now let   ::        
     :: the specified bytes from successive integers provide a string ::        
     :: of (overlapping) 5-letter words, each "letter" taking values  ::        
     :: A,B,C,D,E. The letters are determined  by the number of 1's,  ::        
     :: in that byte::  0,1,or 2 ---> A, 3 ---> B, 4 ---> C, 5 ---> D,::        
     :: and  6,7 or 8 ---> E.  Thus we have a monkey at a typewriter  ::        
     :: hitting five keys with with various probabilities::  37,56,70,::        
     :: 56,37 over 256. There are 5^5 possible 5-letter words, and    ::        
     :: from a string of 256,000 (overlapping) 5-letter words, counts ::        
     :: are made on the frequencies for each word. The quadratic form ::        
     :: in the weak inverse of the covariance matrix of the cell      ::        
     :: counts provides a chisquare test::  Q5-Q4, the difference of  ::        
     :: the naive Pearson  sums of (OBS-EXP)^2/EXP on counts for 5-   ::        
     :: and 4-letter cell counts.                                     ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 Chi-square with 5^5-5^4=2500 d.of f. for sample size: 256000
                      chisquare  equiv normal  p value
  Results for COUNT-THE-1's in specified bytes:
           bits  1 to  8  2494.85      -.073      .470989
           bits  2 to  9  2498.89      -.016      .493728
           bits  3 to 10  2523.95       .339      .632583
           bits  4 to 11  2456.95      -.609      .271345
           bits  5 to 12  2574.69      1.056      .854580
           bits  6 to 13  2612.41      1.590      .944045
           bits  7 to 14  2537.84       .535      .703704
           bits  8 to 15  2448.95      -.722      .235171
           bits  9 to 16  2496.90      -.044      .482499
           bits 10 to 17  2531.18       .441      .670356
           bits 11 to 18  2477.73      -.315      .376395
           bits 12 to 19  2559.68       .844      .800673
           bits 13 to 20  2534.57       .489      .687531
           bits 14 to 21  2562.64       .886      .812172
           bits 15 to 22  2723.37      3.159      .999208
           bits 16 to 23  2476.10      -.338      .367705
           bits 17 to 24  2557.27       .810      .791003
           bits 18 to 25  2493.11      -.097      .461191
           bits 19 to 26  2478.47      -.305      .380357
           bits 20 to 27  2401.90     -1.387      .082661
           bits 21 to 28  2388.75     -1.573      .057825
           bits 22 to 29  2466.36      -.476      .317114
           bits 23 to 30  2565.68       .929      .823511
           bits 24 to 31  2497.84      -.031      .487817
           bits 25 to 32  2384.92     -1.627      .051818

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::               THIS IS A PARKING LOT TEST                      ::        
     :: In a square of side 100, randomly "park" a car---a circle of  ::        
     :: radius 1.   Then try to park a 2nd, a 3rd, and so on, each    ::        
     :: time parking "by ear".  That is, if an attempt to park a car  ::        
     :: causes a crash with one already parked, try again at a new    ::        
     :: random location. (To avoid path problems, consider parking    ::        
     :: helicopters rather than cars.)   Each attempt leads to either ::        
     :: a crash or a success, the latter followed by an increment to  ::        
     :: the list of cars already parked. If we plot n:  the number of ::        
     :: attempts, versus k::  the number successfully parked, we get a::        
     :: curve that should be similar to those provided by a perfect   ::        
     :: random number generator.  Theory for the behavior of such a   ::        
     :: random curve seems beyond reach, and as graphics displays are ::        
     :: not available for this battery of tests, a simple characteriz ::        
     :: ation of the random experiment is used: k, the number of cars ::        
     :: successfully parked after n=12,000 attempts. Simulation shows ::        
     :: that k should average 3523 with sigma 21.9 and is very close  ::        
     :: to normally distributed.  Thus (k-3523)/21.9 should be a st-  ::        
     :: andard normal variable, which, converted to a uniform varia-  ::        
     :: ble, provides input to a KSTEST based on a sample of 10.      ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           CDPARK: result of ten tests on file csp_10mb.txt   
            Of 12,000 tries, the average no. of successes
                 should be 3523 with sigma=21.9
            Successes: 3498    z-score: -1.142 p-value: .126820
            Successes: 3555    z-score:  1.461 p-value: .928018
            Successes: 3533    z-score:   .457 p-value: .676028
            Successes: 3517    z-score:  -.274 p-value: .392053
            Successes: 3552    z-score:  1.324 p-value: .907282
            Successes: 3520    z-score:  -.137 p-value: .445521
            Successes: 3500    z-score: -1.050 p-value: .146807
            Successes: 3564    z-score:  1.872 p-value: .969407
            Successes: 3522    z-score:  -.046 p-value: .481790
            Successes: 3532    z-score:   .411 p-value: .659449
 
           square size   avg. no.  parked   sample sigma
             100.            3529.300       21.277
            KSTEST for the above 10: p=  .372493

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::               THE MINIMUM DISTANCE TEST                       ::        
     :: It does this 100 times::   choose n=8000 random points in a   ::        
     :: square of side 10000.  Find d, the minimum distance between   ::        
     :: the (n^2-n)/2 pairs of points.  If the points are truly inde- ::        
     :: pendent uniform, then d^2, the square of the minimum distance ::        
     :: should be (very close to) exponentially distributed with mean ::        
     :: .995 .  Thus 1-exp(-d^2/.995) should be uniform on [0,1) and  ::        
     :: a KSTEST on the resulting 100 values serves as a test of uni- ::        
     :: formity for random points in the square. Test numbers=0 mod 5 ::        
     :: are printed but the KSTEST is based on the full set of 100    ::        
     :: random choices of 8000 points in the 10000x10000 square.      ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
               This is the MINIMUM DISTANCE test
              for random integers in the file csp_10mb.txt   
     Sample no.    d^2     avg     equiv uni            
           5     .8720    .4785     .583702
          10    1.5287    .5991     .784833
          15    1.2918    .9015     .727009
          20     .1380    .8621     .129521
          25     .4254    .8501     .347878
          30     .0399    .8863     .039294
          35     .3100    .8352     .267668
          40     .1536    .7820     .143040
          45     .0846    .7788     .081507
          50    1.9703    .8669     .861959
          55     .2619    .8162     .231437
          60    1.6642    .8162     .812228
          65    2.8360    .9403     .942169
          70    2.0061    .9237     .866841
          75     .7164    .8914     .513237
          80    1.7715    .9294     .831436
          85     .1423    .8952     .133248
          90     .0170    .9208     .016989
          95     .1745    .9166     .160819
         100    1.2465    .9247     .714286
     MINIMUM DISTANCE TEST for csp_10mb.txt   
          Result of KS test on 20 transformed mindist^2's:
                                  p-value= .524667

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ 

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::              THE 3DSPHERES TEST                               ::        
     :: Choose  4000 random points in a cube of edge 1000.  At each   ::        
     :: point, center a sphere large enough to reach the next closest ::        
     :: point. Then the volume of the smallest such sphere is (very   ::        
     :: close to) exponentially distributed with mean 120pi/3.  Thus  ::        
     :: the radius cubed is exponential with mean 30. (The mean is    ::        
     :: obtained by extensive simulation).  The 3DSPHERES test gener- ::        
     :: ates 4000 such spheres 20 times.  Each min radius cubed leads ::        
     :: to a uniform variable by means of 1-exp(-r^3/30.), then a     ::        
     ::  KSTEST is done on the 20 p-values.                           ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
               The 3DSPHERES test for file csp_10mb.txt   
 sample no:  1     r^3= 165.896     p-value= .99603
 sample no:  2     r^3=   3.148     p-value= .09963
 sample no:  3     r^3=  10.091     p-value= .28564
 sample no:  4     r^3=  13.296     p-value= .35801
 sample no:  5     r^3=  36.217     p-value= .70098
 sample no:  6     r^3=  19.211     p-value= .47291
 sample no:  7     r^3=    .338     p-value= .01121
 sample no:  8     r^3=  17.417     p-value= .44042
 sample no:  9     r^3=  97.992     p-value= .96186
 sample no: 10     r^3=   7.898     p-value= .23146
 sample no: 11     r^3=  10.630     p-value= .29835
 sample no: 12     r^3=  37.195     p-value= .71057
 sample no: 13     r^3=  44.846     p-value= .77572
 sample no: 14     r^3=  16.066     p-value= .41465
 sample no: 15     r^3=   4.490     p-value= .13900
 sample no: 16     r^3=  13.008     p-value= .35184
 sample no: 17     r^3=    .007     p-value= .00022
 sample no: 18     r^3=  36.238     p-value= .70118
 sample no: 19     r^3=  15.899     p-value= .41137
 sample no: 20     r^3=  70.418     p-value= .90437
  A KS test is applied to those 20 p-values.
---------------------------------------------------------
       3DSPHERES test for file csp_10mb.txt         p-value= .517565
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::      This is the SQEEZE test                                  ::        
     ::  Random integers are floated to get uniforms on [0,1). Start- ::        
     ::  ing with k=2^31=2147483647, the test finds j, the number of  ::        
     ::  iterations necessary to reduce k to 1, using the reduction   ::        
     ::  k=ceiling(k*U), with U provided by floating integers from    ::        
     ::  the file being tested.  Such j's are found 100,000 times,    ::        
     ::  then counts for the number of times j was <=6,7,...,47,>=48  ::        
     ::  are used to provide a chi-square test for cell frequencies.  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
            RESULTS OF SQUEEZE TEST FOR csp_10mb.txt   
         Table of standardized frequency counts
     ( (obs-exp)/sqrt(exp) )^2
        for j taking values <=6,7,8,...,47,>=48:
     -.1     -.3     -.4     -.3     -.7      .4
    -1.0     -.3     -.5      .8      .7    -1.4
     -.1     1.2     -.4    -1.9     -.3     1.4
     -.1     -.1     -.1      .5      .0      .3
     -.8      .7     1.4     1.3    -1.6     1.0
    -1.2      .6     -.5     1.4     -.4      .1
     1.2     1.1    -1.2     -.7     1.6      .0
     -.1
           Chi-square with 42 degrees of freedom: 33.068
              z-score=  -.975  p-value= .163425
______________________________________________________________

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::             The  OVERLAPPING SUMS test                        ::        
     :: Integers are floated to get a sequence U(1),U(2),... of uni-  ::        
     :: form [0,1) variables.  Then overlapping sums,                 ::        
     ::   S(1)=U(1)+...+U(100), S2=U(2)+...+U(101),... are formed.    ::        
     :: The S's are virtually normal with a certain covariance mat-   ::        
     :: rix.  A linear transformation of the S's converts them to a   ::        
     :: sequence of independent standard normals, which are converted ::        
     :: to uniform variables for a KSTEST. The  p-values from ten     ::        
     :: KSTESTs are given still another KSTEST.                       ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
                Test no.  1      p-value  .071736
                Test no.  2      p-value  .758043
                Test no.  3      p-value  .682098
                Test no.  4      p-value  .777673
                Test no.  5      p-value  .566844
                Test no.  6      p-value  .790392
                Test no.  7      p-value  .610695
                Test no.  8      p-value  .712224
                Test no.  9      p-value  .460447
                Test no. 10      p-value  .635882
   Results of the OSUM test for csp_10mb.txt   
        KSTEST on the above 10 p-values:  .862797

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the RUNS test.  It counts runs up, and runs down, ::        
     :: in a sequence of uniform [0,1) variables, obtained by float-  ::        
     :: ing the 32-bit integers in the specified file. This example   ::        
     :: shows how runs are counted:  .123,.357,.789,.425,.224,.416,.95::        
     :: contains an up-run of length 3, a down-run of length 2 and an ::        
     :: up-run of (at least) 2, depending on the next values.  The    ::        
     :: covariance matrices for the runs-up and runs-down are well    ::        
     :: known, leading to chisquare tests for quadratic forms in the  ::        
     :: weak inverses of the covariance matrices.  Runs are counted   ::        
     :: for sequences of length 10,000.  This is done ten times. Then ::        
     :: repeated.                                                     ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           The RUNS test for file csp_10mb.txt   
     Up and down runs in a sample of 10000
_________________________________________________ 
                 Run test for csp_10mb.txt   :
       runs up; ks test for 10 p's: .136150
     runs down; ks test for 10 p's: .556845
                 Run test for csp_10mb.txt   :
       runs up; ks test for 10 p's: .330532
     runs down; ks test for 10 p's: .120307

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the CRAPS TEST. It plays 200,000 games of craps, finds::        
     :: the number of wins and the number of throws necessary to end  ::        
     :: each game.  The number of wins should be (very close to) a    ::        
     :: normal with mean 200000p and variance 200000p(1-p), with      ::        
     :: p=244/495.  Throws necessary to complete the game can vary    ::        
     :: from 1 to infinity, but counts for all>21 are lumped with 21. ::        
     :: A chi-square test is made on the no.-of-throws cell counts.   ::        
     :: Each 32-bit integer from the test file provides the value for ::        
     :: the throw of a die, by floating to [0,1), multiplying by 6    ::        
     :: and taking 1 plus the integer part of the result.             ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
                Results of craps test for csp_10mb.txt   
  No. of wins:  Observed Expected
                                98383    98585.86
                  98383= No. of wins, z-score= -.907 pvalue= .18212
   Analysis of Throws-per-Game:
 Chisq=  20.15 for 20 degrees of freedom, p=  .55112
               Throws Observed Expected  Chisq     Sum
                  1    66820    66666.7    .353     .353
                  2    37407    37654.3   1.624    1.977
                  3    26951    26954.7    .001    1.978
                  4    19373    19313.5    .184    2.161
                  5    13975    13851.4   1.103    3.264
                  6     9987     9943.5    .190    3.454
                  7     7130     7145.0    .032    3.485
                  8     5037     5139.1   2.027    5.513
                  9     3750     3699.9    .679    6.192
                 10     2630     2666.3    .494    6.686
                 11     1986     1923.3   2.042    8.728
                 12     1372     1388.7    .202    8.930
                 13      970     1003.7   1.132   10.063
                 14      675      726.1   3.602   13.664
                 15      539      525.8    .330   13.994
                 16      402      381.2   1.140   15.134
                 17      274      276.5    .023   15.158
                 18      203      200.8    .023   15.181
                 19      160      146.0   1.346   16.527
                 20       90      106.2   2.475   19.002
                 21      269      287.1   1.143   20.145
            SUMMARY  FOR csp_10mb.txt   
                p-value for no. of wins: .182123
                p-value for throws/game: .551116

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

 Results of DIEHARD battery of tests sent to file rescsp.txt     
