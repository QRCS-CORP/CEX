       NOTE: Most of the tests in DIEHARD return a p-value, which               
       should be uniform on [0,1) if the input file contains truly              
       independent random bits.   Those p-values are obtained by                
       p=F(X), where F is the assumed distribution of the sample                
       random variable X---often normal. But that assumed F is just             
       an asymptotic approximation, for which the fit will be worst             
       in the tails. Thus you should not be surprised with                      
       occasional p-values near 0 or 1, such as .0012 or .9983.                 
       When a bit stream really FAILS BIG, you will get p's of 0 or             
       1 to six or more places.  By all means, do not, as a                     
       Statistician might, think that a p < .025 or p> .975 means               
       that the RNG has "failed the test at the .05 level".  Such               
       p's happen among the hundreds that DIEHARD produces, even                
       with good RNG's.  So keep in mind that " p happens".                     
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::            This is the BIRTHDAY SPACINGS TEST                 ::        
     :: Choose m birthdays in a year of n days.  List the spacings    ::        
     :: between the birthdays.  If j is the number of values that     ::        
     :: occur more than once in that list, then j is asymptotically   ::        
     :: Poisson distributed with mean m^3/(4n).  Experience shows n   ::        
     :: must be quite large, say n>=2^18, for comparing the results   ::        
     :: to the Poisson distribution with that mean.  This test uses   ::        
     :: n=2^24 and m=2^9,  so that the underlying distribution for j  ::        
     :: is taken to be Poisson with lambda=2^27/(2^26)=2.  A sample   ::        
     :: of 500 j's is taken, and a chi-square goodness of fit test    ::        
     :: provides a p value.  The first test uses bits 1-24 (counting  ::        
     :: from the left) from integers in the specified file.           ::        
     ::   Then the file is closed and reopened. Next, bits 2-25 are   ::        
     :: used to provide birthdays, then 3-26 and so on to bits 9-32.  ::        
     :: Each set of bits provides a p-value, and the nine p-values    ::        
     :: provide a sample for a KSTEST.                                ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 BIRTHDAY SPACINGS TEST, M= 512 N=2**24 LAMBDA=  2.0000
           Results for hcr_10mb.txt   
                   For a sample of size 500:     mean   
           hcr_10mb.txt    using bits  1 to 24   1.988
  duplicate       number       number 
  spacings       observed     expected
        0          70.       67.668
        1         138.      135.335
        2         131.      135.335
        3          81.       90.224
        4          57.       45.112
        5          17.       18.045
  6 to INF          6.        8.282
 Chisquare with  6 d.o.f. =     5.04 p-value=  .460887
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           hcr_10mb.txt    using bits  2 to 25   1.956
  duplicate       number       number 
  spacings       observed     expected
        0          67.       67.668
        1         147.      135.335
        2         129.      135.335
        3          94.       90.224
        4          36.       45.112
        5          18.       18.045
  6 to INF          9.        8.282
 Chisquare with  6 d.o.f. =     3.37 p-value=  .238747
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           hcr_10mb.txt    using bits  3 to 26   1.882
  duplicate       number       number 
  spacings       observed     expected
        0          80.       67.668
        1         136.      135.335
        2         133.      135.335
        3          94.       90.224
        4          35.       45.112
        5          16.       18.045
  6 to INF          6.        8.282
 Chisquare with  6 d.o.f. =     5.58 p-value=  .527694
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           hcr_10mb.txt    using bits  4 to 27   2.088
  duplicate       number       number 
  spacings       observed     expected
        0          59.       67.668
        1         140.      135.335
        2         126.      135.335
        3          96.       90.224
        4          46.       45.112
        5          22.       18.045
  6 to INF         11.        8.282
 Chisquare with  6 d.o.f. =     4.06 p-value=  .331635
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           hcr_10mb.txt    using bits  5 to 28   1.980
  duplicate       number       number 
  spacings       observed     expected
        0          76.       67.668
        1         122.      135.335
        2         130.      135.335
        3         102.       90.224
        4          52.       45.112
        5          14.       18.045
  6 to INF          4.        8.282
 Chisquare with  6 d.o.f. =     8.26 p-value=  .780308
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           hcr_10mb.txt    using bits  6 to 29   1.924
  duplicate       number       number 
  spacings       observed     expected
        0          66.       67.668
        1         150.      135.335
        2         142.      135.335
        3          78.       90.224
        4          37.       45.112
        5          19.       18.045
  6 to INF          8.        8.282
 Chisquare with  6 d.o.f. =     5.13 p-value=  .473151
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           hcr_10mb.txt    using bits  7 to 30   2.014
  duplicate       number       number 
  spacings       observed     expected
        0          73.       67.668
        1         122.      135.335
        2         128.      135.335
        3         108.       90.224
        4          47.       45.112
        5          15.       18.045
  6 to INF          7.        8.282
 Chisquare with  6 d.o.f. =     6.43 p-value=  .622739
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           hcr_10mb.txt    using bits  8 to 31   2.034
  duplicate       number       number 
  spacings       observed     expected
        0          69.       67.668
        1         127.      135.335
        2         140.      135.335
        3          87.       90.224
        4          50.       45.112
        5          17.       18.045
  6 to INF         10.        8.282
 Chisquare with  6 d.o.f. =     1.76 p-value=  .059780
  :::::::::::::::::::::::::::::::::::::::::
                   For a sample of size 500:     mean   
           hcr_10mb.txt    using bits  9 to 32   2.010
  duplicate       number       number 
  spacings       observed     expected
        0          73.       67.668
        1         130.      135.335
        2         131.      135.335
        3          93.       90.224
        4          43.       45.112
        5          22.       18.045
  6 to INF          8.        8.282
 Chisquare with  6 d.o.f. =     1.83 p-value=  .065372
  :::::::::::::::::::::::::::::::::::::::::
   The 9 p-values were
        .460887   .238747   .527694   .331635   .780308
        .473151   .622739   .059780   .065372
  A KSTEST for the 9 p-values yields  .578939

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::            THE OVERLAPPING 5-PERMUTATION TEST                 ::        
     :: This is the OPERM5 test.  It looks at a sequence of one mill- ::        
     :: ion 32-bit random integers.  Each set of five consecutive     ::        
     :: integers can be in one of 120 states, for the 5! possible or- ::        
     :: derings of five numbers.  Thus the 5th, 6th, 7th,...numbers   ::        
     :: each provide a state. As many thousands of state transitions  ::        
     :: are observed,  cumulative counts are made of the number of    ::        
     :: occurences of each state.  Then the quadratic form in the     ::        
     :: weak inverse of the 120x120 covariance matrix yields a test   ::        
     :: equivalent to the likelihood ratio test that the 120 cell     ::        
     :: counts came from the specified (asymptotically) normal dis-   ::        
     :: tribution with the specified 120x120 covariance matrix (with  ::        
     :: rank 99).  This version uses 1,000,000 integers, twice.       ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           OPERM5 test for file hcr_10mb.txt   
     For a sample of 1,000,000 consecutive 5-tuples,
 chisquare for 99 degrees of freedom= 78.755; p-value= .066496
           OPERM5 test for file hcr_10mb.txt   
     For a sample of 1,000,000 consecutive 5-tuples,
 chisquare for 99 degrees of freedom=112.110; p-value= .826582
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 31x31 matrices. The leftmost ::        
     :: 31 bits of 31 random integers from the test sequence are used ::        
     :: to form a 31x31 binary matrix over the field {0,1}. The rank  ::        
     :: is determined. That rank can be from 0 to 31, but ranks< 28   ::        
     :: are rare, and their counts are pooled with those for rank 28. ::        
     :: Ranks are found for 40,000 such random matrices and a chisqua-::        
     :: re test is performed on counts for ranks 31,30,29 and <=28.   ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
    Binary rank test for hcr_10mb.txt   
         Rank test for 31x31 binary matrices:
        rows from leftmost 31 bits of each 32-bit integer
      rank   observed  expected (o-e)^2/e  sum
        28       220     211.4   .348364     .348
        29      5062    5134.0  1.010025    1.358
        30     23233   23103.0   .730978    2.089
        31     11485   11551.5   .383109    2.472
  chisquare= 2.472 for 3 d. of f.; p-value= .577642
--------------------------------------------------------------
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 32x32 matrices. A random 32x ::        
     :: 32 binary matrix is formed, each row a 32-bit random integer. ::        
     :: The rank is determined. That rank can be from 0 to 32, ranks  ::        
     :: less than 29 are rare, and their counts are pooled with those ::        
     :: for rank 29.  Ranks are found for 40,000 such random matrices ::        
     :: and a chisquare test is performed on counts for ranks  32,31, ::        
     :: 30 and <=29.                                                  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
    Binary rank test for hcr_10mb.txt   
         Rank test for 32x32 binary matrices:
        rows from leftmost 32 bits of each 32-bit integer
      rank   observed  expected (o-e)^2/e  sum
        29       213     211.4   .011838     .012
        30      5126    5134.0   .012498     .024
        31     23190   23103.0   .327266     .352
        32     11471   11551.5   .561327     .913
  chisquare=  .913 for 3 d. of f.; p-value= .347363
--------------------------------------------------------------

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the BINARY RANK TEST for 6x8 matrices.  From each of  ::        
     :: six random 32-bit integers from the generator under test, a   ::        
     :: specified byte is chosen, and the resulting six bytes form a  ::        
     :: 6x8 binary matrix whose rank is determined.  That rank can be ::        
     :: from 0 to 6, but ranks 0,1,2,3 are rare; their counts are     ::        
     :: pooled with those for rank 4. Ranks are found for 100,000     ::        
     :: random matrices, and a chi-square test is performed on        ::        
     :: counts for ranks 6,5 and <=4.                                 ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
         Binary Rank Test for hcr_10mb.txt   
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG hcr_10mb.txt   
     b-rank test for bits  1 to  8
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          928       944.3        .281        .281
          r =5        21454     21743.9       3.865       4.147
          r =6        77618     77311.8       1.213       5.359
                        p=1-exp(-SUM/2)= .93141
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG hcr_10mb.txt   
     b-rank test for bits  2 to  9
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          941       944.3        .012        .012
          r =5        21392     21743.9       5.695       5.707
          r =6        77667     77311.8       1.632       7.339
                        p=1-exp(-SUM/2)= .97450
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG hcr_10mb.txt   
     b-rank test for bits  3 to 10
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          967       944.3        .546        .546
          r =5        21680     21743.9        .188        .733
          r =6        77353     77311.8        .022        .755
                        p=1-exp(-SUM/2)= .31455
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG hcr_10mb.txt   
     b-rank test for bits  4 to 11
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          962       944.3        .332        .332
          r =5        21624     21743.9        .661        .993
          r =6        77414     77311.8        .135       1.128
                        p=1-exp(-SUM/2)= .43106
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG hcr_10mb.txt   
     b-rank test for bits  5 to 12
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4         1004       944.3       3.774       3.774
          r =5        21684     21743.9        .165       3.939
          r =6        77312     77311.8        .000       3.939
                        p=1-exp(-SUM/2)= .86049
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG hcr_10mb.txt   
     b-rank test for bits  6 to 13
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          952       944.3        .063        .063
          r =5        21809     21743.9        .195        .258
          r =6        77239     77311.8        .069        .326
                        p=1-exp(-SUM/2)= .15051
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG hcr_10mb.txt   
     b-rank test for bits  7 to 14
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          968       944.3        .595        .595
          r =5        21770     21743.9        .031        .626
          r =6        77262     77311.8        .032        .658
                        p=1-exp(-SUM/2)= .28042
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG hcr_10mb.txt   
     b-rank test for bits  8 to 15
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          958       944.3        .199        .199
          r =5        21655     21743.9        .363        .562
          r =6        77387     77311.8        .073        .635
                        p=1-exp(-SUM/2)= .27215
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG hcr_10mb.txt   
     b-rank test for bits  9 to 16
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          976       944.3       1.064       1.064
          r =5        21663     21743.9        .301       1.365
          r =6        77361     77311.8        .031       1.396
                        p=1-exp(-SUM/2)= .50251
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG hcr_10mb.txt   
     b-rank test for bits 10 to 17
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          973       944.3        .872        .872
          r =5        21811     21743.9        .207       1.079
          r =6        77216     77311.8        .119       1.198
                        p=1-exp(-SUM/2)= .45063
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG hcr_10mb.txt   
     b-rank test for bits 11 to 18
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          923       944.3        .481        .481
          r =5        21876     21743.9        .803       1.283
          r =6        77201     77311.8        .159       1.442
                        p=1-exp(-SUM/2)= .51370
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG hcr_10mb.txt   
     b-rank test for bits 12 to 19
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          890       944.3       3.123       3.123
          r =5        21636     21743.9        .535       3.658
          r =6        77474     77311.8        .340       3.998
                        p=1-exp(-SUM/2)= .86455
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG hcr_10mb.txt   
     b-rank test for bits 13 to 20
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          962       944.3        .332        .332
          r =5        21452     21743.9       3.919       4.250
          r =6        77586     77311.8        .972       5.223
                        p=1-exp(-SUM/2)= .92657
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG hcr_10mb.txt   
     b-rank test for bits 14 to 21
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          897       944.3       2.369       2.369
          r =5        21766     21743.9        .022       2.392
          r =6        77337     77311.8        .008       2.400
                        p=1-exp(-SUM/2)= .69881
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG hcr_10mb.txt   
     b-rank test for bits 15 to 22
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          927       944.3        .317        .317
          r =5        21819     21743.9        .259        .576
          r =6        77254     77311.8        .043        .620
                        p=1-exp(-SUM/2)= .26640
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG hcr_10mb.txt   
     b-rank test for bits 16 to 23
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          956       944.3        .145        .145
          r =5        21678     21743.9        .200        .345
          r =6        77366     77311.8        .038        .383
                        p=1-exp(-SUM/2)= .17414
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG hcr_10mb.txt   
     b-rank test for bits 17 to 24
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          926       944.3        .355        .355
          r =5        21910     21743.9       1.269       1.624
          r =6        77164     77311.8        .283       1.906
                        p=1-exp(-SUM/2)= .61443
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG hcr_10mb.txt   
     b-rank test for bits 18 to 25
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          951       944.3        .048        .048
          r =5        21755     21743.9        .006        .053
          r =6        77294     77311.8        .004        .057
                        p=1-exp(-SUM/2)= .02824
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG hcr_10mb.txt   
     b-rank test for bits 19 to 26
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          948       944.3        .014        .014
          r =5        21830     21743.9        .341        .355
          r =6        77222     77311.8        .104        .460
                        p=1-exp(-SUM/2)= .20536
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG hcr_10mb.txt   
     b-rank test for bits 20 to 27
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          929       944.3        .248        .248
          r =5        21664     21743.9        .294        .542
          r =6        77407     77311.8        .117        .659
                        p=1-exp(-SUM/2)= .28063
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG hcr_10mb.txt   
     b-rank test for bits 21 to 28
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          904       944.3       1.720       1.720
          r =5        21749     21743.9        .001       1.721
          r =6        77347     77311.8        .016       1.737
                        p=1-exp(-SUM/2)= .58046
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG hcr_10mb.txt   
     b-rank test for bits 22 to 29
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          896       944.3       2.471       2.471
          r =5        21821     21743.9        .273       2.744
          r =6        77283     77311.8        .011       2.755
                        p=1-exp(-SUM/2)= .74776
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG hcr_10mb.txt   
     b-rank test for bits 23 to 30
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          939       944.3        .030        .030
          r =5        21695     21743.9        .110        .140
          r =6        77366     77311.8        .038        .178
                        p=1-exp(-SUM/2)= .08503
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG hcr_10mb.txt   
     b-rank test for bits 24 to 31
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          895       944.3       2.574       2.574
          r =5        21829     21743.9        .333       2.907
          r =6        77276     77311.8        .017       2.924
                        p=1-exp(-SUM/2)= .76818
        Rank of a 6x8 binary matrix,
     rows formed from eight bits of the RNG hcr_10mb.txt   
     b-rank test for bits 25 to 32
                     OBSERVED   EXPECTED     (O-E)^2/E      SUM
          r<=4          925       944.3        .395        .395
          r =5        21520     21743.9       2.306       2.700
          r =6        77555     77311.8        .765       3.465
                        p=1-exp(-SUM/2)= .82316
   TEST SUMMARY, 25 tests on 100,000 random 6x8 matrices
 These should be 25 uniform [0,1] random variables:
     .931409     .974505     .314551     .431061     .860485
     .150507     .280418     .272154     .502515     .450634
     .513699     .864547     .926568     .698814     .266403
     .174136     .614434     .028237     .205361     .280629
     .580464     .747758     .085029     .768184     .823163
   brank test summary for hcr_10mb.txt   
       The KS test for those 25 supposed UNI's yields
                    KS p-value= .008776

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::                   THE BITSTREAM TEST                          ::        
     :: The file under test is viewed as a stream of bits. Call them  ::        
     :: b1,b2,... .  Consider an alphabet with two "letters", 0 and 1 ::        
     :: and think of the stream of bits as a succession of 20-letter  ::        
     :: "words", overlapping.  Thus the first word is b1b2...b20, the ::        
     :: second is b2b3...b21, and so on.  The bitstream test counts   ::        
     :: the number of missing 20-letter (20-bit) words in a string of ::        
     :: 2^21 overlapping 20-letter words.  There are 2^20 possible 20 ::        
     :: letter words.  For a truly random string of 2^21+19 bits, the ::        
     :: number of missing words j should be (very close to) normally  ::        
     :: distributed with mean 141,909 and sigma 428.  Thus            ::        
     ::  (j-141909)/428 should be a standard normal variate (z score) ::        
     :: that leads to a uniform [0,1) p value.  The test is repeated  ::        
     :: twenty times.                                                 ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 THE OVERLAPPING 20-tuples BITSTREAM  TEST, 20 BITS PER WORD, N words
   This test uses N=2^21 and samples the bitstream 20 times.
  No. missing words should average  141909. with sigma=428.
---------------------------------------------------------
 tst no  1:  142051 missing words,     .33 sigmas from mean, p-value= .62968
 tst no  2:  141234 missing words,   -1.58 sigmas from mean, p-value= .05730
 tst no  3:  141469 missing words,   -1.03 sigmas from mean, p-value= .15179
 tst no  4:  141268 missing words,   -1.50 sigmas from mean, p-value= .06701
 tst no  5:  140836 missing words,   -2.51 sigmas from mean, p-value= .00607
 tst no  6:  142123 missing words,     .50 sigmas from mean, p-value= .69119
 tst no  7:  141840 missing words,    -.16 sigmas from mean, p-value= .43566
 tst no  8:  142210 missing words,     .70 sigmas from mean, p-value= .75882
 tst no  9:  141745 missing words,    -.38 sigmas from mean, p-value= .35051
 tst no 10:  142054 missing words,     .34 sigmas from mean, p-value= .63233
 tst no 11:  142016 missing words,     .25 sigmas from mean, p-value= .59841
 tst no 12:  142800 missing words,    2.08 sigmas from mean, p-value= .98128
 tst no 13:  142085 missing words,     .41 sigmas from mean, p-value= .65926
 tst no 14:  141848 missing words,    -.14 sigmas from mean, p-value= .44303
 tst no 15:  141662 missing words,    -.58 sigmas from mean, p-value= .28168
 tst no 16:  141998 missing words,     .21 sigmas from mean, p-value= .58206
 tst no 17:  141707 missing words,    -.47 sigmas from mean, p-value= .31820
 tst no 18:  141524 missing words,    -.90 sigmas from mean, p-value= .18398
 tst no 19:  142338 missing words,    1.00 sigmas from mean, p-value= .84172
 tst no 20:  142512 missing words,    1.41 sigmas from mean, p-value= .92045

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::             The tests OPSO, OQSO and DNA                      ::        
     ::         OPSO means Overlapping-Pairs-Sparse-Occupancy         ::        
     :: The OPSO test considers 2-letter words from an alphabet of    ::        
     :: 1024 letters.  Each letter is determined by a specified ten   ::        
     :: bits from a 32-bit integer in the sequence to be tested. OPSO ::        
     :: generates  2^21 (overlapping) 2-letter words  (from 2^21+1    ::        
     :: "keystrokes")  and counts the number of missing words---that  ::        
     :: is 2-letter words which do not appear in the entire sequence. ::        
     :: That count should be very close to normally distributed with  ::        
     :: mean 141,909, sigma 290. Thus (missingwrds-141909)/290 should ::        
     :: be a standard normal variable. The OPSO test takes 32 bits at ::        
     :: a time from the test file and uses a designated set of ten    ::        
     :: consecutive bits. It then restarts the file for the next de-  ::        
     :: signated 10 bits, and so on.                                  ::        
     ::                                                               ::        
     ::     OQSO means Overlapping-Quadruples-Sparse-Occupancy        ::        
     ::   The test OQSO is similar, except that it considers 4-letter ::        
     :: words from an alphabet of 32 letters, each letter determined  ::        
     :: by a designated string of 5 consecutive bits from the test    ::        
     :: file, elements of which are assumed 32-bit random integers.   ::        
     :: The mean number of missing words in a sequence of 2^21 four-  ::        
     :: letter words,  (2^21+3 "keystrokes"), is again 141909, with   ::        
     :: sigma = 295.  The mean is based on theory; sigma comes from   ::        
     :: extensive simulation.                                         ::        
     ::                                                               ::        
     ::    The DNA test considers an alphabet of 4 letters::  C,G,A,T,::        
     :: determined by two designated bits in the sequence of random   ::        
     :: integers being tested.  It considers 10-letter words, so that ::        
     :: as in OPSO and OQSO, there are 2^20 possible words, and the   ::        
     :: mean number of missing words from a string of 2^21  (over-    ::        
     :: lapping)  10-letter  words (2^21+9 "keystrokes") is 141909.   ::        
     :: The standard deviation sigma=339 was determined as for OQSO   ::        
     :: by simulation.  (Sigma for OPSO, 290, is the true value (to   ::        
     :: three places), not determined by simulation.                  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 OPSO test for generator hcr_10mb.txt   
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
    OPSO for hcr_10mb.txt    using bits 23 to 32        141991   .282  .6109
    OPSO for hcr_10mb.txt    using bits 22 to 31        141832  -.267  .3949
    OPSO for hcr_10mb.txt    using bits 21 to 30        142059   .516  .6971
    OPSO for hcr_10mb.txt    using bits 20 to 29        141622  -.991  .1609
    OPSO for hcr_10mb.txt    using bits 19 to 28        141764  -.501  .3081
    OPSO for hcr_10mb.txt    using bits 18 to 27        141898  -.039  .4844
    OPSO for hcr_10mb.txt    using bits 17 to 26        142429  1.792  .9634
    OPSO for hcr_10mb.txt    using bits 16 to 25        141670  -.825  .2046
    OPSO for hcr_10mb.txt    using bits 15 to 24        141253 -2.263  .0118
    OPSO for hcr_10mb.txt    using bits 14 to 23        141759  -.518  .3021
    OPSO for hcr_10mb.txt    using bits 13 to 22        141968   .202  .5802
    OPSO for hcr_10mb.txt    using bits 12 to 21        142088   .616  .7311
    OPSO for hcr_10mb.txt    using bits 11 to 20        141794  -.398  .3454
    OPSO for hcr_10mb.txt    using bits 10 to 19        141477 -1.491  .0680
    OPSO for hcr_10mb.txt    using bits  9 to 18        142158   .857  .8044
    OPSO for hcr_10mb.txt    using bits  8 to 17        141965   .192  .5761
    OPSO for hcr_10mb.txt    using bits  7 to 16        142356  1.540  .9383
    OPSO for hcr_10mb.txt    using bits  6 to 15        141548 -1.246  .1064
    OPSO for hcr_10mb.txt    using bits  5 to 14        141950   .140  .5558
    OPSO for hcr_10mb.txt    using bits  4 to 13        141844  -.225  .4109
    OPSO for hcr_10mb.txt    using bits  3 to 12        142557  2.233  .9872
    OPSO for hcr_10mb.txt    using bits  2 to 11        141849  -.208  .4176
    OPSO for hcr_10mb.txt    using bits  1 to 10        141889  -.070  .4721
 OQSO test for generator hcr_10mb.txt   
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
    OQSO for hcr_10mb.txt    using bits 28 to 32        142055   .494  .6893
    OQSO for hcr_10mb.txt    using bits 27 to 31        142208  1.012  .8443
    OQSO for hcr_10mb.txt    using bits 26 to 30        141203 -2.394  .0083
    OQSO for hcr_10mb.txt    using bits 25 to 29        142236  1.107  .8659
    OQSO for hcr_10mb.txt    using bits 24 to 28        141553 -1.208  .1135
    OQSO for hcr_10mb.txt    using bits 23 to 27        142028   .402  .6563
    OQSO for hcr_10mb.txt    using bits 22 to 26        141927   .060  .5239
    OQSO for hcr_10mb.txt    using bits 21 to 25        141799  -.374  .3542
    OQSO for hcr_10mb.txt    using bits 20 to 24        141447 -1.567  .0585
    OQSO for hcr_10mb.txt    using bits 19 to 23        142332  1.433  .9240
    OQSO for hcr_10mb.txt    using bits 18 to 22        141882  -.093  .4631
    OQSO for hcr_10mb.txt    using bits 17 to 21        141912   .009  .5036
    OQSO for hcr_10mb.txt    using bits 16 to 20        141945   .121  .5481
    OQSO for hcr_10mb.txt    using bits 15 to 19        142039   .440  .6699
    OQSO for hcr_10mb.txt    using bits 14 to 18        141353 -1.886  .0297
    OQSO for hcr_10mb.txt    using bits 13 to 17        140633 -4.327  .0000
    OQSO for hcr_10mb.txt    using bits 12 to 16        142048   .470  .6808
    OQSO for hcr_10mb.txt    using bits 11 to 15        141951   .141  .5562
    OQSO for hcr_10mb.txt    using bits 10 to 14        141468 -1.496  .0673
    OQSO for hcr_10mb.txt    using bits  9 to 13        141892  -.059  .4766
    OQSO for hcr_10mb.txt    using bits  8 to 12        142152   .823  .7946
    OQSO for hcr_10mb.txt    using bits  7 to 11        141345 -1.913  .0279
    OQSO for hcr_10mb.txt    using bits  6 to 10        141364 -1.849  .0323
    OQSO for hcr_10mb.txt    using bits  5 to  9        142087   .602  .7265
    OQSO for hcr_10mb.txt    using bits  4 to  8        142420  1.731  .9583
    OQSO for hcr_10mb.txt    using bits  3 to  7        142253  1.165  .8780
    OQSO for hcr_10mb.txt    using bits  2 to  6        141409 -1.696  .0449
    OQSO for hcr_10mb.txt    using bits  1 to  5        141593 -1.072  .1418
  DNA test for generator hcr_10mb.txt   
  Output: No. missing words (mw), equiv normal variate (z), p-value (p)
                                                           mw     z     p
     DNA for hcr_10mb.txt    using bits 31 to 32        142116   .610  .7290
     DNA for hcr_10mb.txt    using bits 30 to 31        141427 -1.423  .0774
     DNA for hcr_10mb.txt    using bits 29 to 30        142324  1.223  .8894
     DNA for hcr_10mb.txt    using bits 28 to 29        141952   .126  .5501
     DNA for hcr_10mb.txt    using bits 27 to 28        142023   .335  .6313
     DNA for hcr_10mb.txt    using bits 26 to 27        141766  -.423  .3362
     DNA for hcr_10mb.txt    using bits 25 to 26        141982   .214  .5849
     DNA for hcr_10mb.txt    using bits 24 to 25        141829  -.237  .4063
     DNA for hcr_10mb.txt    using bits 23 to 24        141754  -.458  .3234
     DNA for hcr_10mb.txt    using bits 22 to 23        142625  2.111  .9826
     DNA for hcr_10mb.txt    using bits 21 to 22        141873  -.107  .4573
     DNA for hcr_10mb.txt    using bits 20 to 21        142062   .450  .6738
     DNA for hcr_10mb.txt    using bits 19 to 20        142280  1.093  .8629
     DNA for hcr_10mb.txt    using bits 18 to 19        142115   .607  .7280
     DNA for hcr_10mb.txt    using bits 17 to 18        141590  -.942  .1731
     DNA for hcr_10mb.txt    using bits 16 to 17        142034   .368  .6435
     DNA for hcr_10mb.txt    using bits 15 to 16        142030   .356  .6391
     DNA for hcr_10mb.txt    using bits 14 to 15        141904  -.016  .4937
     DNA for hcr_10mb.txt    using bits 13 to 14        140981 -2.738  .0031
     DNA for hcr_10mb.txt    using bits 12 to 13        141833  -.225  .4109
     DNA for hcr_10mb.txt    using bits 11 to 12        141880  -.087  .4655
     DNA for hcr_10mb.txt    using bits 10 to 11        141990   .238  .5940
     DNA for hcr_10mb.txt    using bits  9 to 10        141539 -1.092  .1373
     DNA for hcr_10mb.txt    using bits  8 to  9        141687  -.656  .2560
     DNA for hcr_10mb.txt    using bits  7 to  8        142540  1.860  .9686
     DNA for hcr_10mb.txt    using bits  6 to  7        142215   .902  .8164
     DNA for hcr_10mb.txt    using bits  5 to  6        141641  -.792  .2143
     DNA for hcr_10mb.txt    using bits  4 to  5        142032   .362  .6413
     DNA for hcr_10mb.txt    using bits  3 to  4        141588  -.948  .1716
     DNA for hcr_10mb.txt    using bits  2 to  3        142146   .698  .7575
     DNA for hcr_10mb.txt    using bits  1 to  2        141911   .005  .5020

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the COUNT-THE-1's TEST on a stream of bytes.      ::        
     :: Consider the file under test as a stream of bytes (four per   ::        
     :: 32 bit integer).  Each byte can contain from 0 to 8 1's,      ::        
     :: with probabilities 1,8,28,56,70,56,28,8,1 over 256.  Now let  ::        
     :: the stream of bytes provide a string of overlapping  5-letter ::        
     :: words, each "letter" taking values A,B,C,D,E. The letters are ::        
     :: determined by the number of 1's in a byte::  0,1,or 2 yield A,::        
     :: 3 yields B, 4 yields C, 5 yields D and 6,7 or 8 yield E. Thus ::        
     :: we have a monkey at a typewriter hitting five keys with vari- ::        
     :: ous probabilities (37,56,70,56,37 over 256).  There are 5^5   ::        
     :: possible 5-letter words, and from a string of 256,000 (over-  ::        
     :: lapping) 5-letter words, counts are made on the frequencies   ::        
     :: for each word.   The quadratic form in the weak inverse of    ::        
     :: the covariance matrix of the cell counts provides a chisquare ::        
     :: test::  Q5-Q4, the difference of the naive Pearson sums of    ::        
     :: (OBS-EXP)^2/EXP on counts for 5- and 4-letter cell counts.    ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
   Test results for hcr_10mb.txt   
 Chi-square with 5^5-5^4=2500 d.of f. for sample size:2560000
                               chisquare  equiv normal  p-value
  Results fo COUNT-THE-1's in successive bytes:
 byte stream for hcr_10mb.txt     2544.56       .630      .735711
 byte stream for hcr_10mb.txt     2551.55       .729      .767018

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the COUNT-THE-1's TEST for specific bytes.        ::        
     :: Consider the file under test as a stream of 32-bit integers.  ::        
     :: From each integer, a specific byte is chosen , say the left-  ::        
     :: most::  bits 1 to 8. Each byte can contain from 0 to 8 1's,   ::        
     :: with probabilitie 1,8,28,56,70,56,28,8,1 over 256.  Now let   ::        
     :: the specified bytes from successive integers provide a string ::        
     :: of (overlapping) 5-letter words, each "letter" taking values  ::        
     :: A,B,C,D,E. The letters are determined  by the number of 1's,  ::        
     :: in that byte::  0,1,or 2 ---> A, 3 ---> B, 4 ---> C, 5 ---> D,::        
     :: and  6,7 or 8 ---> E.  Thus we have a monkey at a typewriter  ::        
     :: hitting five keys with with various probabilities::  37,56,70,::        
     :: 56,37 over 256. There are 5^5 possible 5-letter words, and    ::        
     :: from a string of 256,000 (overlapping) 5-letter words, counts ::        
     :: are made on the frequencies for each word. The quadratic form ::        
     :: in the weak inverse of the covariance matrix of the cell      ::        
     :: counts provides a chisquare test::  Q5-Q4, the difference of  ::        
     :: the naive Pearson  sums of (OBS-EXP)^2/EXP on counts for 5-   ::        
     :: and 4-letter cell counts.                                     ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
 Chi-square with 5^5-5^4=2500 d.of f. for sample size: 256000
                      chisquare  equiv normal  p value
  Results for COUNT-THE-1's in specified bytes:
           bits  1 to  8  2377.98     -1.726      .042209
           bits  2 to  9  2396.45     -1.464      .071540
           bits  3 to 10  2502.25       .032      .512671
           bits  4 to 11  2501.40       .020      .507899
           bits  5 to 12  2659.30      2.253      .987863
           bits  6 to 13  2482.18      -.252      .400510
           bits  7 to 14  2451.60      -.684      .246839
           bits  8 to 15  2428.97     -1.004      .157572
           bits  9 to 16  2548.82       .690      .755053
           bits 10 to 17  2448.93      -.722      .235090
           bits 11 to 18  2460.48      -.559      .288126
           bits 12 to 19  2393.20     -1.510      .065465
           bits 13 to 20  2603.49      1.464      .928341
           bits 14 to 21  2449.68      -.712      .238349
           bits 15 to 22  2530.75       .435      .668185
           bits 16 to 23  2479.13      -.295      .383915
           bits 17 to 24  2644.64      2.046      .979601
           bits 18 to 25  2568.61       .970      .834066
           bits 19 to 26  2475.90      -.341      .366600
           bits 20 to 27  2487.35      -.179      .429015
           bits 21 to 28  2478.32      -.307      .379575
           bits 22 to 29  2507.67       .108      .543164
           bits 23 to 30  2580.85      1.143      .873565
           bits 24 to 31  2495.04      -.070      .472024
           bits 25 to 32  2487.52      -.177      .429948

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::               THIS IS A PARKING LOT TEST                      ::        
     :: In a square of side 100, randomly "park" a car---a circle of  ::        
     :: radius 1.   Then try to park a 2nd, a 3rd, and so on, each    ::        
     :: time parking "by ear".  That is, if an attempt to park a car  ::        
     :: causes a crash with one already parked, try again at a new    ::        
     :: random location. (To avoid path problems, consider parking    ::        
     :: helicopters rather than cars.)   Each attempt leads to either ::        
     :: a crash or a success, the latter followed by an increment to  ::        
     :: the list of cars already parked. If we plot n:  the number of ::        
     :: attempts, versus k::  the number successfully parked, we get a::        
     :: curve that should be similar to those provided by a perfect   ::        
     :: random number generator.  Theory for the behavior of such a   ::        
     :: random curve seems beyond reach, and as graphics displays are ::        
     :: not available for this battery of tests, a simple characteriz ::        
     :: ation of the random experiment is used: k, the number of cars ::        
     :: successfully parked after n=12,000 attempts. Simulation shows ::        
     :: that k should average 3523 with sigma 21.9 and is very close  ::        
     :: to normally distributed.  Thus (k-3523)/21.9 should be a st-  ::        
     :: andard normal variable, which, converted to a uniform varia-  ::        
     :: ble, provides input to a KSTEST based on a sample of 10.      ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           CDPARK: result of ten tests on file hcr_10mb.txt   
            Of 12,000 tries, the average no. of successes
                 should be 3523 with sigma=21.9
            Successes: 3474    z-score: -2.237 p-value: .012629
            Successes: 3535    z-score:   .548 p-value: .708135
            Successes: 3531    z-score:   .365 p-value: .642555
            Successes: 3557    z-score:  1.553 p-value: .939730
            Successes: 3536    z-score:   .594 p-value: .723613
            Successes: 3519    z-score:  -.183 p-value: .427537
            Successes: 3518    z-score:  -.228 p-value: .409702
            Successes: 3507    z-score:  -.731 p-value: .232514
            Successes: 3523    z-score:   .000 p-value: .500000
            Successes: 3525    z-score:   .091 p-value: .536382
 
           square size   avg. no.  parked   sample sigma
             100.            3522.500       20.575
            KSTEST for the above 10: p=  .183784

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::               THE MINIMUM DISTANCE TEST                       ::        
     :: It does this 100 times::   choose n=8000 random points in a   ::        
     :: square of side 10000.  Find d, the minimum distance between   ::        
     :: the (n^2-n)/2 pairs of points.  If the points are truly inde- ::        
     :: pendent uniform, then d^2, the square of the minimum distance ::        
     :: should be (very close to) exponentially distributed with mean ::        
     :: .995 .  Thus 1-exp(-d^2/.995) should be uniform on [0,1) and  ::        
     :: a KSTEST on the resulting 100 values serves as a test of uni- ::        
     :: formity for random points in the square. Test numbers=0 mod 5 ::        
     :: are printed but the KSTEST is based on the full set of 100    ::        
     :: random choices of 8000 points in the 10000x10000 square.      ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
               This is the MINIMUM DISTANCE test
              for random integers in the file hcr_10mb.txt   
     Sample no.    d^2     avg     equiv uni            
           5    1.0508    .8679     .652171
          10     .4305   1.0452     .351245
          15     .1323    .8934     .124490
          20     .3997    .8567     .330825
          25    1.1872    .9896     .696739
          30     .1567    .9687     .145672
          35     .0130    .8876     .013011
          40     .7005    .9568     .505414
          45     .1176    .9561     .111440
          50    3.1584    .9982     .958177
          55     .7173    .9905     .513705
          60     .0763   1.0047     .073774
          65    2.1583   1.0275     .885727
          70     .5016    .9972     .395978
          75     .3568    .9998     .301334
          80    1.0355    .9768     .646792
          85     .2734    .9489     .240221
          90     .3405    .9551     .289789
          95     .6876    .9458     .498970
         100    4.2368    .9661     .985851
     MINIMUM DISTANCE TEST for hcr_10mb.txt   
          Result of KS test on 20 transformed mindist^2's:
                                  p-value= .068388

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ 

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::              THE 3DSPHERES TEST                               ::        
     :: Choose  4000 random points in a cube of edge 1000.  At each   ::        
     :: point, center a sphere large enough to reach the next closest ::        
     :: point. Then the volume of the smallest such sphere is (very   ::        
     :: close to) exponentially distributed with mean 120pi/3.  Thus  ::        
     :: the radius cubed is exponential with mean 30. (The mean is    ::        
     :: obtained by extensive simulation).  The 3DSPHERES test gener- ::        
     :: ates 4000 such spheres 20 times.  Each min radius cubed leads ::        
     :: to a uniform variable by means of 1-exp(-r^3/30.), then a     ::        
     ::  KSTEST is done on the 20 p-values.                           ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
               The 3DSPHERES test for file hcr_10mb.txt   
 sample no:  1     r^3=  47.908     p-value= .79748
 sample no:  2     r^3=   2.854     p-value= .09075
 sample no:  3     r^3=   5.867     p-value= .17763
 sample no:  4     r^3=  67.164     p-value= .89341
 sample no:  5     r^3=  23.145     p-value= .53767
 sample no:  6     r^3=  20.022     p-value= .48696
 sample no:  7     r^3=  25.262     p-value= .56918
 sample no:  8     r^3=   8.025     p-value= .23471
 sample no:  9     r^3=  14.179     p-value= .37664
 sample no: 10     r^3=   8.720     p-value= .25224
 sample no: 11     r^3=  18.620     p-value= .46241
 sample no: 12     r^3=  41.471     p-value= .74901
 sample no: 13     r^3=  14.446     p-value= .38217
 sample no: 14     r^3=  14.643     p-value= .38620
 sample no: 15     r^3=  23.804     p-value= .54772
 sample no: 16     r^3=  11.310     p-value= .31409
 sample no: 17     r^3=  29.150     p-value= .62155
 sample no: 18     r^3=  39.633     p-value= .73316
 sample no: 19     r^3=   1.985     p-value= .06401
 sample no: 20     r^3=  32.348     p-value= .65982
  A KS test is applied to those 20 p-values.
---------------------------------------------------------
       3DSPHERES test for file hcr_10mb.txt         p-value= .452709
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::      This is the SQEEZE test                                  ::        
     ::  Random integers are floated to get uniforms on [0,1). Start- ::        
     ::  ing with k=2^31=2147483647, the test finds j, the number of  ::        
     ::  iterations necessary to reduce k to 1, using the reduction   ::        
     ::  k=ceiling(k*U), with U provided by floating integers from    ::        
     ::  the file being tested.  Such j's are found 100,000 times,    ::        
     ::  then counts for the number of times j was <=6,7,...,47,>=48  ::        
     ::  are used to provide a chi-square test for cell frequencies.  ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
            RESULTS OF SQUEEZE TEST FOR hcr_10mb.txt   
         Table of standardized frequency counts
     ( (obs-exp)/sqrt(exp) )^2
        for j taking values <=6,7,8,...,47,>=48:
      .6    -2.0     -.8      .6     1.4      .9
     -.6     -.5      .5    -1.7      .8     1.2
     -.5     1.9     -.1      .5     -.2     -.1
     -.9      .1     -.3     -.7    -1.5      .4
     -.8     -.3     2.3     -.4     2.0     -.2
     -.9     -.5      .9    -1.2      .2      .2
     1.0     -.1    -1.6     -.1     -.6      .0
     -.1
           Chi-square with 42 degrees of freedom: 39.323
              z-score=  -.292  p-value= .410693
______________________________________________________________

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::             The  OVERLAPPING SUMS test                        ::        
     :: Integers are floated to get a sequence U(1),U(2),... of uni-  ::        
     :: form [0,1) variables.  Then overlapping sums,                 ::        
     ::   S(1)=U(1)+...+U(100), S2=U(2)+...+U(101),... are formed.    ::        
     :: The S's are virtually normal with a certain covariance mat-   ::        
     :: rix.  A linear transformation of the S's converts them to a   ::        
     :: sequence of independent standard normals, which are converted ::        
     :: to uniform variables for a KSTEST. The  p-values from ten     ::        
     :: KSTESTs are given still another KSTEST.                       ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
                Test no.  1      p-value  .736856
                Test no.  2      p-value  .412815
                Test no.  3      p-value  .261743
                Test no.  4      p-value  .256081
                Test no.  5      p-value  .902242
                Test no.  6      p-value  .246463
                Test no.  7      p-value  .494401
                Test no.  8      p-value  .848270
                Test no.  9      p-value  .141697
                Test no. 10      p-value  .233751
   Results of the OSUM test for hcr_10mb.txt   
        KSTEST on the above 10 p-values:  .372610

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     ::     This is the RUNS test.  It counts runs up, and runs down, ::        
     :: in a sequence of uniform [0,1) variables, obtained by float-  ::        
     :: ing the 32-bit integers in the specified file. This example   ::        
     :: shows how runs are counted:  .123,.357,.789,.425,.224,.416,.95::        
     :: contains an up-run of length 3, a down-run of length 2 and an ::        
     :: up-run of (at least) 2, depending on the next values.  The    ::        
     :: covariance matrices for the runs-up and runs-down are well    ::        
     :: known, leading to chisquare tests for quadratic forms in the  ::        
     :: weak inverses of the covariance matrices.  Runs are counted   ::        
     :: for sequences of length 10,000.  This is done ten times. Then ::        
     :: repeated.                                                     ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
           The RUNS test for file hcr_10mb.txt   
     Up and down runs in a sample of 10000
_________________________________________________ 
                 Run test for hcr_10mb.txt   :
       runs up; ks test for 10 p's: .700591
     runs down; ks test for 10 p's: .684637
                 Run test for hcr_10mb.txt   :
       runs up; ks test for 10 p's: .230057
     runs down; ks test for 10 p's: .644149

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
     :: This is the CRAPS TEST. It plays 200,000 games of craps, finds::        
     :: the number of wins and the number of throws necessary to end  ::        
     :: each game.  The number of wins should be (very close to) a    ::        
     :: normal with mean 200000p and variance 200000p(1-p), with      ::        
     :: p=244/495.  Throws necessary to complete the game can vary    ::        
     :: from 1 to infinity, but counts for all>21 are lumped with 21. ::        
     :: A chi-square test is made on the no.-of-throws cell counts.   ::        
     :: Each 32-bit integer from the test file provides the value for ::        
     :: the throw of a die, by floating to [0,1), multiplying by 6    ::        
     :: and taking 1 plus the integer part of the result.             ::        
     :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::        
                Results of craps test for hcr_10mb.txt   
  No. of wins:  Observed Expected
                                98574    98585.86
                  98574= No. of wins, z-score= -.053 pvalue= .47885
   Analysis of Throws-per-Game:
 Chisq=  12.74 for 20 degrees of freedom, p=  .11171
               Throws Observed Expected  Chisq     Sum
                  1    66743    66666.7    .087     .087
                  2    37561    37654.3    .231     .319
                  3    26903    26954.7    .099     .418
                  4    19295    19313.5    .018     .436
                  5    13812    13851.4    .112     .548
                  6    10062     9943.5   1.411    1.959
                  7     7072     7145.0    .746    2.705
                  8     5181     5139.1    .342    3.047
                  9     3705     3699.9    .007    3.055
                 10     2698     2666.3    .377    3.432
                 11     1902     1923.3    .237    3.668
                 12     1455     1388.7   3.161    6.829
                 13      941     1003.7   3.919   10.748
                 14      724      726.1    .006   10.754
                 15      536      525.8    .196   10.951
                 16      389      381.2    .162   11.112
                 17      291      276.5    .756   11.869
                 18      202      200.8    .007   11.875
                 19      149      146.0    .062   11.938
                 20      107      106.2    .006   11.944
                 21      272      287.1    .796   12.739
            SUMMARY  FOR hcr_10mb.txt   
                p-value for no. of wins: .478849
                p-value for throws/game: .111714

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

 Results of DIEHARD battery of tests sent to file reshcr.txt     
